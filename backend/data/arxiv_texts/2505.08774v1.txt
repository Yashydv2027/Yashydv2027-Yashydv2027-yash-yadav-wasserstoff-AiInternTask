GENERATIVE MOLECULAR DESIGN WITH STEERABLE AND
GRANULAR SYNTHESIZABILITY CONTROL
A PREPRINT
Jeff Guo1,2∗
jeff.guo@epfl.ch
Víctor Sabanza Gil1,2∗
victor.sabanzagil@epfl.ch
Zlatko Jonˇcev1
zlatko.joncev@epfl.ch
Jeremy S. Luterbacher1,2
jeremy.luterbacher@epfl.ch
Philippe Schwaller1,2
philippe.schwaller@epfl.ch
∗Equal contribution
1 École Polytechnique Fédérale de Lausanne (EPFL)
2 National Centre of Competence in Research (NCCR) Catalysis
Correspondence to {jeff.guo, philippe.schwaller}@epfl.ch
May 14, 2025
ABSTRACT
Synthesizability in small molecule generative design remains a bottleneck. Existing works that do
consider synthesizability can output predicted synthesis routes for generated molecules. However,
there has been minimal attention in addressing the ease of synthesis and enabling flexibility to
incorporate desired reaction constraints. In this work, we propose a small molecule generative design
framework that enables steerable and granular synthesizability control. Generated molecules satisfy
arbitrary multi-parameter optimization objectives with predicted synthesis routes containing pre-
defined allowed reactions, while optionally avoiding others. One can also enforce that all reactions
belong to a pre-defined set. We show the capability to mix-and-match these reaction constraints
across the most common medicinal chemistry transformations. Next, we show how our framework
can be used to valorize industrial waste, transforming waste byproducts into de novo generated
molecules targeting any arbitrary objective function. Going further, we demonstrate how granular
control over synthesizability constraints can loosely mimic virtual screening of ultra-large make-
on-demand libraries. Using only a single GPU, we generate and dock 15,000 molecules to identify
promising candidates in Chemspace’s Freedom space 4.0 constituting 142 billion make-on-demand
molecules (assessing only 0.00001% of the library). Generated molecules satisfying the reaction
constraints have > 90% exact match rate. Lastly, we benchmark our framework against recent
synthesizability-constrained generative models and demonstrate the highest sample efficiency even
when imposing the additional constraint that all molecules must be synthesizable from a single reaction
type. The main theme is demonstrating that a pre-trained generalist molecular generative model can
be incentivized to generate property-optimized small molecules under challenging synthesizability
constraints through reinforcement learning. The code is available at: https://github.com/
schwallergroup/saturn.
arXiv:2505.08774v1  [q-bio.BM]  13 May 2025
arXiv Template
A PREPRINT
Contents
1
Introduction
4
2
Methods
7
3
Experimental Setup
9
4
Framework Development Results
11
4.1
Development Experiments . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
11
4.1.1
Enforcing the Presence of Specified Reactions
. . . . . . . . . . . . . . . . . . . . . . . . .
11
4.1.2
Enforcing that the Synthesis Routes Only Contain Specified Reactions . . . . . . . . . . . . .
16
4.1.3
Reaction Co-emergence and Avoiding Undesired Reactions
. . . . . . . . . . . . . . . . . .
19
4.1.4
Incentivizing Shorter Synthesis Routes: Navigating the Pareto-front . . . . . . . . . . . . . .
21
5
Valorizing (Industrial) Waste into De Novo Molecules
24
6
Generative (Ultra-large-scale) Virtual Screening: Overcoming Library Scaling
27
7
Benchmarking Against Previous Synthesizability-constrained Generative Models
32
7.1
Efforts for Fair Benchmarking . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
32
7.2
Benchmarking Design Decisions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
33
7.3
Benchmarking Results
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
34
7.3.1
RGFN . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
35
7.3.2
SynFlowNet
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
37
7.3.3
RxnFlow
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
39
7.3.4
SynFormer . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
40
7.4
Post-benchmark General Observations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
41
8
Conclusion
43
A Saturn: Architecture and Reinforcement Learning Algorithm
46
B
Saturn PubChem Pre-training
47
C Rxn-INSIGHT: Reaction Name Definitions
48
D Rxn-INSIGHT vs. NameRxn
48
E
Benchmarking Experiments Additional Details
49
F
Waste Valorization Additional Details
50
G Additional Example Synthesis Routes
51
H Reaction-based Enumeration to Seed Generative Experiments
51
2
I
Experiments with 40M Building Blocks
51
J
Development Enforce Block Experiments
52
arXiv Template
A PREPRINT
Figure 1: Overview of the framework and all reaction constraints that can be imposed. All generated molecules have
a predicted synthesis route. Within these routes, reaction constraints include enforcing specific building blocks are
used, enforcing specific reactions, avoiding specific reactions, and minimizing the number of synthetic steps. Molecular
generation can mix-and-match these constraints which enables steerable and granular. The molecule SVG in the
middle was created using Molecule Icon Generator1.
1
Introduction
Designing and validating molecules are the two fundamental components of molecular discovery. Historically, domain
experts’ ingenuity (which remains paramount) guided the design process, a remarkable example of which is the
blockbuster drug atorvastatin (sold as Lipitor) to treat high cholesterol2. A key development in the last decade to
augment domain experts’ decision-making is enhanced capabilities of in silico molecular design, which has been
enabled by increasingly accessible compute. In the pharmaceutical industry, every prioritized molecule for experimental
validation now undergoes significantly more in silico validation3, in light of improved predictive accuracy for properties
of interest. An ubiquitous example is the prediction of binding affinity using molecular dynamics simulations4–6. This
is a natural progression as synthesis remains the major bottleneck so greater confidence in the designed compounds can
mitigate risk and accelerate experimental validation7. Correspondingly, the ability to run ultra-large-scale molecular
docking has enabled virtual screening (VS) of "make-on-demand" libraries (107−10 in size8), which can mitigate
synthesizability challenges as these libraries are often enumerated using well-known reactions9. These workflows
continue to achieve widespread success10–25 and are expected to improve with more compute and larger libraries.
However, while compute is becoming cheaper, ultra-large-scale libraries are growing exponentially, making screening
endeavors potentially prohibitively costly26. Building on the idea of grounding molecular design with well-known
reactions, in silico "on-the-fly" enumeration methods using selected reactions also have a rich history23,27–37 and has
potential to avoid screening ultra-large libraries by intentional expansion.
4
arXiv Template
A PREPRINT
More recently and since the first examples in 201638–42, machine learning (ML)-based generative molecular design has
rapidly increased in adoption. In 2024, there were more published case studies (in academia and industry) achieving
experimental validation than in the cumulative years before43–45. However, while promising, the same challenge
of synthesizability remains a limitation46–48. Without the constraint of curated reactions, generated molecules can
pose significant synthesis challenges that, while not necessarily impossible to synthesize, can make it practically
disadvantageous over existing VS and enumeration methods. Correspondingly, many existing approaches aim to
address this synthesizability bottleneck in the context of generative design. One approach is to pre-train specifically on
synthesizable molecules which implicitly learns a distribution of these molecules46,49. This enables generating new
likely-to-be synthesizable molecules. In this work, we focus instead on the paradigm where a notion of synthesizability
is explicitly considered or optimized for. We categorize three general approaches to this end:
(1) Synthesizability Heuristics. One approach is tailoring the generation to optimize for heuristics, e.g, assessing syn-
thesizability based on the presence or absence of commonly observed fragments in previously synthesized molecules50.
These heuristics50–60 can function as a noisy proxy for synthesizability and have been the most common approach as
they are computationally inexpensive to compute. Moreover, any generative model can be tasked to optimize for these
heuristics without changes to the underlying model formulation.
(2) Bottom-up Synthesizability-constrained. While synthesizability heuristics are and will continue to be practically
useful, more recent works explicitly address synthesizability by constraining the generative process. We broadly
define bottom-up approaches, which in the most general sense, combine available ‘building blocks‘, i.e., commercially
available reagents, with known reactions. Since the generative process itself is constrained, we will refer to these models
as synthesizability-constrained generative models60–81. More specifically, existing approaches commonly define a set of
permitted reactions and the generative process only combines together pairs of molecules that are reaction-compatible.
These approaches bear similarity to reaction-based enumeration but avoid explicit exhaustive enumeration and can thus
be more efficient.
(3) Top-down Retrosynthesis. Assessing synthesizability predates generative models, and the idea of "retrosynthesis"
was pioneered by E. J. Corey in the 70’s82,83. Retrosynthesis is the process of decomposing a target molecule into a set
of building blocks that form a synthesis route back to the target molecule. Since 2017, many ML methods for multi-step
retrosynthesis have been released and are enabled by coupling search algorithms84–89 to reactivity outcome prediction
models90–118. It follows that the last general approach to incorporating synthesizability in generative molecular design
is to either: 1) use these retrosynthesis models as a post-hoc filter 39,46,60,71,72,75,119–121 or 2) explicitly tailor molecular
generation where these retrosynthesis models successfully output a predicted synthesis route49,60,122–125. This last
approach can offer many advantages:
1. Modularity: By de-coupling the generative and synthesizability aspects, advancements in retrosynthesis models
directly benefit the generative model without any changes to the model formulation. Retrosynthesis models
can also be freely swapped.
2. Flexibility: Does not require re-training the generative model, and the building blocks and reactions sets of the
retrosynthesis models can be freely expanded or shrunk.
3. Chemistry Expertise Incorporation: Comparing retrosynthesis models and synthesizability-constrained gener-
ative models, the former can potentially offer a more rigorous assessment of synthesizability as the search
algorithms can mimic synthetic chemists, such as by temporarily adding molecular complexity in order to
yield a larger complexity decrease later126.
In this work, we introduce steerable and granular synthesizability control in small molecule generative design:
Generating molecules satisfying arbitrary multi-parameter optimization objectives while being synthesizable by
user-specified permitted reaction classes or specific reactions, while optionally avoiding others. The synthesis
routes can also optionally be enforced to incorporate a small set of user-specified building blocks.
We show that our proposed framework is a general approach and is malleable, enabling tailored generation towards
diverse and stringent synthesizability constraints. Compared to:
1. Bottom-up approaches (enumeration and generative-based), our framework only needs to assess a limited
number of candidates before optimal molecules can be generated (sample-efficient)
2. Ultra-large-scale VS which requires massively parallelized compute clusters, our framework can be run with a
single GPU-equipped computer. Our model, out-of-the-box, can also be tasked to perform essentially retrieval
of optimal molecules from these libraries in a sample-efficient manner
5
arXiv Template
A PREPRINT
Steerable and granular control over the synthesizability of generated molecules is more amenable to robotic synthesis
automation. Such platforms are often specialized to perform specific reactions and/or handle specific reagent types127–134
and enhanced synthesizability compatibility is an important step towards autonomous molecular discovery135,136. We
note that recent algorithms have been proposed to promote compatibility of a set of generated molecules for parallel
synthesis137,138. This is done by constraining the number of unique reaction classes required to synthesize a batch of
molecules, under the assumption that reactions belonging to the same class, can be performed in parallel. Building on
this idea, we will show in the Results section that our framework can directly generate property-optimized molecules
that have predicted synthesis routes involving a single user-specified reaction class, e.g., all generated molecules can be
synthesized using only amide coupling reactions.
Lastly, very recently, Iktos proposed molecular generation with reaction constraints in a series of two papers60,80.
In the earlier work60, it is stated that their retrosynthesis model, Spaya112, can return predicted synthesis routes
allowing specific reactions. This feedback is used to fine-tune their generative model which is an RNN (LSTM139) with
hill-climbing adapted from Neil et al. 140. This capability was only explicitly shown in their follow-up work80 with a
case study to generate molecules that have one-step predicted syntheses using Suzuki coupling. We cannot compare
to these works since the retrosynthesis code is proprietary. Here, we present an end-to-end open-source framework
capable of steering molecular generation under diverse, stringent, and granular reaction constraints (Figure 1).
6
arXiv Template
A PREPRINT
2
Methods
In this section, we describe each component of the framework: Saturn141 (our previously reported generative model),
Syntheseus142 (an interface for retrosynthesis models), Reaction Classification (to label reaction classes and names),
and Reward Formulation (how we make variable and granular degrees of synthesizability constraints learnable). Our
entire framework is end-to-end open-source.
Saturn: Molecular Generative Model. Saturn141 is a language-based molecular generative model using the Mamba143
architecture and pre-trained on the PubChem144 dataset in the SMILES145 format (see Appendix B for pre-training
details). Next, this pre-trained model is tuned with reinforcement learning (RL) to achieve goal-directed generation,
i.e., tailoring the generation of molecules towards user-specified property objectives. The specific RL algorithm is
Augmented Memory146, which we previously proposed by building on REINVENT’s algorithm40,147,148, which in
turn is a variant of REINFORCE149. Notably, Saturn is an unconditional, i.e., pre-training with unlabeled data and
unconstrained, i.e., generation always proceeds token-by-token with no inductive biases. We show that incentivizing
general-purpose models with a sample-efficient and malleable algorithm can successfully tackle challenging molecular
design objectives. We refer to Appendix A for details about the Mamba architecture and RL algorithm.
Syntheseus: Multi-step Retrosynthesis Framework. Given a target molecule, retrosynthesis models propose a
directed graph (synthesis route) with nodes and edges representing molecules and reactions, respectively. In this work,
we use Syntheseus142 which is a wrapper around single-step retrosynthesis models and search algorithms, allowing
mix-and-match formulations to tackle multi-step retrosynthesis. Unless otherwise stated, we use the eMolecules
stock (denoted Bstock) representing commercially available molecules (23,077,162 in size). The specific version of
eMolecules stock is from Chen et al. 86 and originally downloaded in Nov. 2019. We create an "Enforced Stock"
denoted (Benforced) by randomly sampling 100 molecules from eMolecules with the following criteria:
1. 150 ≤MW ≤200
2. No Stereochemistry
3. No aliphatic carbon chains > 2
4. No charged atoms
5. If a ring is present, then size = [5, 6]
6. Must contain at least 1 nitrogen, oxygen, or sulfur atom
We used these criteria to represent simple building blocks but other criteria could have been used, such as inexpensive
blocks or blocks derived from industrial byproducts, as we will show in Section 5. Through Syntheseus, we use the
MEGAN graph-edits97 model re-trained by the Syntheseus authors on USPTO-50k150,151. The search algorithm is
Retro*86 with a search time limit of 180 seconds or when the first route is found, whichever occurs first. We chose
MEGAN due to its fast inference for method development and future work could integrate more proficient models, such
as Chimera117 developed by the Syntheseus authors.
Reaction Classification. Syntheseus outputs a synthetic route resulting from the application of a single-step ret-
rosynthesis model and a search algorithm. We adopt a straightforward approach to label these synthesis routes with
reaction class and name information. Every chemical transformation from Syntheseus output is represented by a
reaction SMILES. We use Rxn-INSIGHT152 which takes as input reaction SMILES and performs 10-class classification
using bond-electron matrices, with the reaction class nomenclature following Carey et al. 153. Next, the reaction
name is retrieved by matching to a set of 527 reaction SMIRKS154. In this way, every Syntheseus route output is
augmented with reaction class and name information. We note that labeling the reaction class with Rxn-INSIGHT
adds a non-negligible amount of time to the generative experiments due to the need for atom mapping155 and can be
mitigated in two ways: (1) Leveraging multi-GPU nodes which we do not explore (due to GPU limitations and to
showcase a framework that any GPU-enabled setup can run) or (2) Using a template-based retrosynthesis model with
pre-labeled templates (such as the templates from Hartenfeller et al. 28 and Button et al. 29). The latter would remove the
need to label chemical transformations, as they would be directly outputted. However, we opted to not use this solution
as template-free models would be incompatible and we wanted a general solution. Moving forward, it is conceivable
that the "creativity" of template-free models can be desirable as we acquire more reaction data61,156. Template-free
models can also complement current template-based methods and offer their own advantages117. In the Results section,
we perform all experiments using Rxn-INSIGHT, thus constituting an end-to-end open-source framework. We also
implement NameRxn157 from NextMove Software as a proprietary solution for reaction labeling that is available with
licensing (from NextMove Software). Two important characteristics if NameRxn were used is that: (1) The reaction
labeling nomenclature differs from Rxn-INSIGHT and (2) NameRxn is much faster than Rxn-INSIGHT, such that the
labeling time is negligible. Our framework can freely toggle between Rxn-INSIGHT and NameRxn as the reaction
7
arXiv Template
A PREPRINT
labeling tool. See Appendix D for a detailed discussion on the nuances between Rxn-INSIGHT and NameRxn when
used in our framework.
Reward Formulation. Previously, we coupled Saturn with Syntheseus to generate molecules satisfying various degrees
of synthesizability. By running an explicit retrosynthesis search on every generated molecule, we showed that Saturn
can generate property-optimized molecules with a predicted synthesis route49, while also optionally enforcing the
presence of user-specified building blocks125. Here, we extend these capabilities to also enforce or avoid user-specified
reaction classes or even specific reactions. In the previous section, we described how Syntheseus output can be labeled
with reaction information, whereby every reaction involved has an associated name string, e.g., Mitsunobu reaction.
We introduce a simple binary reward, such that the model receives a perfect reward (1.0) if the user-specified reaction
constraint is met and 0.0 otherwise. We write constraint to encompass the following:
1. ‘Enforce Reaction‘: The user-specified reactions are incorporated (≥1) in the synthesis routes.
2. ‘Avoid Reaction‘: The user-specified reactions are not present in the synthesis routes.
3. ‘Enforce all Reactions‘: All reactions belong to the user-specified reactions set.
Note that one could enforce the presence of certain reactions while simultaneously avoiding others, as we will show in
the Results section. Moreover, the ‘Enforce all Reactions‘ constraint implies that other reactions are avoided.
Next, we comment on the binary reward formulation, which raises concerns around reward sparseness. In earlier
work49, we took the same binary reward approach to learning general synthesizability, i.e., receive perfect reward (1.0)
if there is any predicted synthesis route. In our follow-up work125, we formulated the TANGO reward function to
tackle the task of constrained synthesizability (i.e., does the synthesis route also contain user-specified building blocks?)
TANGO is a dense reward function and is necessary for robust learning in the block-constrained synthesizability setting
as the binary formulation (equivalent to brute-force) is unreliable. We argue that the reward landscape imposed by
the problem setting of reaction constraints can be less sparse than constrained synthesizability because retrosynthesis
is a one-to-many problem. Given the same target molecule, there are generally multiple synthesis routes which also
often contain > 1 reaction in each (multi-step synthesis). One can imagine that if the reaction constraint is only to
enforce the presence of, e.g., an amide coupling, it only needs to be present in one of the many reactions in the set of
synthesis routes (though in practice, we only consider a single synthesis route as we terminate retrosynthesis search
when a single solution is found). Therefore, we hypothesized that this problem setting has enough solutions that the
reward is not too sparse, such that a binary reward formulation is tolerable. As expected, under such a formulation, we
see that certain reaction classes that may be less frequent, are more difficult to learn, e.g., Heck reaction (C-C coupling).
In Appendix H, we explored preliminary reaction-based enumeration at the start of a generative experiment to seed
the model with molecules that satisfy the reaction constraints, e.g., if the constraint were to enforce the presence of a
Heck reaction, we can enumerate molecules using a Heck reaction template to guide initial learning. In general, we
found this approach sometimes beneficial but that letting the model freely explore, resulted in higher quality generated
molecules. We further discuss this in the Conclusion section.
Finally, from an implementation perspective, all reaction constraints are defined as ‘multipliers‘, which either multiply
the reward by 1.0 (constraint(s) satisfied) or 0.0 (constraint(s) not satisfied). In this way, we can apply reward shaping on
top of the multipliers to incentivize other constraints that may be of interest, such as the TANGO reward for constrained
block-synthesizability or route length penalization to generate molecules that can be synthesized with shorter synthesis
routes. This enables users to enforce any of the reaction constraints discussed above and also optionally enforce the
use of specific building blocks and/or incentivize shorter synthesis routes. Collectively, this constitutes steerable and
granular synthesizability control over generated molecules.
8
arXiv Template
A PREPRINT
3
Experimental Setup
In this section, we outline the shared experimental setup parameters, metrics, and introduce the outline of the Results
section.
Experiment Parameters. Every experiment was run across 5 seeds (0–4 inclusive) with a 15,000 oracle budget and we
also report the wall times. We did not tune any hyperparameters throughout the entire paper and all performance is
out-of-the-box. The specific Saturn fixed hyperparameters are batch size 64 and 2 rounds of Augmented Memory146.
Lastly, we use the pre-trained Saturn model on the PubChem144 dataset for all experiments (see Appendix B for
pre-training details).
General Multi-parameter Optimization Objective. For method development, we fixed a specific multi-parameter
optimization (MPO) objective relevant to drug discovery and adapted from our previous work49,125. The components of
the objective function are:
1. Docking: Minimize QuickVina2-GPU158–160 docking scores against ATP-dependent Clp protease proteolytic
subunit (ClpP)161.
2. QED: Maximize the quantitative estimate of drug-likeness (QED)162 score.
3. Hydrogen-bond Donors: Constrain the number of hydrogen bond donors < 4. This constraint differs from our
previous work and the rationale is two-fold: (1) To make the optimization objective slightly more challenging
and (2) Constraining hydrogen-bond donors can improve ADME properties163,164.
4. Synthesizability: Various degrees of synthesizability based on predicted synthesis routes from Syntheseus142
and reaction labels from Rxn-INSIGHT152. We re-iterate that the use of Rxn-INSIGHT makes the framework
end-to-end open-source.
Throughout this work, we also formulated other MPO objectives, but these are experiment-specific and we defer details
to the respective Results sections.
Metrics. The general evaluation metrics are summarized in Table 1.
Table 1: Summary of general evaluation metrics. The mean and standard deviation are reported across all 5 (0–4
inclusive) seeds. For the Molecule Set Quality (Pooled) metrics, all molecules across the 5 seeds are pooled,
de-duplicated, and statistics reported.
Category
Metric (averaged or pooled across all 5 seeds)
Synthesizability
Non-synth: retrosynthesis model does not return a synthesis route
Synth: synthesis route returned but not all constraints are met
Synth (constraints): synthesis route returned and all constraints satisfied
Rxn Steps: # reaction steps amongst all Synth (constraints)
Enforced Blocks (reported if applicable): # unique enforced blocks amongst all
Synth (constraints)
N Successful Runs: # seeds (out of 5) with ≥1 Synth (constraints)
Molecule Set Quality
(Pooled)
QuickVina2-GPU Docking Scores158–160: < -10 is considered favourable following
previous work71
QED162: Quantitative estimate of drug-likeness
Ligand Efficiency: Docking score divided by # heavy atoms
Bemis–Murcko Scaffolds165: # unique Bemis-Murcko scaffolds
IntDiv1166: Pairwise Morgan fingerprint similarity (radius=2, nBits=1024)
#Circles167: Sphere packing number (0.75 similarity threshold)
Compute
Oracle Calls: # unique generated molecules scored by the objective function. This
is fixed at 15,000.
Wall Time: Compute time on a shared NVIDIA L40S GPU cluster
These metrics are used in all method development experiments and were chosen for a comprehensive coverage to
answer the following questions:
9
arXiv Template
A PREPRINT
1. Do generated molecules satisfy all user-specified reaction constraints?
2. Are generated molecules property-optimized?
A robust method should achieve both characteristics and we will highlight in the Results section cases where the reaction
constraints impose a challenging Pareto-front, such that property optimization is diminished. We report both Oracle
Calls and Wall Time to comment on resource usage. Given a fixed oracle budget, the wall time differs across models,
across reward functions, e.g., if a larger building block stock were used for retrosynthesis as the search time would
vary, and across GPU types. Oracle calls may also impose additional costs such as API costs. All Tanimoto similarity
calculations are computed with Morgan fingerprints with radius 2 and 1024 bits. Finally, for certain experiments, other
metrics are used, either to compare with previous work or to comment on experiment-specific characteristics. We defer
details to the respective Results sections. Finally, we note that all wall times are reported in Appendix D to manage
table sizes and also to accompany it with a discussion on Rxn-INSIGHT compared to NameRxn for reaction labeling.
Outline of Experiments. The experiments are divided into four sections as follows:
1. Method Development: Steering molecular generation under varying reaction constraints.
2. Valorizing (Industrial) Waste: Leveraging TANGO125 and the capabilities introduced in this work to valorize
industrial waste into de novo property-optimized generated molecules.
3. Generative Virtual Screening: Demonstrating how imposing reaction constraints can steer molecular
generation to mimic virtual screening of ultra-large make-on-demand libraries.
4. Benchmarking: Performance comparison to recent synthesizability-constrained models while imposing
additional reaction constraints made possible in this work.
10
arXiv Template
A PREPRINT
4
Framework Development Results
All experiments were performed on a single NVIDIA L40S GPU with 48 GB GPU memory. Saturn141 and Synthe-
seus142 using MEGAN97 together take up to 5.5 GB GPU memory while QuickVina2-GPU158–160 takes 20 GB GPU
memory (given the docking ‘exhaustiveness‘ parameter used). Therefore, if CPU-docking were used, e.g., Glide from
Schrödinger168, the entire workflow can be run even on an 8 GB GPU memory card.
4.1
Development Experiments
In this section, we show that generation can be steered towards molecules having synthesis routes enforcing the
presence of a user-specified reaction, containing only a set of user-specified reactions, and avoiding user-specified
reactions. We will demonstrate this capability with and without the additional constraint of enforcing that the synthesis
routes contain specific building blocks. These enforced blocks are from the 100 blocks randomly sampled from the
eMolecules (23,077,162 in size) commercially available stock. To promote practicality of the specific reactions to
enforce, we selected common medicinal chemistry reactions based on data analysis from Brown and Bostrom 169: amide
bond-forming (Amide), Suzuki-Miyaura C-C coupling (Suzuki), the Mitsunobu reaction, Heck C-C coupling (Heck),
and the Wittig reaction.
4.1.1
Enforcing the Presence of Specified Reactions
Figure 2: Docking scores of generated molecules filtered for QED > 0.5 across various reaction constraints with and
without also enforcing blocks. The molecules are pooled across all 5 seeds (0–4 inclusive) and de-duplicated. N denotes
the total number of molecules and annotated on the x-axis labels. The total number of molecules with docking scores <
-10 are annotated just above the x-axis.
Tables 2 and 3 show the metrics for enforcing reaction presence with and without also enforcing building blocks,
respectively. The docking score distributions are shown in Figure 2 which convey that also enforcing blocks is a
considerably more difficult task, resulting in less optimized docking scores and less molecules satisfying all the
constraints (reaction and block). We summarize the results and bold the metric that supports the observation:
• All reaction constraints are learnable within the oracle budget - Synth (constraints)
• Generated molecules are property-optimized - Docking Score Intervals
• Amide is the easiest constraint to learn and has the lowest number of reaction steps - Synth (constraints) and
Rxn Steps
• Enforcing blocks increases optimization difficulty with fewer generated molecules satisfying the reaction
constraint and the docking scores are worse - Synth (constraints) and Docking Score Intervals
• When enforcing blocks, only several unique enforced blocks are used in the top 5% (by reward) molecules - #
Enforced Blocks and was observed in the original TANGO125 work, where more block diversity could be
achieved by purging the enforced block set of these specific blocks and/or aggregating results across seeds
11
arXiv Template
A PREPRINT
• Amide top generated molecules are generally more diverse than molecules generated under other reaction
constraints, and all the diversity metrics are lower when additionally enforcing building block presence - # LE,
BMS, IntDiv1, # Circles (0.75)
Figure 3 shows example synthesis routes which are all chemically plausible. Generated molecules exhibit drug-like
structural features as QED was optimized, which generally enforces Lipinski-compliance170. We comment on some
interesting examples. In the case of enforcing amide bond formation presence, the generated molecule is obtained in 3
steps (amide formation followed by deprotection of the Boc-protected amine to undergo a second amide coupling).
This synthesis yields a high scoring molecule (docking score: -12.4, QED: 0.90, HBD: 1) using straightforward
chemistry. When enforcing the presence of the Mitsunobu reaction, a 4-steps convergent synthesis is displayed. This
route comprises a stereoselective reduction followed by an aryl-alkyl Mitsunobu coupling to react with the product
of a Boc-deprotection to form an amide bond. The resulting optimized molecule (docking score -11.4, QED: 0.91,
HBD: 1) exemplifies one of the advantages of our framework: the generation of convergent synthesis extracted from
chemistry-specific retrosynthesis software instead of linear routes, which is a limitation in some synthesizability-
constrained generative models71,72,75. On the other hand, a pitfall of the retrosynthesis model is observed: in the second
synthetic step (Mitsunobu reaction), the stereochemistry of the product is incorrect, as Mitsunobu reactions in this case
requires an overall inversion on the reacting stereocentre. This issue arises as a consequence of incomplete template
extraction, which does not consider the stereo-specificity of the reaction (however, the transformation is still considered
as feasible). Lastly, when enforcing the presence of a Wittig reaction, we observe a convergent synthesis starting
from a Horner-Wadsworth-Emmons (HWE) reaction involving a phosphonate and a ketone. The HWE reaction is a
special variant of the Wittig reaction, and in this case it is labeled as the latter due to Rxn-INSIGHT’s152 template
name definition (see Appendix C for additional discussion on template names and classification model’s issues). The
resulting molecule possesses a good docking score, and in the building block constrained case (Figure 4), it additionally
incorporates the enforced methyl cyclopentanecarboxylate in the route.
12
arXiv Template
A PREPRINT
Table 2: Enforcing reaction presence. The enforced reaction is present in ≥1 step(s) of the predicted route. The
mean and standard deviation across 5 seeds are reported. N denotes the number of replicates (out of 5) that have at
least one generated molecule satisfying all reaction constraints. The total number of molecules in each docking score
interval pooled across all 5 seeds is denoted by M (only molecules satisfying all reaction constraints are considered).
Within each of these docking score intervals, the QED, number of hydrogen-bond donors (HBD), ligand efficiency
(LE), number of Bemis-Murcko scaffolds (BMS), internal diversity (IntDiv1), and number of circles (#Circles (0.75))
are annotated. The oracle budget was fixed at 15,000.
Enforced
Synthesizability
Rxn Steps
Docking Score Intervals for Synth (constraints)
Non-synth
Synth
Synth (constraints)
DS < -10
-10 < DS < -9
-9 < DS < -8
-10.55 ± 0.42 (M=7428)
-9.52 ± 0.28 (M=16824)
-8.58 ± 0.29 (M=16187)
0.87 ± 0.07 (QED)
0.89 ± 0.07
0.88 ± 0.09
1.06 ± 0.24 (HBD)
1.07 ± 0.27
1.14 ± 0.38
Amide
2427 ± 382
12576 ± 383
10640 ± 534
2.19 ± 1.40
0.39 ± 0.03 (LE)
0.37 ± 0.03
0.35 ± 0.04
(N=5)
6319 (BMS)
12423
12815
0.737 (IntDiv1)
0.758
0.781
22 (#Circles)
38
78
-10.49 ± 0.36 (M=7788)
-9.52 ± 0.28 (M=18568)
-8.61 ± 0.28 (M=15037)
0.86 ± 0.08
0.87 ± 0.08
0.85 ± 0.11
1.00 ± 0.36
1.00 ± 0.43
0.94 ± 0.56
Suzuki
3369 ± 436
11637 ± 438
10078 ± 401
3.00 ± 1.32
0.40 ± 0.03
0.37 ± 0.03
0.35 ± 0.04
(N=5)
7258
17053
12389
0.758
0.766
0.788
17
52
105
-10.38 ± 0.29 (M=2659)
-9.48 ± 0.27 (M=13152)
-8.57 ± 0.28 (M=16435)
0.84 ± 0.09
0.85 ± 0.11
0.82 ± 0.15
0.89 ± 0.42
0.88 ± 0.45
0.86 ± 0.51
Mitsunobu
3860 ± 1353
11148 ± 1352
8861 ± 1321
3.17 ± 1.48
0.38 ± 0.02
0.36 ± 0.03
0.33 ± 0.04
(N=5)
2486
10913
13332
0.720
0.742
0.771
11
28
49
-10.47 ± 0.35 (M=5372)
-9.52 ± 0.28 (M=13284)
-8.57 ± 0.28 (M=13774)
0.86 ± 0.08
0.86 ± 0.08
0.85 ± 0.09
0.97 ± 0.48
1.04 ± 0.45
1.06 ± 0.53
Heck
3993 ± 675
11014 ± 674
8691 ± 970
3.29 ± 1.38
0.40 ± 0.03
0.37 ± 0.03
0.34 ± 0.04
(N=5)
5218
11833
11930
0.755
0.777
0.787
11
19
35
-10.58 ± 0.42 (M=4554)
-9.50 ± 0.28 (M=10078)
-8.55 ± 0.29 (M=12702)
0.78 ± 0.08
0.82 ± 0.09
0.83 ± 0.10
0.84 ± 0.46
0.95 ± 0.40
0.94 ± 0.40
Wittig
4478 ± 929
10528 ± 931
8491 ± 664
3.64 ± 1.46
0.37 ± 0.02
0.36 ± 0.03
0.34 ± 0.04
(N=5)
3181
8339
10310
0.680
0.780
0.807
12
31
47
13
arXiv Template
A PREPRINT
Table 3: Enforcing reaction and block presence. The enforced reaction is present in ≥1 step(s) of the predicted route.
The mean and standard deviation across 5 seeds are reported. N denotes the number of replicates (out of 5) that have at
least one generated molecule satisfying all reaction constraints. The total number of molecules in each docking score
interval pooled across all 5 seeds is denoted by M (only molecules satisfying all reaction constraints are considered).
Within each of these docking score intervals, the QED, number of hydrogen-bond donors (HBD), ligand efficiency
(LE), number of Bemis-Murcko scaffolds (BMS), internal diversity (IntDiv1), and number of circles (#Circles (0.75))
are annotated. The oracle budget was fixed at 15,000.
Reaction
Synthesizability
Rxn Steps
Docking Score Intervals
Enforced Blocks
Non-synth
Synth
Synth (constraints)
DS < -10
-10 < DS < -9
-9 < DS < -8
in Top 5% Molecules
-10.47 ± 0.35 (M=828)
-9.44 ± 0.27 (M=3301)
-8.49 ± 0.28 (M=9698)
0.82 ± 0.07 (QED)
0.84 ± 0.07
0.85 ± 0.07
1.10 ± 0.30 (HBD)
1.12 ± 0.33
1.13 ± 0.35
Amide
3036 ± 171
11969 ± 173
6041 ± 722
2.33 ± 1.28
0.40 ± 0.03 (LE)
0.37 ± 0.03
0.33 ± 0.03
5/100
(N=5)
762 (BMS)
2969
7634
0.630 (IntDiv1)
0.732
0.710
4 (Circles)
6
7
-10.33 ± 0.24 (M=1278)
-9.52 ± 0.28 (M=5485)
-8.60 ± 0.28 (M=4638)
0.71 ± 0.09
0.74 ± 0.09
0.78 ± 0.10
0.85 ± 0.48
0.91 ± 0.47
0.94 ± 0.44
Suzuki
3354 ± 532
11654 ± 533
2841 ± 1698
2.71 ± 1.26
0.37 ± 0.03
0.35 ± 0.03
0.32 ± 0.04
4/100
(N=4)
1199
4839
4044
0.679
0.714
0.750
2
7
5
-10.37 ± 0.30 (M=79)
-9.34 ± 0.24 (M=1644)
-8.46 ± 0.27 (M=11593)
0.75 ± 0.12
0.81 ± 0.10
0.84 ± 0.10
0.85 ± 0.48
0.85 ± 0.46
0.87 ± 0.44
Mitsunobu
4762 ± 1292
10245 ± 1288
5648 ± 1800
3.17 ± 1.51
0.35 ± 0.02
0.34 ± 0.02
0.33 ± 0.03
4/100
(N=5)
75
1490
9705
0.530
0.683
0.735
3
4
4
-10.27 ± 0.16 (M=27)
-9.36 ± 0.25 (M=411)
-8.47 ± 0.27 (M=2188)
0.84 ± 0.08
0.83 ± 0.08
0.80 ± 0.07
1.00 ± 0.00
1.07 ± 0.25
1.11 ± 0.32
Heck
3963 ± 649
11044 ± 642
1295 ± 1598
2.78 ± 1.27
0.43 ± 0.02
0.39 ± 0.04
0.34 ± 0.04
4/100
(N=5)
23
299
1852
0.571
0.645
0.717
2
5
6
-10.40 ± 0.28 (M=400)
-9.43 ± 0.27 (M=2585)
-8.55 ± 0.28 (M=5380)
0.72 ± 0.08
0.74 ± 0.08
0.77 ± 0.09
0.82 ± 0.60
0.92 ± 0.73
1.09 ± 0.81
Wittig
4504 ± 454
10501 ± 450
2320 ± 1757
3.63 ± 1.62
0.34 ± 0.02
0.33 ± 0.03
0.33 ± 0.04
5/100
(N=5)
399
2307
4280
0.551
0.696
0.756
3
7
7
14
arXiv Template
A PREPRINT
Figure 3: Example synthesis routes of generated molecules under various reaction presence constraints. Left: Enforcing
reaction presence. Right: Enforcing reaction and building block presence. A box is used to denote the specific reaction
satisfying the constraint. If also enforcing building block presence, the specific enforced building block is highlighted
and its substructure also shown in the generated molecule. Property values of the generated molecules are annotated.
15
arXiv Template
A PREPRINT
4.1.2
Enforcing that the Synthesis Routes Only Contain Specified Reactions
In the previous section, we showed that generation can be steered to incorporate specified reactions. This can be useful
as certain reactions install specific functional groups that can be particularly desirable depending on the application,
e.g., amide bonds are stable due to resonance171. However, as we move towards increasing automation and ease of
synthesis, it is highly advantageous to narrow the number of reaction types that need to be performed to promote
parallel syntheses137,138. Accordingly, we chose two of the most common medicinal chemistry reactions (amide and
Suzuki couplings)169 and enforce generated molecules to be synthesizable using only these reactions. Tables 4 and 5
show the metrics with and without also enforcing building blocks, respectively. The docking score distributions are
shown in Figure 2 which continues to convey that also enforcing blocks is a considerably more difficult task, resulting
in less optimized docking scores. Here, this is even more apparent than when enforcing only the presence of specified
reactions. We again summarize the results and bold the metric that supports the observation:
• Both reaction constraints are learnable within the oracle budget - Synth (constraints)
• The number of reaction steps is generally shorter than when enforcing only the presence of amide couplings
(as in the previous section) - Rxn Steps
• The docking scores are worse than when only enforcing the presence of amide couplings - Docking Score
Intervals
• When enforcing blocks, only several unique enforced blocks are used again - # Enforced Blocks
• Less optimal molecules are generated, although the diversity is similar to the case when enforcing only the
reaction presence. When enforcing blocks, the diversity and number of optimal molecules decrease. # LE,
BMS, IntDiv1, # Circles (0.75)
From the results, we can also see the emergence of a Pareto-front, though not a particularly surprising one: on average,
molecules that can be synthesized with less steps have worse docking scores. One can verify this by cross-referencing
the Rxn Steps and the number of generated molecules (M) with a docking score < -10. For a specific example, compare
the docking score < -10 metrics when enforcing only the presence of amide reactions in Table 2 and now enforcing only
amide couplings in Table 4. When enforcing only the presence of amide couplings, more generated molecules possess a
docking score < -10. It is well known that larger molecules can achieve better docking scores172,173. On average, fewer
reaction steps yield smaller molecules, which in turn, imposes a trade-off on docking scores (though because we also
optimize for QED, this effect is not more pronounced. Had we not constrained QED, then more reaction steps can
freely lead to larger and larger molecules). We further explore and elucidate the implications of this behaviour in the
subsequent sections.
Figure 4 shows example synthesis routes. When enforcing only amide and Suzuki couplings, we show an example route
where these reactions are sequentially performed. We further note that under this double reaction constraint settings,
most generated molecules have synthesis routes containing amide couplings as it is the most common reaction. Overall,
this section demonstrates that generation can be steered towards property-optimized molecules that have predicted
synthesis routes only incorporating user-specified reactions.
16
arXiv Template
A PREPRINT
Table 4: Enforcing all reactions are from the specified set. The enforced reaction(s) is present in all step(s) of the
predicted route. The mean and standard deviation across 5 seeds are reported. N denotes the number of replicates (out
of 5) that have at least one generated molecule satisfying all reaction constraints. The total number of molecules in each
docking score interval pooled across all 5 seeds is denoted by M (only molecules satisfying all reaction constraints
are considered). Within each of these docking score intervals, the QED, number of hydrogen-bond donors (HBD),
ligand efficiency (LE), number of Bemis-Murcko scaffolds (BMS), internal diversity (IntDiv1), and number of circles
(#Circles (0.75)) are annotated. The oracle budget was fixed at 15,000.
Enforced
Synthesizability
Rxn Steps
Docking Score Intervals
Non-synth
Synth
Synth (constraints)
DS < -10
-10 < DS < -9
-9 < DS < -8
-10.35 ± 0.27 (M=1564)
-9.45 ± 0.26 (M=12230)
-8.56 ± 0.28 (M=19377)
0.89 ± 0.06 (QED)
0.91 ± 0.05
0.90 ± 0.06
1.11 ± 0.33 (HBD)
1.09 ± 0.29
1.09 ± 0.30
Amide
1998 ± 276
13016 ± 277
9890 ± 467
1.21 ± 0.82
0.41 ± 0.02 (LE)
0.39 ± 0.03
0.36 ± 0.03
(N=5)
1301 (BMS)
8585
14849
0.759 (IntDiv1)
0.770
0.780
15 (#Circles)
30
51
-10.35 ± 0.27 (M=2073)
-9.46 ± 0.27 (M=13042)
-8.57 ± 0.28 (M=18934)
0.88 ± 0.07
0.90 ± 0.06
0.90 ± 0.07
1.09 ± 0.29
1.09 ± 0.30
1.10 ± 0.31
Amide-Suzuki
2008 ± 177
13000 ± 174
9790 ± 129
1.29 ± 0.85
0.40 ± 0.02
0.39 ± 0.03
0.36 ± 0.03
(N=5)
1918
9929
14340
0.752
0.773
0.785
21
29
59
Table 5: Enforcing all reactions are from the specified set and enforcing blocks. The enforced reaction(s) is present
in all step(s) of the predicted route. The mean and standard deviation across 5 seeds are reported. N denotes the number
of replicates (out of 5) that have at least one generated molecule satisfying all reaction constraints. The total number
of molecules in each docking score interval pooled across all 5 seeds is denoted by M (only molecules satisfying all
reaction constraints are considered). Within each of these docking score intervals, the QED, number of hydrogen-bond
donors (HBD), ligand efficiency (LE), number of Bemis-Murcko scaffolds (BMS), internal diversity (IntDiv1), and
number of circles (#Circles (0.75)) are annotated. The oracle budget was fixed at 15,000.
Reaction
Synthesizability
Rxn Steps
Docking Score Intervals
Enforced Blocks
Non-synth
Synth
Synth (constraints)
DS < -10
-10 < DS < -9
-9 < DS < -8
in Top 5% Molecules
-10.37 ± 0.26 (M=115)
-9.44 ± 0.28 (M=634)
-8.48 ± 0.27 (M=1643)
0.79 ± 0.06 (QED)
0.81 ± 0.06
0.84 ± 0.06
1.94 ± 0.24 (HBD)
1.83 ± 0.38
1.31 ± 0.46
Amide
2920 ± 242
12087 ± 242
3947 ± 1156
1.45 ± 1.04
0.40 ± 0.02 (LE)
0.37 ± 0.03
0.37 ± 0.04
2/100
(N=5)
113 (BMS)
551
1379
0.539 (IntDiv1)
0.597
0.698
1 (Circles)
2
3
-10.20 ± 0.13 (M=7)
-9.36 ± 0.23 (M=450)
-8.46 ± 0.28 (M=2818)
0.80 ± 0.04
0.81 ± 0.06
0.84 ± 0.06
1.57 ± 0.49
1.81 ± 0.40
1.64 ± 0.49
Amide-Suzuki
3144 ± 566
11863 ± 566
3069 ± 1691
1.53 ± 1.01
0.38 ± 0.03
0.34 ± 0.03
0.33 ± 0.03
3/100
(N=5)
7
429
2429
0.570
0.649
0.719
2
3
3
17
arXiv Template
A PREPRINT
Figure 4: Example synthesis routes of generated molecules containing only the specified reactions. Left: Enforcing
all reactions. Right: Enforcing all reactions and building block presence. All reactions are boxed to denote that they
belong to the specified reaction set. If also enforcing building block presence, the specific enforced building block is
highlighted and its substructure also shown in the generated molecule. Property values of the generated molecules are
annotated.
18
arXiv Template
A PREPRINT
4.1.3
Reaction Co-emergence and Avoiding Undesired Reactions
In Section 4.1.1, we only enforced the presence of specified reactions. Given that the generated molecules were typically
not one-step syntheses, e.g., see the example routes in Figure 3, this implies that the synthesis routes contain other
reaction classes. A natural question is: what are these other reactions?. In this section, we show:
1. The co-emergence of heavily-represented tandem reactions
2. The ability to avoid these co-emergent reactions with minimal adverse effects over the property profiles of
generated molecules
The starting point of our investigation analyzes the results from the experiments enforcing the presence of Mitsunobu
and Wittig reactions. We chose these specific reactions because they are more difficult to enforce than common reactions
such as amide coupling reactions. This enables us to demonstrate that granular control over avoiding multiple reaction
classes is possible even when also enforcing a non-trivial reaction. As we are interested in studying the co-emergence of
heavily-represented tandem reactions, all plots in this section show reactions which occur > 500 times in the generated
set of molecules and for a given seed run (different seeds can have different output due to generative stochasticity).
Figure 5 shows the cumulative reaction class number along the optimization for each experiment, together with a
selected example route for each tandem.
Enforcing Mitsunobu. Analyzing the cumulative growth of reactions reveals that Mitsunobu reactions increase in
frequency as the generative run progresses, as desired. However, deprotection reactions are heavily-represented which
are often necessary for chemoselectivity, i.e., masking certain functional groups so that the next reaction occurs at
the desired position (Figure 5a). The use of deprotection reactions in syntheses is undesirable because it leads to
longer syntheses while generating more waste and decreasing product yields174,175. Therefore, we run a generative
experiment to enforce Mitsunobu reactions while avoiding deprotections. Analyzing the reaction frequencies shows that
deprotections are effectively eliminated (Figure 5a) with minimal effect on the property profiles of generated molecules.
While triaging the synthesis routes for the experiment avoiding deprotections, we noticed that some routes contain nitro-
group reduction. Commonly, this reaction is palladium-catalyzed using hydrogen gas. These reaction conditions can
sometimes be undesirable as palladium is a relatively expensive metal and the reaction itself can lack chemoselectivity,
i.e., reducing other functional groups such as alkenes176. Palladium is also undesirable in active pharmaceutical
ingredients (APIs), even in trace amounts. Therefore, we run a generative experiment to enforce Mitsunobu reactions
while avoiding deprotections and nitro-group reduction. As desired, nitro-group reduction is effectively eliminated
and we see that acylation reactions to form amide bonds become heavily-represented. Interestingly, in the nitro-group
reduction synthesis routes, this reduction is performed to access the free amine to perform an amide bond-forming
reaction (Figure 5a). When avoiding nitro-group reduction, the model implicitly learns to generate molecules already
containing the free amine. Cross-referencing earlier results in Table 3, we see that amide bond-forming reactions are
also the easiest to learn due to their commonality. To further demonstrate granular control over synthesizability, we
run one more experiment to enforce Mitsunobu reactions while avoiding deprotections, nitro-group reduction, and
acylation reactions to form amides. Note this set of constraints intentionally avoids the common amide reactions, and
should be expected to be have a large impact on constraining the solution space. In order to continue satisfying the
objective function, the model now leverages C-C coupling reactions (see Figure 5a, where a tandem of Mitsunobu and
Aldol condensation is featured).
In this section, we increasingly imposed more stringent synthesizability constraints in response to observing undesired
reactions. In general, it is difficult to know a priori the types of chemistry that a model generates in order to satisfy an
objective function. If the synthesis routes contain undesirable reactions, we show that it is straightforward to avoid
them. We adopted a purely chemical reactivity perspective to undesirable reactions, highlighting potential selectivity
problems. However, undesirable reactions are not limited to reactivity. Certain reactions may require specific reaction
vessels or conditions to perform that a lab may not have access to, or that chemists simply do not want for any reason.
Enforcing Wittig. We continue our investigation and show that enforcing Wittig reactions also leads to deprotection
reactions being heavily-represented. Similar to the previous section, we perform an experiment to enforce Wittig
reactions while avoiding deprotections. The Wittig reaction couples a ylide (phosphorus reagent) with a carbonyl,
yielding a product containing an alkene. Interestingly, based on the growth in reaction frequencies (Figure 5b), the
model finds it advantageous to reduce the resulting alkene via hydrogenation to satisfy the objective function. Previously,
we commented that hydrogenation reactions may be undesirable due to potential selectivity problems and reagent cost.
Here, however, we do not further impose any reaction constraints. We believe the results, taken together, convey that
our framework enables steerable and granular synthesizability control, while uncovering emergent combinations of
suitable reaction tandems, sometimes unexpectedly.
19
arXiv Template
A PREPRINT
Figure 5: Co-emergence of reaction tandems and the effect of avoiding specific reaction classes. When generating
property-optimized molecules, we observe that certain reactions co-emerge in frequency with the enforced reaction.
These co-emergent reactions may be undesired and we demonstrate the ability to avoid them. a and b enforce the
presence of the Mitsunobu and Wittig reaction, respectively, while avoiding other reactions. In the Enforce presence of
Mitsunobu. Avoid deprotections example, the reaction is classified as "Mitsunobu esterification" by Rxn-INSIGHT,
although specific reaction conditions would be needed to define the transformation (see Appendix C for more details
about reaction name classification nuances).
20
arXiv Template
A PREPRINT
4.1.4
Incentivizing Shorter Synthesis Routes: Navigating the Pareto-front
In Section 4.1.2, we enforced that generated molecules possess synthesis routes containing only the specified reactions.
In that section, we commented that the synthesis routes when enforcing only amide reactions or amide and Suzuki
reactions were often only 1-2 steps. These shorter syntheses imposed a trade-off on docking scores, such that on
average, the docking scores were worse than when the syntheses were longer (such as when only enforcing reaction
presence in Section 4.1.1). However, the ability to control for shorter synthesis routes has practical benefits, as long as
one is aware of the potential trade-offs when doing so. In this section, we describe how shorter synthesis routes can be
incentivized and discuss the following points:
1. The Pareto-front between synthesis route lengths and docking scores
2. Incentivizing shorter synthesis routes leads to using larger building blocks, and is a predictable emergent
behaviour
Incentivize Shorter Synthesis Routes with Reward Shaping. As previously described, reaction constraints are
learned via a binary reward, i.e., 1.0 if the constraints are satisfied and 0.0 otherwise. If synthesis route lengths were a
concern, one would always want to minimize the length. We adopt a straightforward approach by applying a reverse
sigmoid reward shaping transformation on top of the binary reward. This reward shaping gives higher reward to shorter
paths. Therefore, given that the reaction constraints are satisfied, i.e., the binary reward is 1.0, the final reward signal
is multiplied by the length shaped reward, such that the final reward ∈[0, 1]. We choose two reaction constraints to
demonstrate route length minimization:
1. Enforcing Heck reaction presence
2. Enforcing amide reaction presence and blocks
We chose these experiments because we noticed that the highest reward molecules generated featured long synthesis
routes. We denote these experiments, which were performed in Section 4.1.1 as the baselines. In this section, we take
these baselines and additionally incentivize route length minimization. Figure 6a shows the average route lengths for
each generated batch of molecules as the experiment progresses. In both cases, incentivizing route length minimization
leads to shorter routes, on average. Importantly, this is learnable while also enforcing blocks using our previously
proposed TANGO125 reward function. Figure 6c (right) shows an example synthesis route, confirming that an enforced
block is present in the route. From an optimization perspective, both the TANGO and length minimization rewards
∈[0, 1], which essentially performs a double reward shaping on top of the binary reward for the reaction constraint.
We believe this is interesting because we do not impose any explicit constraints on the generation process and that
incentivization combined with a robust algorithm can solve challenging MPO objectives.
Trade-off Between Synthesis Route Lengths and Docking Scores. In general, larger molecules possess better docking
scores172,173 and molecules with longer synthesis routes are often larger. However, in this case, we do not expect that
generated molecules would have higher MW between the baseline and the length minimization experiments. This is
because QED is part of the objective function, which imposes upper bounds on MW, otherwise decreasing the reward.
Figure 6a shows that in the baselines, the docking scores improve (decrease) with longer synthesis routes. We first
highlight that even if generated molecules are similar in size, having the freedom to perform additional reactions such
as functional group interconversions, deprotections, or reductions which have relatively small impacts on MW, can
improve docking scores. Secondly and more importantly, this leads to the question: how can it be that generated
molecules have similar MW, yet the length minimization experiments yield notably shorter synthesis routes?
Learning to use Larger Building Blocks. Figure 6a shows that the length minimization experiments yield synthesis
routes that are 1-2 steps shorter, on average, compared to the baseline. If the generated molecules have similar MW, the
only explanation is that the model learns to generate molecules that can be synthesized using larger building blocks. We
verify this in Figure 6b which plots the docking scores of the generated molecules and the number of heavy atoms in
the building blocks of their syntheses. We show this across different number of reaction steps for the pooled (across 5
seeds, 0–4 inclusive) top 5% of generated molecules by reward. Note that we report the building blocks number of
heavy atoms instead of MW to remove the off-chance that heavy halides skew the statistics, e.g., bromine which has a
MW of 79.9. We make three observations:
1. Longer syntheses generally yield lower docking scores, as expected
2. All highest reward (top 5%) generated molecules in the length minimization experiment are 1-2 steps because
otherwise, the reward is diminished and the molecules would no longer be the highest rewarding. Cross-
referencing the number of heavy atoms in the building blocks, one can see that larger blocks are used, though
this is more apparent in the amide and enforced block constraint
21
arXiv Template
A PREPRINT
3. Amongst all the building blocks used in the top 5% of generated molecules, there is generally a greater
percentage > 15 heavy atoms in the path minimization configuration (annotated in Figure 6b)
In contrast, we note that when considering the entire generated set, this is not true. This is unsurprising because the
model needs to first learn to satisfy all these constraints. However, this does not detract from the utility of length
minimization, as the highest reward molecules can now be synthesized in fewer steps. Figure 6c contrasts example
highest reward generated molecules with and without route minimization. While there is sometimes a trade-off in
docking scores, we get in return notably shorter syntheses. Quantitatively, the top 5% (by reward) molecules pooled
across 5 seeds (0–4 inclusive) go from 3.97 ± 0.97 (N=2166) to 1.57 ± 0.50 (N=1934) and 3.08 ± 0.84 (N=1411) to
1.05 ± 0.21 (N=1205) for the Heck and amide and enforced block constraints, respectively. Lastly, we note that the
purpose of this section is to highlight an interesting observation around implicit learning. If larger building blocks are
strictly desired, one could simply optimize for it in the objective function. However, we believe the ability to minimize
synthesis route lengths is a more generalizable and practical capability.
22
arXiv Template
A PREPRINT
Figure 6: Effect of synthesis route length minimization on two experiments: (1) Enforcing presence of the Heck reaction
and (2) Enforcing presence of an amide bond forming reaction and enforcing blocks. a the mean and standard deviation
across 5 seeds (0–4 inclusive) of the number of reaction steps and docking scores trajectories with and without (baseline)
length minimization. Generally, longer synthesis routes yield molecules with better (lower) docking scores. b Pooled
top 5% (by reward) molecules across the seeds. The left plots show the docking scores distributions of the generated
molecules. The right plots show the number of heavy atoms distributions for the building blocks in the synthesis
routes of the generated molecules. When minimizing path length, a larger proportion of larger building blocks are
used. 1-step results are omitted in the Heck no minimization experiment because the pooled molecules only contained
2 one-step routes. c Example synthesis routes of generated molecules with and without route length minimization.
Length minimization results in molecules with comparable docking scores with notably shorter synthesis routes.
23
arXiv Template
A PREPRINT
5
Valorizing (Industrial) Waste into De Novo Molecules
Recently, Wołos et al. 177 proposed a forward synthesis model (Allchemy) to find routes from waste molecules to
valuable known products. These so-called "waste" molecules are byproducts from chemical industrial processes, and
could be better defined as easily accessible building blocks, but for the sake of consistency we will refer to them as
"waste". The iterative application of high-quality reaction rules starting from these molecules and subsequent network
filtering enabled the discovery and experimental validation of paths to relevant known drugs. This approach opened new
possibilities in the application of Computer-Assisted Synthesis Planning (CASP) tools in circular chemistry problems.
Despite the impressive results, there are several limitations related to the application of the method in molecular
discovery tasks. Firstly, the discovery of new active molecules is limited by the need of biasing the generation toward
known drugs and agrochemicals to avoid over-exponential combinatorial explosion. Secondly, the exponential growth
of the chemical space requires the computational evaluation of all the generated molecules, which makes the process
intractable for large networks if using expensive oracles. We apply our framework to re-frame this problem and abstract
it one step higher. Specifically, instead of trying to reconstruct valuable known molecules from industrial waste in a
bottom-up manner, we aim to design de novo molecules optimized for arbitrary objectives using the same waste stock
(evaluating the generated molecules in a top-down retrosynthetic approach). This block-constraint is enabled by our
previously proposed TANGO reward function125.
Problem Formulation. In order to build a meaningful optimization objective, we propose an objective function
targeting ciclooxygenase-2 (COX2) (PDB ID: 1CX2), a receptor related to the inflammatory response178. The objective
is to design potential inhibitors against COX2 that can be synthesized from industrial waste products. First, we perform
pose validation using Gnina179 by re-docking the 1CX2 co-crystallized ligand (with a somewhat lenient RMSD < 0.75
Å). Next, we assess the capability of Gnina to distinguish between known actives and decoys from the DEKOIS 2.0
dataset180, based on the docking scores. We obtain an enrichment factor of 28.4 with the top 1% docked molecules (see
Appendix F for more details). The generative framework is tasked to enforce the presence of building blocks originating
from industrial waste in the proposed synthesis routes. Specifically, we employ two sets of waste molecules of different
geographical origin (the US and the EU, according to Wołos et al. 177). For each set, we use the corresponding Enamine
catalog (US or EU stock, which contains building blocks that can be delivered within 1-2 days within the US or the EU,
respectively) as the building blocks for the retrosynthesis model. This aims to guarantee the geographical availability
of all the molecules in the synthesis for accelerated experimental validation, and to guarantee the supply chain in the
corresponding location. Additionally, we enforce two sets of synthetic constraints for each waste set. The components
of the objective functions are:
• Docking: Minimize Gnina179 docking scores against 1CX2178. We use Gnina instead of QuickVina2-GPU
due to the higher performance of the former in docking tasks.
• QED: Maximize QED.
• Synthesizability oracle:
– US waste: Enamine US stock (Feb. 2025, 231,472 molecules) for the retrosynthesis model. Enforce the
presence of a US industry waste block, presence of amide coupling, avoid protections or deprotections,
minimize the path length.
– EU waste: Enamine EU stock (Feb. 2025, 156,510 molecules) for the retrosynthesis model. Enforce the
presence of an EU industry waste block, enforce that all the reactions in the synthesis routes are amide or
Suzuki couplings
For additional details of the docking objective and waste blocks used, see Appendix F.
Results. Table 6 shows the results for each experiment. Our framework successfully finds property-optimized molecules
that incorporate the waste building blocks and the synthesis constraints for both US and EU building blocks. On
average, the synthesis routes have less than 2 steps, which generally facilitates adherence to green chemistry principles
(shorter routes should be favored as an efficiency and atom-economy principle). Although in the EU experiment routes
were not optimized for path minimization, the average route length is < 2 steps, showing that under heavy reaction
constraints paths can be implicitly minimized (as also remarked in Section 4.1.2 with respect to the average number of
steps). In terms of docking quality, the proportion of molecules in the lower docking interval is scarce, and the average
docking score is around -1 kcal/mol higher than for the reference ligand (-11.54 kcal/mol). However, this could be
improved by increasing the number of oracle calls or by relaxing synthetic constraints. Figure 7 shows selected routes
starting or containing 3 different waste molecules from each set. In the US stock, all routes contain an amide formation
reaction, and build the final molecule in 2 steps incorporating the selected block (m-cresol, 4-hydroxyphenylacetic acid
or phenol). In the case of the EU stock, all the reactions in the synthesis are either amide or Suzuki couplings, and build
the final molecule in two steps incorporating the selected waste block (acetic acid, 4-oxopentanoic acid or glycine). In
24
arXiv Template
A PREPRINT
Figure 7: Waste valorization experiments. In this case study, molecules are generated with optimized docking scores
against COX2 (PDB ID: 1CX2) starting or containing industrial waste products. The industrial waste is divided by
geographical location (originating from the US and the EU, as classified in Wołos et al. 177) and allowed to react with the
Enamine building block stocks available in the corresponding locations (1-2 days delivery). Selected synthesis routes
are shown for property-optimized generated molecules containing 3 different waste molecules originating from each
location and with specific reaction constraints. In the US stock experiment, the presence of an amide bond formation
with minimal synthesis steps is enforced; in the EU experiment, the presence of amide bond formation or Suzuki
reactions in all the synthesis steps is enforced.
addition, some of the final molecules incorporate a high percentage of waste-derived carbon atoms, which is a desirable
metric when targeting bio-based products. A concrete example is the molecules derived from 4-hydroxyphenylacetic
acid in the US waste experiment which contain between 40-44% waste-derived carbon atoms ( see Figure 7). It is
important to note that the route quality is directly limited by the retrosynthesis model capabilities, e.g., ignorance of
reaction selectivity issues. For instance, in the routes starting from glycine, selectivity issues may arise in the amide
formation step due to unprotected carboxylic acid groups, and the synthesis may not be feasible without adaptations.
This limitation can be mitigated as retrosynthesis models improve and incorporate better feasibility estimations, without
requiring changes to the generative framework.
Prospective Biorefinery Application. These experiments show how green chemistry constraints - the use of waste
molecules and minimizing the number of reaction steps - can be incorporated into the de novo generation of new active
molecules. Additional constraints related to diverse sustainability criteria can be explicitly incorporated into the reward
25
arXiv Template
A PREPRINT
function. For example, a numerical value could be computed in a similar way to the cost formulation in Wołos et al. 177,
or by calculating a green chemistry numerical score181 that was recently used to improve the sustainability criteria
of the synthetic route182. This is especially relevant in a biorefinery setting, where multiple molecules are produced
from biomass and they must all be valorized to ensure profitability183. Our framework could be used to rapidly explore
feasible synthesis routes toward new active molecules starting from this biomass feedstock. We hypothesize that our
generative framework could be effectively applied to a de novo biomass re-purposing task, facilitating a significant
step toward circular chemistry. In addition, we showed how the strategic combination of building blocks and waste
molecules by geographic source can successfully identify de novo molecules that can be easily manufactured in different
locations.
Table 6: Waste valorization results using specific waste block sets. The mean and standard deviation across 5 seeds
are reported. The total number of molecules in each docking score interval pooled across all 5 seeds is denoted by M.
Within each of these docking score intervals, the QED is annotated. The oracle budget was fixed at 15,000.
Experiment
Synthesizability
Rxn Steps
Docking Score Intervals
Enforced Blocks
Non-synth
Synth
Synth (constraints)
DS < -10
-10 < DS < -9
-9 < DS < -8
in top 5% molecules
US waste
4550 ± 749
10460 ± 746
5215 ± 689
2.00 ± 1.09
-10.30 ± 0.25 (M=214)
-9.32 ± 0.24 (M=2410)
-8.49 ± 0.28 (M=6762)
7/35
(N=5)
0.73 ± 0.08
0.79 ± 0.09
0.82 ± 0.09
EU waste
8639 ± 1113
6368 ± 1114
2223 ± 1847
1.88 ± 1.14
-10.48 ± 0.38 (M=1942)
-9.49 ± 0.29 (M=3337)
-8.56 ± 0.29 (M=2436)
3/26
(N=5)
0.77 ± 0.08
0.80 ± 0.08
0.82 ± 0.08
26
arXiv Template
A PREPRINT
6
Generative (Ultra-large-scale) Virtual Screening: Overcoming Library Scaling
Figure 8: Generative virtual screening overview and results. a Ultra-large make-on-demand virtual libraries are typically
enumerated with pre-selected building blocks and reaction "rules". Imposing similar reaction constraints to a generative
model can loosely mimic virtual screening of these libraries. b Generative virtual screening results using reaction
constraints to steer towards exact match in Freedom 4.0 space. The top and bottom plots are for the experiments only
optimizing for synthesizability and the docking MPO objective, respectively. The body of the histograms are annotated
with the mean and standard deviation (across 5 seeds, 0–4 inclusive) of the number of exact matches partitioned by the
number of reaction steps predicted by the retrosynthesis model. Given a specific reaction step, the generated molecules
are either "[In]" or "[Out]" of Freedom 4.0 so values always sum to 1. The mean and standard deviation of the overall
number of reaction steps for "[In]" and "[Out]" are annotated above the histograms. c Selected reactions’ Rxn-INSIGHT
template frequencies and prevalence (estimated number of products in Freedom 4.0 using the reaction). High exact
match rates are marked by high template frequency and prevalence. d Example Modes (< -10 docking score and all
with < 0.5 Tanimoto similarity to each other) generated from various reaction constraint experiments. Amongst the
pooled Modes (across 5 seeds), the mean and standard deviation of the number of amide bond occurrences is annotated.
When not actively deterring amide bonds, generated molecules have high prevalence of them (due to amide products
being largely represented in Freedom 4.0). The All Suzuki reaction constraint steers away from this chemical space and
can generate exact matches with markedly less amide bonds.
27
arXiv Template
A PREPRINT
Thus far in this work, we have described a framework to generate molecules under various reaction constraints. In
practice, many industrial early-phase drug discovery efforts focus on screening ultra-large make-on-demand libraries.
This approach can be attractive as selected molecules are directly purchasable. The disadvantage is that the library is
pre-defined and may limit novelty. Though in practice, this is often inconsequential especially if one is only interested in
finding initial hits. In this section, we show that a generalist pre-trained generative model can loosely mimic ultra-large
virtual screening with no overhead.
Ultra-large make-on-demand libraries continue to exponentially grow in size26. As of May 2025, the largest commercial
library is eXplore on the order of 1012 (trillion) molecules184 with proprietary libraries in pharmaceutical companies
many orders of magnitude larger8. Screening these libraries exhaustively is already infeasible and existing work reports
using 5.6 million vCPUs through AWS Cloud for virtual screening20. Beyond the scale of compute required, the
infrastructure for data storage and transfer also requires substantial engineering efforts. Existing approaches to mitigate
brute-force screening include hierarchical search (such as V-SYNTHES21) and active learning (such as using Thompson
sampling185). Very recently, Recursion proposed Scalable Active Learning via Synthon Acquisition (SALSA)186. This
synthon-based approach starts from an input fragment with defined exit vectors and shows scalability to search in up
to 1012 (trillion) spaces. SALSA shows comparable or enhanced performance in identifying favourable molecules
compared to existing active learning approaches such as MolPAL187 and LibINVENT66 which is a generative model
that also "decorates" around a fixed scaffold. Distinct from active learning approaches, Atomwise recently proposed
NeuralGenThesis (NGT) that re-frames screening as a generative task188. NGT is pre-trained on a virtual space from
Enamine defined based on 74,232 synthons and 21 reactions (about 3 trillion products)188. The model can then generate
molecules in this space and the authors demonstrate improved efficiency over V-SYNTHES21. Importantly, NGT can
be run on a single GPU. However, the model was pre-trained specifically for the Enamine 3 trillion space which limits
generalizability.
In this section, we will show that Saturn, using the same generalist pre-trained model can be steered to generate
molecules with exact match in ultra-large make-on-demand libraries (Figure 8a). This enables leveraging Saturn’s
sample-efficient optimization, where we will show that docking 15,000 molecules in total, can find docking-optimized
and diverse molecules in Chemspace’s Freedom 4.0 make-on-demand library (142 billion molecules). This amounts
to screening 0.00001% of the library. We also note that no pre-defined fragments with exit vectors are required as
molecules are generated completely de novo. To demonstrate this generative virtual screening (Figure 8a) capability,
we adopt the same objective function as the Development experiments which we recap below:
1. Docking: Minimize QuickVina2-GPU158–160 docking scores against ATP-dependent Clp protease proteolytic
subunit (ClpP)161.
2. QED: Maximize the quantitative estimate of drug-likeness (QED)162 score.
3. Hydrogen-bond Donors: Constrain the number of hydrogen bond donors < 4.
4. Synthesizability: MEGAN97 retrosynthesis model but instead of eMolecules stock, use the building blocks of
Freedom 4.0 provided by Chemspace (see Data Availability section).
Hypothesis. Virtual libraries are enumerated based on pre-selected building blocks and reactions. Conceptually,
imposing the exact same reaction constraints on a generative model should enable generating directly in the same space.
However, ensuring exact constraints poses some challenges: (1) Does one re-train their retrosynthesis model every time
the reaction rules of a space change? (2) What if this information is not available? (3) Should one also pre-train the
generative model on a similar space? (4) Can the generative model still optimize for arbitrary objective functions?
Retrieving exact matches in libraries is insufficient; the molecules must also possess favourable property profiles. We
continue to posit that a generalist model is malleable to generate in arbitrary chemical spaces through RL. Thus, we do
not deviate from our PubChem144 pre-trained model. Most importantly, virtual libraries are typically enumerated with
relatively well-characterized reactions in order to enhance the synthesis success rates. These reactions are common and
we hypothesize that out-of-the-box retrosynthesis models should have sufficiently useful coverage of the chemistry to
enable guided generation in specific spaces.
The questions we will answer using the Freedom 4.0 space are:
1. Can generating exact matches be achieved using a brute-force approach?
2. How can imposing reaction constraints confer the ability to generate exact match molecules?
3. In addition to reaction constraints, are there characteristics of the generated molecules that increase the exact
match rate?
Experimental Setup. We run two sets of experiments: (1) Only optimizing for synthesizability and (2) The docking
MPO that also includes synthesizability. The rationale for (1) is to show that in an isolated setting, reaction constraints
28
arXiv Template
A PREPRINT
directly steer generation towards Freedom 4.0 exact match. Following up with (2), this capability is retained when
optimizing for an objective function. The oracle budget was fixed to 15,000 (same as Development experiments). We
choose the following reaction constraints with a rough estimate of its frequency in defining the Freedom 4.0 space
products in parentheses:
• Direct Search Baseline: Instead of using a retrosynthesis model, directly query Freedom 4.0 exact match for
every generated molecule. Return 1.0 if matched and 0.0 otherwise
• Baseline (No Constraints): Only including the Freedom 4.0 building blocks in the retrosynthesis model
• All Amide: Only allowing amide reactions (amide reactions involved in > 100B products)
• All Suzuki: Only allowing Suzuki reactions (Suzuki reactions involved in > 50M products)
• All Ester: Only allowing Ester reactions (Ester reactions involved in > 50M products)
• Avoid Amide: Allowing any reaction except amide
The ‘Direct Search Baseline‘ is essentially a brute-force approach to generate exact matches in Freedom 4.0. For the
reaction constraints, all reaction labeling is performed with Rxn-INSIGHT152, which we re-iterate makes the framework
end-to-end open-source. The exact reactions were chosen due to their presence and prevalence when defining the
Freedom 4.0 space (this information was estimated based on data provided by Chemspace; see Data Availability for
details). Lastly, to check whether generated molecules are present in Freedom 4.0, we use RDKit’s synthon-based
search function, based on Cosgrove 189. The exact synthons and reactions used to define Freedom 4.0 were provided
by Chemspace (see Data Availability). As with all experiments in this paper, we run everything across 5 seeds (0–4
inclusive) and report the mean and standard deviations.
Reaction Constraints Results. We first discuss the results when imposing reaction constraints to highlight interesting
observations. Figure 8b shows the number of exact matches in Freedom 4.0, given that the reaction constraints are
satisfied, and partitioned across the number of reaction steps predicted by the retrosynthesis model. In the body of
individual histograms, the mean and standard deviation of the number of exact matches (given the reaction steps) is
annotated. For a concrete example, see the All Suzuki histograms for the Docking MPO. For one-step reactions, 98.3%
of molecules satisfying this reaction constraint are in Freedom 4.0. Notice that 1.7% satisfying the same reaction
constraint are not in Freedom 4.0 (right-side histogram). These values always sum up to 1. Lastly, the mean and
standard deviation of the number of reaction steps for "[In]" and "[Out]" of Freedom 4.0 are annotated at the top of the
histograms. We make the following observations:
• Just using the Freedom 4.0 building blocks (Baseline) with no reaction constraints in the retrosynthesis model
leads to considerable exact match rates
• For the baselines, there is a distribution of reaction steps. This means the retrosynthesis model predicts that the
generated molecules are synthesizable over a range of reaction steps, as proposed by the retrosynthesis model.
Note that we only consider molecules with up to 4 steps for figure clarity (there are few above this). Notice
that the majority of exact matches are single-step reactions (quantitatively, this is annotated at the top of the
histograms)
• When moving to the reaction constraints, All Amide and All Suzuki can yield very high exact match rates (>
95%) and the majority are again single-step reactions. This is consistent with how Freedom 4.0 is enumerated
which involves many 1-2 step reaction sequences
• For All Ester, the majority of generated molecules are not in Freedom 4.0
• When the reaction constraints are relaxed and only enforcing to Avoid Amide, the exact match rates drop
relative to the baseline which allows any reaction. This suggests that amide reactions are prevalent in defining
the Freedom 4.0 space (this is true as an estimated > 100B molecules in the virtual library contain amide
bonds)
• Steering for exact match using reaction constraints is still possible when performing MPO which is vital for
practical applications
We follow-up with more quantitative analyses to interrogate how satisfying the imposed reaction constraints can control
exact match rates (Table 7). Amongst the entire generated set of molecules, Synth denotes a retrosynthesis route was
returned but not necessarily satisfying the reaction constraints and Synth Match denotes the number of exact matches
in this set. Synth (constraints) denotes a retrosynthesis route was returned and satisfying the reaction constraints
and Synth (constraints) Match denotes the number of exact matches in this set. Exact Match Rate denotes the
percentage exact match in the Synth (constraints) set. Amongst the Synth (constraints) Match molecules, Modes
29
arXiv Template
A PREPRINT
Table 7: Docking MPO quantitative exact match rates given various degrees of synthesizability definition. The oracle
budget was fixed at 15,000. Non-synth denotes no retrosynthesis route was returned for the molecule. Synth denotes a
retrosynthesis route was returned but not necessarily satisfying the reaction constraints and Synth Match denotes the
number of exact matches in this set. Synth (constraints) denotes a retrosynthesis route was returned and satisfying the
reaction constraints and Synth (constraints) Match denotes the number of exact matches in this set. Exact Match
Rate denotes the percentage exact match in the Synth (constraints) set. Amongst the Synth (constraints) Match
molecules, Modes is the number of molecules below the docking score thresholds that are also < 0.5 Tanimoto similarity
to each other (radius=2, nBits=1024). Yield is the number of unique molecules below the docking score thresholds. All
metrics are the mean and standard deviation across 5 seeds (0–4 inclusive).
a The Search Reward Baseline is the experiment which returns a binary reward whether the generated molecules are in
or out of Freedom 4.0. In this case, Synth (constraints) Match denotes the number of generated molecules in Freedom
out of the total number of generated molecules.
Experiment
Synthesizability
Exact Match Rate
Modes (Yield) - QED
Non-synth
Synth
Synth Match
Synth (constraints)
Synth (constraints) Match
Rate
< -10 DS
< -9 DS
Direct Search
N/A
N/A
N/A
N/A
11123 ± 242a
0.74 ± 0.02
67 ± 15
255 ± 13
Baseline
(15005 ± 4)
(501 ± 280)
(3052 ± 769)
0.84 ± 0.01
0.85 ± 0.01
Baseline
5388 ± 171
N/A
N/A
9621 ± 174
3847 ± 712
0.40 ± 0.08
25 ± 6
122 ± 19
(70 ± 31)
(715 ± 176)
0.83 ± 0.02
0.84 ± 0.02
All Amide
5756 ± 208
9247 ± 207
8328 ± 209
8220 ± 202
7939 ± 244
0.97 ± 0.01
15 ± 1
140 ± 18
(26 ± 5)
(980 ± 74)
0.83 ± 0.03
0.86 ± 0.01
All Suzuki
9053 ± 668
5950 ± 670
4155 ± 656
4452 ± 746
3389 ± 541
0.78 ± 0.15
7 ± 3
47 ± 18
(16 ± 10)
(229 ± 158)
0.58 ± 0.01
0.64 ± 0.01
All Ester
8478 ± 424
6527 ± 425
175 ± 41
5079 ± 518
7 ± 3
0.0015 ± 0.0007
0 ± 0
0 ± 0
(0 ± 0)
(0 ± 0)
N/A
N/A
Avoid Amide
6179 ± 737
8826 ± 738
2630 ± 526
8686 ± 716
2553 ± 515
0.29 ± 0.04
10 ± 4
69 ± 15
(17 ± 9)
(258 ± 117)
0.78 ± 0.06
0.81 ± 0.03
is the number of molecules below the docking score thresholds that are also < 0.5 Tanimoto similarity to each other
(radius=2, nBits=1024). Yield is the number of unique molecules below the docking score thresholds. We make the
following observations:
• Firstly and surprisingly, the ‘Direct Search Baseline‘ which simply queries whether generated molecules are
exact matches results in the most number of favourable molecules generated
• The ‘Baseline‘ which only uses Freedom 4.0’s building blocks without reaction constraints also performs well
• All reaction constraints lead to exact matches except All Ester generates almost no exact matches in agreement
with the previous Figure 8b
• All reaction constraints generate exact matches with favourable docking scores but less than both Baselines,
suggesting that reaction constraints can impose a trade-off
• The exact match rates of All Amide and All Suzuki are high and the standard deviation is generally low,
indicating reproducibility
• Not all molecules satisfying the reaction constraints lead to exact matches, even in the case of All Amide which
features the highest exact match rate
• In agreement with Figure 8b, Avoid Amide leads to lower exact match rates compared to the Baseline (allow
any reaction)
• The number of Modes indicates that generated exact matches can also be diverse (based on fingerprint)
Exact Match Rate Depends on the Reaction Labeling Tool and Reaction Frequency of the Library. The results
thus far convey that imposing reaction constraints can steer generation towards Freedom 4.0 exact match. However, it
leads to further questions: (1) Why is All Ester performance so poor? (2) Why do All Amide and All Suzuki lead to such
high exact match rates? We answer these questions in Figure 8c which plots the exact match rates against the number of
Rxn-INSIGHT templates encoding the specific reaction and the prevalence of said reaction in enumerating the Freedom
4.0 space. We make the following observations:
30
arXiv Template
A PREPRINT
• Firstly, the exact match rates are not the same as shown in Figure 8b because here, the overall exact match rate
over all reaction steps is annotated
• All Ester and All Suzuki have similar reaction prevalence in Freedom 4.0, yet All Ester essentially leads to zero
exact matches. A plausible explanation for this discrepancy is that Rxn-INSIGHT only has 3 and 12 templates
encoding for ester and Suzuki reactions, respectively, and that the ester reaction templates are not able to cover
the majority of ester forming reactions used in Freedom 4.0.
• All Amide is successful because it has both high Rxn-INSIGHT template coverage and prevalence in Freedom
4.0
The results support the observation that both template frequency in Rxn-INSIGHT and prevalence in Freedom 4.0 are
important indicators for exact match rates. This is intuitive because: (1) if the reaction labeling tool cannot label the
reaction, then one cannot steer to this reaction, (2) higher template frequency increases the chance that there is overlap
between the reaction "rules" of the retrosynthesis model and the library, and (3) if the reaction was not used to virtually
enumerate the library, then it is unlikely that enforcing said reaction would result in products present in the space.
However, there are nuances to this. We have made the assumption that there is generalizability in the reaction "rules"
used in the retrosynthesis models. We use "rules" here to encompass template and template-free retrosynthesis models.
One can envision that if extremely granular reactions are used to define a virtual space, reaction generalization may not
be expected. As a thought experiment, consider that a hypothetical virtual library and a retrosynthesis model both use a
certain reaction. However, their definitions of the reactions are extremely granular (arbitrarily, one requires the presence
of 2 halogens adjacent to the reaction centre and the other no halogens). If there is no overlap in the reaction definitions,
then one should not expect an out-of-the-box retrosynthesis model to be able to generate exact matches in the library.
However, extremely specific reaction rules also limit the number of compatible reacting partners. As such, we posit
that ultra-large virtual libraries presently can have considerable reaction generalizability overlap with out-of-the-box
retrosynthesis models, which renders our approach applicable in these settings. Thinking towards the future, one could
also train a retrosynthesis model specifically with the reaction "rules" used to define a virtual space, which would allow
matching to specific reactions.
Are there Other Advantages of Imposing Reaction Constraints? Thus far, we have mostly discussed how reaction
constraints can steer generation towards exact matches but from a practical perspective, the glaring observation is that the
‘Direct Search Baseline‘ results in the most property-optimal exact matches (Table 7). If this simple baseline leads to the
most favourable molecules, should one care about imposing reaction constraints? We first note that while the absolute
number of property-optimal exact matches are higher in the ‘Direct Search Baseline‘, All Amide has a remarkably high
exact match rate. Under different oracle budgets, this can lead to clear benefits. To better understand the molecular
profiles from each experiment configuration, we compare and contrast the chemotypes in the property-optimal exact
matches (Figure 8d). We make the following observations:
• ‘Direct Search Baseline‘ and ‘Baseline‘ yield molecules with high prevalence of amide bonds
• All Amide also results in high prevalence of amide bonds, as expected
• All Suzuki results in notably less amide bonds, as these can only be inherited if already present in the building
blocks. The resulting molecules have a larger proportion of carbon atoms, as Suzuki is a C-C coupling reaction
Figure 8d allows us to further comment on the benefits of reaction constraints. Amide bond forming reactions are
the predominant transformations used to define Freedom 4.0. It is not completely surprising that generated exact
matches contain amide bonds when not deterring for them. This can be verified with the Modes and quantitative
amide bond counts. Moreover, we cross-reference Table 7 and highlight again that when avoiding amide reactions,
the exact match rate drops. This reasonably suggests that generated molecules containing amide bonds have a higher
likelihood of matching. We additionally note that an arbitrary virtual library may not, in general, have as high amide
reaction prevalence. Subsequently, we highlight the example molecules from the All Suzuki reaction constraint which
possess notably less amide bonds and can contain extensive sp2-conjugation. This demonstrates that reaction constraints
can steer exact matching to different chemical spaces of the virtual libraries. When faced with an arbitrary objective
function, molecules containing amide bonds may turn out to be unfavourable, thus being able to navigate ultra-large
spaces through reaction constraints is beneficial. As a concrete example, sp2-conjugated molecules can be more
suitable for functional materials design190. We note, however, that in the present drug discovery objective function, the
first-from-the-left molecule in the All Suzuki examples is problematic (Figure 8d) since it is fully sp2-carbon conjugated
and would likely be a promiscuous binder191.
Overall, we have shown how generative design in Saturn can be re-framed to essentially perform retrieval in ultra-large
virtual libraries in a sample-efficient manner. By assessing 15,000 molecules, which is 0.00001% of Freedom 4.0 (142
billion molecules), many property-optimal molecules are identified. We will follow up with future work in this research
direction.
31
arXiv Template
A PREPRINT
7
Benchmarking Against Previous Synthesizability-constrained Generative Models
Table 8: Overview of recent synthesizability-constrained generative models. B&H denotes the reaction templates from
Button et al. 29 and Hartenfeller et al. 28. FP denotes molecular fingerprint.
GFlowNets
Transformer
RGFN71
SynFlowNet72
RxnFlow75
SynFormer69
# Building Blocks
350 or 8,350
10,000
1,193,871
223,244
Used in the Paper
Max # Blocks Tested
64,000
221,181
1,193,871
223,244
in the Paper
“Enamine Global” (Nov. 2023)
“Enamine Comprehensive” (June 2024)
“Enamine US” (Oct. 2023)
Reactions
• 132 templates
• Up to 4-steps
• 105 B&H templates
• Up to 4-steps
• 71 B&H templates
• Up to 3-steps
• 115 templates
• 86 that define Enamine
REAL (from Jan. 2022)
• 29 selected from B&H
Synthesis Routes
Linear
Linear
Linear
Linear and branched
enabled by postfix notation73
Pre-training
None
None
None
Generate training data routes by randomly
selecting building blocks and reactions
Methodology to
Scale # Blocks
• MACCS FP
• Action embedding
scaled by FP
• Morgan FP
• Action embedding
scaled by FP
• MACCS FP & ECFP4
• Action embedding
scaled by FP
• Action space subsampling
• Diffusion module
• Scaling to longer FP (2048 vs. 256)
compared to authors’ previous work67
Docking Reward
R = e(β∗|DS|)
R =
DS+R_min
R_min+R_max −1b
R = 0.1 ∗max(−DS, 0)
N/Ac
Shaping Functiona
Peak GPU Memoryd
44 GB (350)
55 GB (50k)
2 GB (10k)
15 GB (240k)
19 GB (1.27M)
3.2 GB (225k)
(Block Set Size)
a This row shows the reward shaping functions specifically used for docking objectives in the corresponding papers.
b The default values are R_min = −10 and R_max = −1. SynFlowNet’s reward shaping further adds a -0.4 reward
penalty if the # of heavy atoms in the generated molecule > # heavy atoms in the reference ligand + 8.
c SynFormer did not have case studies specifically optimizing for docking scores.
d This row reports the peak GPU memory consumption when we ran each model with varying building block set sizes.
The value is only for the model consumption. The QuickVina2-GPU oracle additionally consumes 20-24 GB.
Recently, synthesizability-constrained generative models have grown in popularity, particularly from mid-2024 to
present60,69–77,79,80. The most common approach to date is by encoding explicit bias in the generation process such that
molecular generation proceeds by sampling building blocks and compatible reaction templates, following early work
from Gao et al. 67. The advantage of this approach is that all generated molecules are synthesizable, limited only by the
reaction templates’ granularity (and lack of reaction conditions, but all methods are limited by this). Specific recent
works include Reaction-GFlowNet (RGFN)71, SynFlowNet (SFN)72, RxnFlow75, and SynFormer69. We highlight
these specific works as the first versions of these models were proposed at a similar time with the former three building
on the GFlowNet formulation192,193. In this section, we compare our framework to these models with two important
caveats which we discuss in the following subsections:
1. Efforts for fair benchmarking
2. Specific benchmarking challenges related to model-intrinsic features and design decisions
7.1
Efforts for Fair Benchmarking
Generative models fundamentally model distributions and algorithmic optimization shifts this distribution towards
satisfying arbitrary objective functions. An exact, fair comparison should be that all methods define the same chemical
space and/or start from the same distribution. This is done in the Practical Molecular Optimization (PMO) benchmark194
where all methods are pre-trained (if necessary) or parent populations initialized (in the case of genetic algorithms)
based on ZINC 250k195. Moreover, the PMO benchmark also defines a common hyperparameter tuning procedure so
no particular method may potentially benefit from more hyperparameter tuning on the specific task. These are important
because it removes confounding variables. Amongst the first pre-print versions of the GFlowNet synthesizability-
constrained models, RxnFlow (Oct. 2024) was published latest and the authors compared to RGFN (June 2024) and
SFN (May 2024). In Table 8, we contrast some key features of the models. The key point we want to convey is that
all methods define a different chemical space, due to different building blocks and reaction templates. In the specific
case of RxnFlow, the authors introduce action space subsampling, which enables their method to scale to using larger
32
arXiv Template
A PREPRINT
building block sets (the authors tested up to 1.2M). In contrast, RGFN and SFN have limitations scaling to this building
block set size due to the GPU memory requirements which we will comment on in the Benchmarking Results section.
The building block sets and reaction templates define the chemical space the GFlowNets can sample from which means
it could be that certain defined spaces are more beneficial for specific optimization objectives.
Our framework generates molecules freely and "synthesizability" is assessed by a retrosynthesis model. Therefore, for
an exact comparison with existing works, we would have to enforce the same reaction templates. However, as shown in
Table 8, existing works all use different building block and template sets. RxnFlow’s formulation also enables using
larger building block sets, which can be viewed as an advantage as it covers a much larger chemical space. If RxnFlow
is able to scale to larger building block sets, we believe one should not necessarily truncate its building block set to
match other works. Therefore, we do not make an effort to compare amongst the synthesizability-constrained models.
Instead, we take our framework and match the set-up of each individual model, with still the following caveats:
1. Reward shaping function
2. Pre-training
3. What is considered "synthesizable"?
Reward Shaping Function. RGFN, SFN, RxnFlow, and SynFormer all define different reward shaping functions, i.e.,
how is the raw oracle output transformed into a reward signal for the model to learn (see Table 8). For example, in the
docking objectives, RGFN defines β = 4 and takes the exponential of the absolute docking score which equates to a
very large reward. By contrast, SFN and RxnFlow shape the reward such that it is upper-bounded slightly larger than
1.0 (to be precise, there is no explicit upper-bound, but the magnitude of docking scores will generally not exceed 15
and this constrains the reward). Differing reward shaping can be a confounding variable and we note that the PMO
benchmark194 fixed the reward functions and hence shaping. We note that our method also has its own reward shaping
(though it has not been changed from our previous works49,125). Therefore, we make the decision to use the reward
shaping functions as defined. If the specific reward functions were defined, then it is reasonable to expect that they work
for that model, if not also tuned.
Pre-training. As previously discussed, all methods define a different chemical space through differing building block
and reaction template sets. Our method pre-trains on PubChem144, thus our starting chemical space is also different.
We do not pre-train to define the same chemical space as each individual model as we believe a generalist pre-trained
model over a large chemical space is practically advantageous. We further comment on this in the next sub-section.
What is Considered "Synthesizable"? All synthesizability-constrained models, by design, output synthesizable
molecules, subject to reaction template limitations. Our framework does not intrinsically generate synthesizable
molecules and instead, learns to do so through feedback from a retrosynthesis model. The retrosynthesis model we use
in this work is MEGAN97 which has different reaction rules encoded. We note again that every existing work defines
different reaction rules due to template set differences. For an exact comparison, we should define a retrosynthesis
model with only the template sets of each model. We do not consider this and make the decision to designate every
generated molecules from synthesizability-constrained models as synthesizable. For our method, every generated
molecule with a retrosynthesis solved route will be considered synthesizable. Note that in all GFlowNet works, the
retrosynthesis model AiZynthFinder99,100 is used to further verify synthesizability even though the generated molecules
have been generated through reaction template combinations. In practice, retrosynthesis models can have advantages
such as generating multiple potential synthesis routes for a given target molecule. A disadvantage of using retrosynthesis
models over synthesizability-constrained generation is the increased compute. This is also one of the motivations of
existing works to amortize the cost of training on synthesis routes67,69,196 such that during generation, the model has
already learned to generate synthesizable molecules.
7.2
Benchmarking Design Decisions
In this sub-section, we discuss important design decisions we make when comparing our method to the existing
synthesizability-constrained models.
Building Block Scaling Limitations. The building block stock, together with the reaction "rules" (we say rules here
to encompass template and template-free reaction approaches), define the synthesizable chemical space. Smaller
building block stocks necessarily restrict the chemical space by sheer fact that there are less unique blocks to react.
Very common building block stocks (we report their sizes as of April 2025) used in synthesizability-constrained works
include Enamine’s Global Stock (307,929), US Stock (258,685), EU Stock (179,401) and Comprehensive Catalog
(1,415,470). If one is interested in designing synthesizable molecules, it is reasonable to use these stocks as is, because
they can all be ordered and delivered within a set time-frame. We now highlight that some GFlowNet works use much
more constrained building block sets (see Table 8 for a summary). RGFN uses 350 blocks (but investigate up to 64,000)
33
arXiv Template
A PREPRINT
in their main experiments with the rationale being that they are cheap and accessible71. This is reasonable but defines a
very narrow chemical space as even if the state space, i.e., all reachable molecules combining blocks and reactions, is
large, the diversity of the space is inherently limited. SFN uses 10,000 blocks in their main experiments but investigate
up to 221,181 (Enamine’s Global Stock from Nov. 2023)72. However, in these works, since the main experiments were
not run with larger block sets, it is unclear the performance in these settings.
In this work so far, we have been using eMolecules (23,077,162 in size) stock originally from Chen et al. 86. Building
blocks from eMolecules can often be delivered within days so it is reasonable to consider this entire block set197. This
is orders of magnitude larger than the existing synthesizability-constrained works which will have challenges scaling to
this size (we will show this explicitly in the Results section). Using the eMolecules stock provides our model with
access to an expanded synthesizable chemical space, which we do not believe is a disadvantage because we can scale to
this size. However, small reaction spaces can be advantageous if one is specifically interested in that space. By contrast,
SynFormer69 introduces a diffusion module that generates the fingerprints enabling scaling to longer fingerprints, i.e.,
more bits, which mitigates situations with bit collisions. During sampling, the generated fingerprints are compared
to the building block stock using L2 distance to retrieve a match. To have faster inference, the fingerprints should be
stored in memory as recomputing will be slow for large stocks, which necessarily requires more memory capacity. In
our benchmark experiments, we will match the building block sets used in the comparison works and then also show
the results using our default eMolecules stock.
One final caveat, which in our opinion, is the most important point, is that if a small, constrained building block set is
defined, then our model would have to first learn to generate molecules in this specific chemical space before being
able to optimize the objective function. It would be practical to then pre-train specifically on this chemical space via
enumeration using these exact blocks so that our model already can generate in this chemical space (pre-training can
take as little as 1 hour on a single GPU) and is exactly what some existing works do67,69,73. We do not consider this in
our comparison because we believe a generalist model that is malleable is practically advantageous. Therefore, we do
not deviate from our pre-trained PubChem144 model in this section (or anywhere in this work). It would be expected
that performance would improve if we pre-train specifically on the chemical space of interest.
Reaction Steps and Routes. Between GFlowNet works, the permitted number of reaction steps of generated molecules
differs from 3-4 (Table 8). To match this, we cap our synthesis routes to 4 reaction steps. Moreover, all GFlowNet works
only allow linear synthesis routes while our method and SynFormer allow branched pathways. We do not take any
action related to this point but highlight that it is a limitation as branched routes are common in medicinal chemistry.
Objective Functions. Most generated design papers achieving experimental validation use docking so we focus on
docking case studies43. In the development experiments so far, we dock against ClpP161. For benchmarking, we
instead take one protein target used in each corresponding GFlowNet paper. This means we can take their model
formulation out-of-the-box with their defined reward shaping. We also intentionally choose a different protein target
when comparing to each paper (as papers can have overlap) to additionally show our method is generalizable across any
target. Note that the synthesizability-constrained models would also be expected to generalize. However, we believe
this is still a practical and useful point as we do not change any reward shaping across all targets. For specific details on
the docking objective functions, we defer to the corresponding Results section.
Lastly, generating synthesizable molecules as defined by varying building block sets is "normal" synthesizability which
we tackled in our previous work49. In that work, we showed that QuickVina2-GPU docking158–160 is not a particularly
discriminative oracle, such that "good" docking compounds can generally be found in PubChem144 chemical space. The
synthetic accessibility (SA) score50 is defined based on PubChem space and is very well correlated with retrosynthesis
solvability. In this scenario, optimizing for SA score which is cheap to compute and then post-hoc filtering with
retrosynthesis models is a better allocation of computational resources. We ignore this observation in this work since
we ultimately want to show the ability to steer generation towards satisfying reaction constraints which require an
explicit synthesis route. Accordingly, we run additional experiments enforcing that all reactions are amide bond-forming
reactions since this is a common reaction.
7.3
Benchmarking Results
We designate separate sections to compare to each individual model since we are matching their case studies.
Compute Details. All models are run across 5 seeds (0-4). We compare based on Oracle and Wall Time budgets. We
match the PMO benchmark194 and compare under a 10,000 oracle budget. In all docking case studies, QuickVina2-
GPU158–160 is used which is a cheap docking oracle (seconds to dock batches of 100 molecules). If the oracle were
more expensive, it would be the bottleneck and some oracles can also have additional monetary costs, e.g., API costs.
Therefore, the oracle budget is a practical consideration. We additionally set a maximum time limit for runs to be
24 hours and report the results for however many molecules were generated. We do this since different models have
34
arXiv Template
A PREPRINT
different training and inference times. Next, all models, with the exception of RGFN71 were run on NVIDIA L40S
GPUs which have 48 GB GPU memory. RGFN was run on NVIDIA H100 GPUs which have 94 GB GPU memory
because 48 GB is insufficient. We note that H100 GPUs are faster than L40S GPUs but we ignore this in the comparison
results. The code versions (GitHub hash) we used are as follows:
• RGFN71: e21b5cb
• SynFlowNet72: 574f1e1
• RxnFlow75: 23017e3
• SynFormer69: bef02bc
We run these models generally out-of-the-box from the provided scripts in the codebases. As shown in Table 8, all
models use specific building block stocks from specific release dates. Since we do not have access to these previous
stock versions, we download the latest versions and follow the data pre-processing pipeline in the codebases. In this
way, we can ensure that the building block stocks are the same when comparing to each model. See Appendix E for
more details on exact data processing and small efficiency implementations we added.
Metrics. The benchmarking metrics are summarized in Table 9. In contrast to the Development Experiments, the
number of synthesizable molecules is not reported because the metrics are only reported for the synthesizable molecules.
To recap, this means:
• Synthesizability-constrained Models: All generated molecules are considered synthesizable
• Our Work: Only generated molecules with a retrosynthesis model solved pathway are considered synthesizable
The Modes metric is newly defined in this section and follows the GFlowNet works71. This is defined as the number
of molecules with < -10 docking score (sort the molecules first based on better docking scores) that are additionally
< 0.5 Tanimoto similarity to each other. We also report Yield which removes the Tanimoto similarity constraint. All
Tanimoto similarity calculations are computed with Morgan fingerprints with radius 2 and 1024 bits. For case studies
which also optimize for QED, we filter the generated molecules for QED > 0.5. Finally, we report Peak GPU Memory
of the models and note that QuickVina2-GPU158–160 which is used for all docking, consumes 20-24GB GPU memory
under the fixed parameters. We make sure to report the GPU memory consumption of the model only (excluding the
docking). This metric will help convey scaling limitations of existing synthesizability-constrained models.
7.3.1
RGFN
Objective Function. Minimize QuickVina2-GPU docking scores against TBLR1198. Optimizing only for docking
scores will exploit the docking algorithm and reward generating large, greasy molecules49,191. Since RGFN uses a large
reward magnitude (see Table 8), we do not want to impose a reward shaping transformation, though likely multiplying
the reward by QED would work since QED ∈[0, 1]. However, we make the decision to follow the objective function
exactly. The docking box follows the original work and is defined as 18Å x 18Å x 18Å71. The reward shaping follows
the original work as shown in Table 8. RGFN allows up to 4 reaction steps71.
Results. The RGFN/Saturn comparison results are shown in Table 10. RGFN’s71 out-of-the-box building block stock is
350 curated fragments. We did not run this configuration because with such a constrained chemical space, it would
be much more practical to pre-train Saturn on this enumerated space. In this way, Saturn would not need to first learn
to generate molecules in this chemical space before being able to optimize the objective. In the RGFN work, the
authors scaled up their building block set up to 64,000 by sampling from Enamine stock. We do the same and use
Enamine Global from Feb. 2025 but did not follow their specific building block selection procedure described in
their Appendix E71, which curates blocks to be maximally compatible with their defined reactions. Using this 64,000
building block stock, our efforts to run RGFN led to GPU out-of-memory on an H100 with 94 GB GPU memory.
As a result, we truncated the 64,000 building blocks to 50,000. With 50,000 blocks, we sometimes still experienced
GPU out-of-memory due to gradient accumulation, but we re-ran the experiment if this occurred. For Saturn, we run
experiments with the 64,000 stock with and without enforcing all amide reactions using NameRxn157. We also run
Saturn with the default (in this work) eMolecules stock (23,077,162 in size). We summarize the results and bold the
metric that supports the observation:
• With 350 fragments, RGFN generates many Modes - RGFN Modes (Yield)
• For RGFN, scaling the block set from 350 to 50,000 leads to a notable performance drop, somewhat unintu-
itively - RGFN Modes (Yield) comparing 350/50,000 blocks
35
arXiv Template
A PREPRINT
Table 9: Summary of benchmarking evaluation metrics. All metrics are reported as the average and standard deviation
across 5 seeds (0–4 inclusive).
Category
Metric (averaged across all 5 seeds)
Compute
Oracle Calls: # unique generated molecules scored by the objective function.a This
is fixed at 10,000 following the PMO benchmark 194
Wall Time: Compute time on a shared NVIDIA L40S GPU cluster. This is fixed at
24h
Peak GPU Memory: Peak GPU memory consumption by the model
Molecule Set Quality
Modes: Set of molecules with QuickVina2-GPU docking score < -10158–160 against
a given protein target. Molecules must also have Tanimoto similarity < 0.5 to each
other, following the RGFN work71
Yield: Set of molecules with docking score < -10 against a given protein target
The metrics below are reported for the ‘Yield‘ set of generated molecules:
QED162: Quantitative estimate of drug-likeness. (Not reported for RGFN as it was
not part of the objective function)
Bemis–Murcko Scaffolds165: # unique Bemis–Murcko scaffolds
IntDiv1166: Pairwise Morgan fingerprint similarity (radius = 2, nBits = 1024)
#Circles167: Sphere packing number (0.75 similarity threshold)
Molecular Weight (MW): Comments on molecular size
Ligand Efficiency (LE): Docking score divided by # heavy atoms
a For RGFN71, RxnFlow75, and SynFormer69, we implement checks to ensure that only unique and not previously
generated molecules are scored by the objective function. This removes any repeated scoring of molecules, for
maximum efficiency. For SynFlowNet72, these extra checks were not implemented due to requiring more involved
changes in the codebase which we will implement in a later version of this work.
• RGFN accumulates GPU memory consumption, limiting scalability. 50,000 blocks consumes 55 GB - RGFN
Peak GPU Memory
• In general, Saturn generates less Modes than RGFN, which also means less diverse molecules - Compare
RGFN and Saturn Modes, IntDiv1, #Circles
• Saturn is much more sample-efficient under the oracle budget, with much higher Yield - Compare RGFN
50,000 and Saturn 64,000 Yield (RGFN 350 has higher Yield)
• RGFN exploits the docking oracle and generates large molecules with much lower ligand efficiency - Compare
RGFN and Saturn MW and LE
• Saturn generates higher quality molecules (MW and LE) even under the only amide reaction constraint -
Saturn Only Amide results
• Saturn demonstrates scalability as using the eMolecules stock results in the most sample-efficient (under the
10,000 oracle budget) configuration. The generated molecules have better property profiles across all metrics -
Saturn eMolecules
We further comment on RGFN’s most performant configuration which uses 350 fragments. Based on our previous
work49, QuickVina2-GPU docking is a permissive oracle, where many molecules can receive good docking scores199.
This diminished capability to distinguish between molecules is a limitation in real-world drug discovery, and the
industry standard uses docking algorithms, e.g., Glide168, which are more expensive to run but can lead to much better
enrichment172. The main point we want to highlight is that with oracles that are more discriminative, one may need
to access a much larger and diverse chemical space to generate property-optimized molecules and we have shown
that RGFN has scaling limitations. Furthermore, existing ultra-large make-on-demand libraries which are enumerated
with different building blocks, cover different chemical spaces184. There is demand for these distinct libraries because
varying design objectives require different chemotypes. The ability to scale to much larger building block sets, like we
have shown, is a practical advantage.
36
arXiv Template
A PREPRINT
Table 10: RGFN-Saturn comparison results. The mean and standard deviation are reported across 5 seeds (0–4
inclusive). Results are reported for both the 24h wall time limit and 10,000 oracle calls budget. RGFN was run on an
NVIDIA H100 (94 GB GPU memory), while Saturn was run on an NVIDIA L40S (48 GB GPU memory). DS denotes
QuickVina2-GPU docking score. Scafs denotes the number of unique Bemis-Murcko scaffolds. Only amide reactions
used NameRxn labeling. Saturn out-of-the-box outperforms RGFN under the oracle budget.
Blocks
Modes ↑
DS ↓
Scafs ↑
IntDiv1 ↑
#Circles ↑
MW ↓
LE ↑
(Yield) ↑
Reaction-GFlowNet (RGFN)71
Peak GPU Memory: 350 blocks = 44 GB | 50,000 blocks = 55 GB
350
Time Limit
10843 ± 188
−10.99 ± 0.01
48559 ± 2593
0.751 ± 0.005
57 ± 1
654.08 ± 4.94
0.23 ± 0.00
(24h)
(51868 ± 2371)
Oracle Limit
1516 ± 122
−10.75 ± 0.03
2260 ± 138
0.780 ± 0.008
32 ± 2
643.96 ± 4.05
0.23 ± 0.00
(10,000 Calls)
(2265 ± 140)
50,000
Time Limit
14996 ± 1698
−10.95 ± 0.06
19861 ± 4519
0.817 ± 0.008
413 ± 79
739.47 ± 10.80
0.21 ± 0.00
(24h)
(19898 ± 4535)
Oracle Limit
341 ± 58
−10.58 ± 0.03
426 ± 94
0.822 ± 0.013
87 ± 10
637.46 ± 10.09
0.24 ± 0.01
(10,000 Calls)
(431 ± 99)
This Work (Saturn)
Peak GPU Memory: All Configurations = 5.5 GB
64,000
Time Limit
302 ± 63
−11.27 ± 0.45
25867 ± 4995
0.681 ± 0.025
11 ± 1
562.49 ± 30.63
0.27 ± 0.01
(24h)
(27982 ± 5813)
Oracle Limit
90 ± 14
−11.11 ± 0.32
1879 ± 440
0.675 ± 0.013
7 ± 2
510.43 ± 29.28
0.30 ± 0.02
(10,000 Calls)
(1992 ± 406)
64,000
Only Amide
(NameRxn)
Time Limit
293 ± 108
−10.82 ± 0.17
7965 ± 2876
0.717 ± 0.038
11 ± 2
540.34 ± 20.21
0.27 ± 0.01
(24h)
(8843 ± 3206)
Oracle Limit
60 ± 17
−10.65 ± 0.10
436 ± 255
0.727 ± 0.019
7 ± 1
482.54 ± 42.64
0.31 ± 0.02
(10,000 Calls)
(486 ± 288)
eMolecules
Time Limit
1143 ± 399
−12.43 ± 0.43
13267 ± 5625
0.717 ± 0.029
36 ± 5
517.68 ± 16.65
0.31 ± 0.01
(24h)
(14151 ± 5977)
Oracle Limit
694 ± 161
−12.04 ± 0.30
4415 ± 857
0.702 ± 0.053
33 ± 3
503.51 ± 12.08
0.31 ± 0.00
(10,000 Calls)
(4844 ± 942)
7.3.2
SynFlowNet
Objective Function. Minimize QuickVina2-GPU docking scores against KRAS200 and maximize QED. In certain case
studies in the SFN work, maximum reward (1.0) can be obtained by achieving QED = 0.772. This is reasonable as drug
molecules do not necessarily need to have "perfect" (1.0) QED. However, we do not adopt this clipping and maximize
QED, as is. The docking box follows the original work and is defined as 18Å x 18Å x 18Å72. The reward shaping
follows the original work as shown in Table 8. The SFN work tested two configurations allowing reactions routes of up
to 3 or 4 steps72. In general, 3 performed better and is the default in the codebase. Therefore, we used this default value.
Results. The SynFlowNet/Saturn comparison results are shown in Table 11. SFN’s72 out-of-the-box building block
stock is 10,000 molecules from Enamine Global. We highlight that it would also likely be much more practical to
pre-train Saturn on this enumerated space. However, we retain our pre-trained model on PubChem and directly use
the same block set. SFN further showed the capability to scale the building block set up to the entire Enamine Global
stock (we downloaded the version from Feb. 2025). We also match this block set and run Saturn with and without
enforcing all amide reactions using NameRxn157. Lastly, we continue to run Saturn with the default eMolecules stock
(23,077,162 in size). We summarize the results and bold the metric that supports the observation:
37
arXiv Template
A PREPRINT
Table 11: SynFlowNet-Saturn comparison results. The mean and standard deviation are reported across 5 seeds (0–4
inclusive). Results are reported for both the 24h wall time limit and 10,000 oracle calls budget. Both models were run
on an NVIDIA L40S (48 GB GPU memory). DS denotes QuickVina2-GPU docking score. Scafs denotes the number
of unique Bemis-Murcko scaffolds. Only amide reactions used NameRxn labeling. N=2 for Saturn with 10,000 blocks
indicates that under the Oracle Limit, only 2/5 seeds successfully generated ≥1 molecule(s) with DS < -10 and QED >
0.5. Saturn out-of-the-box outperforms SynFlowNet under the oracle budget.
Blocks
Modes ↑
DS ↓
Scafs ↑
IntDiv1 ↑
#Circles ↑
MW ↓
LE ↑
(Yield) ↑
(QED) ↑
SynFlowNet (SFN)72
Peak GPU Memory: 10,000 blocks = 2.0 GB | Enamine Global (Feb. 2025) 240,254 blocks = 15 GB
10,000
Time Limit
741 ± 132
−10.37 ± 0.01
1850 ± 384
0.834 ± 0.001
117 ± 11
359.33 ± 2.74
0.41 ± 0.00
(24h)
(2233 ± 447)
(0.77 ± 0.01)
Oracle Limit
119 ± 30
−10.35 ± 0.03
144 ± 36
0.843 ± 0.004
51 ± 3
379.47 ± 7.34
0.39 ± 0.01
(10,000 Calls)
(148 ± 43)
(0.67 ± 0.03)
Enamine Global
(Feb. 2025)
Time Limit
1721 ± 718
−10.35 ± 0.01
6695 ± 3179
0.795 ± 0.020
121 ± 17
347.79 ± 17.67
0.42 ± 0.01
(24h)
(13362 ± 6857)
(0.86 ± 0.05)
Oracle Limit
107 ± 40
−10.36 ± 0.03
126 ± 51
0.829 ± 0.014
46 ± 16
396.58 ± 6.20
0.38 ± 0.01
(10,000 Calls)
(128 ± 51)
(0.66 ± 0.02)
This Work (Saturn)
Peak GPU Memory: All Configurations = 5.5 GB
10,000
Time Limit
28 ± 24
−10.37 ± 0.09
105 ± 130
0.545 ± 0.275
3 ± 1
405.05 ± 22.24
0.36 ± 0.02
(24h)
(107 ± 131)
(0.60 ± 0.04)
Oracle Limit (N=2)
4 ± 3
−10.41 ± 0.17
7 ± 6
0.328 ± 0.328
2 ± 1
390.89 ± 31.94
0.38 ± 0.03
(10,000 Calls)
(7 ± 6)
(0.63 ± 0.06)
Enamine Global
Time Limit
863 ± 181
−10.58 ± 0.03
26451 ± 8659
0.732 ± 0.011
25 ± 4
364.96 ± 4.56
0.39 ± 0.01
(24h)
(30061 ± 10828)
(0.88 ± 0.01)
Oracle Limit
237 ± 32
−10.59 ± 0.06
1776 ± 389
0.729 ± 0.023
16 ± 4
346.15 ± 2.97
0.43 ± 0.01
(10,000 Calls)
(1960 ± 364)
(0.86 ± 0.02)
Enamine Global
Only Amide
(NameRxn)
Time Limit
402 ± 14
−10.41 ± 0.02
5905 ± 490
0.750 ± 0.003
16 ± 2
325.91 ± 3.46
0.44 ± 0.00
(24h)
(6297 ± 505)
(0.89 ± 0.00)
Oracle Limit
135 ± 8
−10.42 ± 0.05
1118 ± 210
0.722 ± 0.006
11 ± 2
325.03 ± 2.83
0.43 ± 0.00
(10,000 Calls)
(1207 ± 244)
(0.89 ± 0.01)
eMolecules
Time Limit
539 ± 50
−10.61 ± 0.04
5789 ± 402
0.737 ± 0.023
26 ± 2
345.45 ± 5.42
0.42 ± 0.01
(24h)
(7004 ± 675)
(0.88 ± 0.01)
Oracle Limit
341 ± 16
−10.57 ± 0.03
2128 ± 134
0.746 ± 0.006
26 ± 2
346.85 ± 3.72
0.43 ± 0.00
(10,000 Calls)
(2487 ± 170)
(0.87 ± 0.01)
• With 10,000 blocks, SFN outperforms Saturn across all metrics - Compare SFN and Saturn 10,000 blocks
all metrics
• For SFN, scaling the block set from 10,000 to Enamine Global (240,254 blocks) improves performance under
the time limit but not under the oracle budget - SFN Modes (Yield) comparing the Time and Oracle Limits
• SFN also has scaling limitations as going from 10,000 to 240,254 blocks increases GPU memory consumption
from 2 to 15 GB. Further increasing the block sizes by factors of 10 or 100 (as in eMolecules) would likely not
be possible on a single GPU -SFN Peak GPU Memory
• In general, Saturn generates less Modes than SFN, (though this is not as notable as when comparing to RGFN)
which also means less diverse molecules - Compare RGFN and Saturn Modes, IntDiv1, #Circles
38
arXiv Template
A PREPRINT
• With Enamine Global stock, Saturn largely outperforms SFN under both Time and Oracle Limits. Many
more property-optimized molecules are generated with a trade-off on diversity - Compare SFN and Saturn
Enamine Global metrics
• Under an oracle budget, SFN can struggle to perform multi-parameter optimization - SFN QED which is not
optimized yet
• Saturn with eMolecules finds less Modes and has lower Yield than Enamine Global because the search over
23M building blocks takes longer than over 240k - Compare Saturn Enamine Global and eMolecules
Modes (Yield)
• Saturn with eMolecules under the oracle budget generates the highest quality molecules - Saturn eMolecules
LE
• Saturn generates higher quality molecules (MW and LE) even under the only amide reaction constraint (within
the Oracle Limit) - Saturn Only Amide results
When using the Enamine Global stock (240,254 blocks) and eMolecules (23,077,162 blocks), all Saturn configurations
outperform SFN under the 10,000 oracle budget with a trade-off in diversity for enhanced sample efficiency. Very
recent GFlowNet work proposes the same diversity trade-off to improve sample efficiency201. SFN’s metrics drastically
improve under the 24h time limit compared to the oracle budget, suggesting that a large number of oracle calls is required
for optimization. In the original work, the authors used a 300,000 oracle budget when comparing to REINVENT40,147,148.
With more expensive oracles, one cannot freely call the oracle for a large number of molecules, making such a budget
potentially infeasible.
7.3.3
RxnFlow
Objective Function. Minimize QuickVina2-GPU docking scores against ADRB2 which is from the LIT-PCBA
dataset202 with 15 protein targets and maximize QED. We chose ADRB2 arbitrarily (it is the first target in LIT-PCBA
when sorted in alphabetical order). The docking box follows the original work and is defined as 22.5Å x 22.5Å x
22.5Å75. The reward shaping follows the original work as shown in Table 8. RxnFlow allows up to 4 reaction steps75.
Results. The RxnFlow/Saturn comparison results are shown in Table 12. RxnFlow’s75 out-of-the-box building block
stock is Enamine Comprehensive (we downloaded the version from Feb. 2025). After following RxnFlow’s building
blocks pre-processing pipeline for Enamine Comprehensive, 1,273,563 building blocks were left. With this building
block size, we believe it would not necessarily be more practical to pre-train Saturn on this enumerated chemical
space because the space is enormous. Therefore, in contrast to our comparison experiments with RGFN and SFN
which featured small out-of-the-box building block sets, we do not believe it is likely that pre-training on this specific
space would improve Saturn’s performance appreciably. Similar to before, we match this building block set and run
Saturn with and without enforcing all amide reactions using NameRxn157. We continue to run Saturn with the default
eMolecules stock (23,077,162 in size). We summarize the results and bold the metric that supports the observation:
• Under the 10,000 oracle budget, Saturn notably outperforms RxnFlow across all configurations, even when
enforcing only amide reactions. Under the oracle budget, RxnFlow generates almost no molecules passing the
docking (< -10) and QED (> 0.5) filters - Compare all metrics across the Oracle Limit
• Under the 24h time limit, RxnFlow generates many Modes, though the Yield is essentially the same as Saturn.
Therefore, RxnFlow can generate more diverse results than Saturn - See RxnFlow Time Limit IntDiv1 and
#Circles
• Saturn generates higher quality molecules compared to RxnFlow - Compare docking scores and LE between
RxnFlow and all Saturn configurations
• RxnFlow introduced action space subsampling (we used the default 2% in the codebase) to enable scaling
to 1.27M blocks. However, further scaling to the eMolecules stock (23M), for example, would be likely
prohibitive as 1.27M blocks already takes 19 GB GPU memory - RxnFlow Peak GPU Memory
RxnFlow introduces action space subsampling to accommodate larger building block sets. The motivation, as stated by
the authors is that existing works restrict the search space (via less building blocks) for optimization efficiency, which
trades off chemical space diversity75. Action space subsampling estimates the GFlowNet forward transition probability
by considering only a sub-set of the action space. This mitigates memory requirements for large building block sets,
at the expense of variance, since the transition probabilities are more noisy. Empirically, we show in the comparison
results in Table 12 that the sample efficiency with the Enamine Comprehensive (1,273,563 blocks) stock is notably
diminished.
39
arXiv Template
A PREPRINT
Table 12: RxnFlow-Saturn comparison results. The mean and standard deviation are reported across 5 seeds (0–4
inclusive). Results are reported for both the 24h wall time limit and 10,000 oracle calls budget. Both models were
run on an NVIDIA L40S (48 GB GPU memory). DS denotes QuickVina2-GPU docking score. Scafs denotes the
number of unique Bemis-Murcko scaffolds. Only amide reactions used NameRxn labeling. Saturn out-of-the-box
outperforms RxnFlow under the oracle budget.
Blocks
Modes ↑
DS ↓
Scafs ↑
IntDiv1 ↑
#Circles ↑
MW ↓
LE ↑
(Yield) ↑
(QED) ↑
RxnFlow
Peak GPU Memory: Enamine Comprehensive (Feb. 2025) 1,273,563 blocks = 19 GB
Enamine Comprehensive
(Feb. 2025)
Time Limit
12812 ± 589
−10.64 ± 0.05
26701 ± 3154
0.817 ± 0.014
690 ± 9
336.36 ± 0.82
0.44 ± 0.00
(24h)
(39606 ± 7164)
(0.85 ± 0.01)
Oracle Limit
18 ± 2
−10.50 ± 0.04
18 ± 2
0.810 ± 0.009
15 ± 2
384.21 ± 10.55
0.39 ± 0.01
(10,000 Calls)
(18 ± 2)
(0.63 ± 0.02)
This Work (Saturn)
Peak GPU Memory: All Configurations = 5.5 GB
Enamine Comprehensive
Time Limit
1179 ± 116
−11.51 ± 0.19
36977 ± 4359
0.732 ± 0.012
37 ± 3
338.92 ± 8.91
0.46 ± 0.01
(24h)
(39796 ± 4600)
(0.91 ± 0.00)
Oracle Limit
528 ± 41
−11.15 ± 0.05
3756 ± 305
0.737 ± 0.012
32 ± 4
331.07 ± 4.94
0.46 ± 0.01
(10,000 Calls)
(4433 ± 332)
(0.89 ± 0.00)
Enamine Comprehensive
Only Amide
(NameRxn)
Time Limit
744 ± 71
−11.06 ± 0.02
17928 ± 2361
0.743 ± 0.005
26 ± 2
321.66 ± 0.49
0.47 ± 0.00
(24h)
(19721 ± 2249)
(0.91 ± 0.00)
Oracle Limit
375 ± 40
−11.03 ± 0.08
3463 ± 264
0.733 ± 0.015
22 ± 1
318.88 ± 2.44
0.47 ± 0.00
(10,000 Calls)
(4008 ± 274)
(0.90 ± 0.00)
eMolecules
Time Limit
829 ± 143
−11.36 ± 0.13
9419 ± 618
0.730 ± 0.013
38 ± 7
336.73 ± 2.25
0.46 ± 0.01
(24h)
(10612 ± 837)
(0.90 ± 0.00)
Oracle Limit
636 ± 70
−11.10 ± 0.11
3762 ± 317
0.742 ± 0.010
35 ± 7
332.46 ± 1.95
0.45 ± 0.00
(10,000 Calls)
(4582 ± 216)
(0.89 ± 0.00)
7.3.4
SynFormer
Objective Function. Minimize QuickVina2-GPU docking scores against ALDH1 which is also from the LIT-PCBA
dataset202 and maximize QED. We chose ALDH1 arbitrarily (it is the second target in LIT-PCBA when sorted in
alphabetical order and we already used the first target for RxnFlow). The docking box follows the RxnFlow work and
is defined as 22.5Å x 22.5Å x 22.5Å75. We used a docking task from RxnFlow because the SynFormer work69 does
not have case studies optimizing for docking scores. We define the reward shaping for SynFormer as our own reward
shaping where r ∈[0, 1]. There is reason to believe this works well because SynFormer performs optimization tasks
from Therapeutics Data Commons (TDC) which often has this reward normalization. During pre-training, SynFormer69
follows the authors’ previous ChemProjector work73 which generates training data up to 5 reaction steps. Therefore, it
is reasonable to assume the model generates molecules with up to 5 reaction steps (though this could change during
optimization).
Results. The SynFormer/Saturn comparison results are shown in Table 13. SynFormer69 pre-trains on enumerated
routes based on Enamine US (Oct. 2023)196. We obtain the Enamine US (Oct. 2023) stock directly from Enamine and
were sent 5 different sub-versions (there were 5 version dumps in Oct. 2023). We use the earliest one from Oct. 2,
2023 which is the smallest stock. SynFormer features two variants: an encoder-decoder and decoder-only where the
former takes generated molecules by GraphGA203 and projects out synthesizability analogs. We chose to compare to
this encoder-decoder variant (SynFormer-ED) because the authors state that the decoder-only variant (SynFormer-D)
currently requires a lot of oracle calls. Moreover, in the paper, the merged GraphGA and SynFormer-ED model is
named GraphGA-SF and features sample-efficient optimization results across several benchmark tasks. Therefore, we
compare to GraphGA-SF. As GraphGA requires an initial population of molecules, we randomly sample from Saturn’s
processed PubChem dataset144. As with before, we match the stock (Enamine US Oct. 2023 in this case) and run Saturn
40
arXiv Template
A PREPRINT
Table 13: SynFormer-Saturn comparison results. The mean and standard deviation are reported across 5 seeds (0–4
inclusive). Results are reported for both the 24h wall time limit and 10,000 oracle calls budget. Both models were
run on an NVIDIA L40S (48 GB GPU memory). DS denotes QuickVina2-GPU docking score. Scafs denotes the
number of unique Bemis-Murcko scaffolds. Only amide reactions used NameRxn labeling. Saturn out-of-the-box
outperforms SynFormer under the time and oracle budgets.
Blocks
Modes ↑
DS ↓
Scafs ↑
IntDiv1 ↑
#Circles ↑
MW ↓
LE ↑
(Yield) ↑
(QED) ↑
SynFormer (GraphGA-SF)69
Peak GPU Memory: Enamine US (Oct. 2023) 225,824 blocks = 3.2 GB
Enamine US
(Oct. 2023)
Time Limit
361 ± 68
−10.62 ± 0.09
632 ± 187
0.849 ± 0.011
103 ± 13
406.03 ± 9.90
0.37 ± 0.01
(24h)
(651 ± 190)
(0.66 ± 0.01)
Oracle Limit
357 ± 68
−10.62 ± 0.09
625 ± 189
0.849 ± 0.011
104 ± 11
405.91 ± 9.90
0.37 ± 0.01
(10,000 Calls)
(645 ± 192)
(0.66 ± 0.01)
This Work (Saturn)
Peak GPU Memory: All Configurations = 5.5 GB
Enamine US
Time Limit
1111 ± 133
−10.93 ± 0.16
37745 ± 1488
0.748 ± 0.013
30 ± 2
360.60 ± 7.05
0.41 ± 0.01
(24h)
(43661 ± 2193)
(0.88 ± 0.00)
Oracle Limit
330 ± 25
−10.86 ± 0.18
2861 ± 242
0.727 ± 0.009
21 ± 3
349.18 ± 9.95
0.42 ± 0.01
(10,000 Calls)
(3331 ± 105)
(0.88 ± 0.01)
Enamine US
Only Amide
(NameRxn)
Time Limit
455 ± 71
−10.60 ± 0.02
12138 ± 789
0.731 ± 0.007
16 ± 4
332.09 ± 3.62
0.43 ± 0.00
(24h)
(14150 ± 669)
(0.89 ± 0.00)
Oracle Limit
196 ± 19
−10.66 ± 0.06
2567 ± 274
0.705 ± 0.009
13 ± 2
325.10 ± 5.18
0.44 ± 0.00
(10,000 Calls)
(2924 ± 335)
(0.90 ± 0.00)
eMolecules
Time Limit
770 ± 38
−11.17 ± 0.24
9159 ± 861
0.728 ± 0.008
40 ± 4
349.32 ± 11.07
0.43 ± 0.01
(24h)
(10538 ± 1137)
(0.88 ± 0.01)
Oracle Limit
571 ± 46
−10.91 ± 0.07
3463 ± 255
0.741 ± 0.016
36 ± 2
345.58 ± 6.26
0.43 ± 0.01
(10,000 Calls)
(4079 ± 303)
(0.87 ± 0.01)
with and without enforcing all amide reactions using NameRxn157. We also show results for Saturn with the default
eMolecules stock (23,077,162 in size). We summarize the results and bold the metric that supports the observation:
• Under the 10,000 oracle budget, Saturn notably outperforms SynFormer across all configurations, even when
enforcing only amide reactions - Compare all metrics across the Oracle Limit
• While SynFormer does not need to run an explicit retrosynthesis search on every molecule, the projection
operation takes a notable amount of time. This is the reason that the Oracle Limit and Time Limit results are
almost identical, as it takes almost 24h to generate 10,000 unique molecules - Compare SynFormer Time
Limit and Oracle Limit results
• Saturn generates higher quality molecules compared to SynFormer, optimizing all properties in the objective
function - Compare QED and LE between SynFormer and all Saturn configurations
• SynFormer can generate more diverse results than Saturn but Saturn generates many more property-optimized
molecules - Compare SynFormer and Saturn IntDiv1 and #Circles
• SynFormer results under the Time and Oracle Limits are almost identical because the 10,000 oracle budget
took about 24h to exhaust - Compare SynFormer Time and Oracle Limit Modes (Yield)
7.4
Post-benchmark General Observations
After benchmarking against RGFN71, SFN72, RxnFlow75, and SynFormer69, we highlight some general observations
and add more discussion.
41
arXiv Template
A PREPRINT
Diverse Molecules and Property Optimization. The GFlowNet models can generate diverse molecules (Modes) but
can have diminished sample efficiency. This has been shown in the PMO benchmark194 and also in the Benchmark
Results here. By design, GFlowNets sample trajectories (molecules in this case) with probability proportional to the
reward in order to sample diverse solutions193. However, we believe that diverse results need to also be property-
optimized. Very recently, Atomic GFlowNets (A-GFNs)201 were proposed which perform pre-training for about 2
weeks on 4 NVIDIA A100 GPUs with pre-computed inexpensive oracles such as QED score. This pre-trained model
was then tasked to optimize objectives and the most exploitative setting tested resulted in the highest sample efficiency.
These results demonstrate the trade-off between sample efficiency and diversity which has been previously reported194.
The A-GFN formulation could be potentially applied to the synthesizability-constrained GFlowNets for improved
sample efficiency.
GFlowNet Models with Reaction Constraints. The synthesizability-constrained GFlowNets could conceivably also
be tasked with reaction constraints, such as allowing only amide reactions by masking the actions. Since this is not
natively implemented, we do not implement it ourselves.
Scalability. We observe that with larger action spaces (increasing building block set size), GFlowNets become less
sample-efficient, which limits the scalability, even if there was sufficient GPU memory. Consequently, we find that
the smallest building block sets, e.g., 350 for RGFN and 10,000 for SFN (for SFN, increasing the block set does
not improve the oracle limit performance), were the best performing configurations in the respective models. As
stated previously, this can be advantageous if one is interested in a specific chemical space. However, a constrained
space can limit the ability to find favourable molecules when considering arbitrary objective functions. We believe
a generalist pre-trained model that can be moulded towards arbitrary objective functions in an enormous chemical
space is practically advantageous. In all experiments so far (and in this paper), we use the same model out-of-the-box.
Moreover, under constrained chemical spaces, we believe a comparison with enumeration-based approaches such as
SYNOPSIS27 or DINGOS29 would be interesting. We leave this for future work.
Time and Oracle Limits. We ran every single benchmark experiment under 24h Time and 10,000 Oracle Budget Limits.
We did this because our framework has the overhead of running an explicit retrosynthesis search on every generated
molecule. By contrast, all GFlowNet models generate synthesizable molecules directly and SynFormer projects a
synthesizable analog from GraphGA generated molecules. The objective function for all models used QuickVina2-GPU
docking which is a computationally inexpensive oracle. In terms of docking, QuickVina2-GPU can be permissive,
offering poor (or even none as is common with docking) correlation with actual binding affinity172,199,204. This is the
reason more expensive, higher-fidelity oracles are used. We give specific examples of such oracles:
1. More expensive docking such as Schrödinger Glide168 which is one of the industry standards
2. Ensemble docking where a single molecule is docked against multiple protein receptors205. This can be a
valuable compromise between static docking and molecular dynamics as multiple protein receptors feature
different residue positions
3. Direct molecular dynamic simulations to estimate binding free energy, such as MMPB(GB)SA204,206
4. Quantum-mechanical descriptors where semi-empirical or DFT calculations are performed122,207,208
In these settings, the simulation oracle itself would be the bottleneck, and it would not be possible to evaluate over
100,000-300,000 generated molecules like in the GFlowNet works in under 24h. This is why the 10,000 Oracle Limit is
a practical consideration and is also the motivation in the PMO benchmark194.
42
arXiv Template
A PREPRINT
8
Conclusion
This work introduces a small molecule generative framework capable of generating molecules predicted to be synthesiz-
able using specific reactions and/or avoiding other reactions. Previously, we described a sample-efficient molecular
generative framework named ‘Saturn‘ capable of multi-parameter optimization141. In follow-up work, we demonstrated
that Saturn can generate synthesizable molecules by coupling a retrosynthesis model to the reinforcement learning
optimization loop49. Subsequently, we proposed the ‘TANGO‘ reward function that enables generating molecules
whose synthesis routes incorporate specific pre-defined building blocks125. Here, we abstract the problem one-step
higher and demonstrate steerable and granular synthesizability control. We demonstrate molecular generation under
various and stringent reaction constraints with the continued capability to enforce specific building blocks in the
synthesis routes, as described in our previous TANGO work125. We summarize and highlight the new capabilities:
(1) Enforcing the Presence, Avoiding, or Only Allowing Specific Reactions. In Sections 4.1 and 4.1.3, we show that
generated molecules have synthesis routes enforcing the presence and/or avoiding specific reactions. We observed the
emergence of specific reaction tandems in the synthetic routes when avoiding certain undesired reactions to satisfy
the MPO objective. Furthermore, we show the capability to enforce that all reactions in the synthesis routes belong to
a pre-defined set of reactions. In addition to making the synthesis of generated molecules more tractable, this opens
the opportunity to design batches of property-optimized molecules that can be synthesized using the same reaction
procedures and/or equipment.
(2) Incentivizing Short Synthesis Routes. In Section 4.1.4, we show that Saturn can be incentivized to generate
property-optimized molecules with shorter synthesis routes. We highlighted interesting observations where shorter
synthesis routes implicitly use larger building blocks, so as to satisfy the docking objective (larger molecules, on
average, have better docking scores). Shorter synthesis routes naturally place less synthesis burden on chemists and
opens the opportunity for faster ‘make‘ cycles and decreased costs.
(3) Industrial Waste Valorization. In Section 5, we draw inspiration from Wołos et al. 177 demonstrating the ability to
transform industrial waste into valuable known medicines or agrochemicals. We abstract the problem one-step higher
and show that the combination of our TANGO work125 and this work, enables the de novo design of property-optimized
molecules derived from industrial waste. For maximal practicality, we demonstrate that industrial waste from the US
and the EU can be combined by geographical origin with their respective building block stocks, as supplied by Enamine,
to design potential COX2178 inhibitors. The designed potential inhibitors possess optimized property profiles but more
importantly, their synthesis routes incorporate industrial waste building blocks and pre-defined reactions. This opens
the opportunity to valorize arbitrary specific building blocks or byproducts towards arbitrary design objectives while
guaranteeing the molecule’s supply chain.
(4) Generative Virtual Screening. In Section 6, we demonstrate the interplay between ultra-large virtual screening and
generative design. Ultra-large libraries are constructed using a set of building blocks and specific reactions. Enforcing
similar synthesizability constraints enables generating molecules with exact matches in the library. We show that just
using the same building block stock allows our generalist model to be steered to generate molecules with a 40% exact
match rate in Freedom 4.0 containing 142 billion molecules, while optimizing a docking multi-parameter optimization
objective. Going further, by enforcing the same reactions in the generative framework as the ones used to enumerate
Freedom 4.0, we can achieve over 90% exact match rate. Moreover, and as expected, we show that enforcing reactions
that are less represented in Freedom 4.0, results in less exact matches, and vice versa. Ultra-large libraries will continue
to grow and as of May 2025, the largest commercial library to the best of our knowledge is ‘eXplore‘ which is on the
order of 1012 184. Our framework opens the opportunity to overcome the exponential scaling. We generated and docked
15,000 molecules which amounts to 0.00001% of Freedom 4.0 (142 billion) to find docking-optimized molecules.
Beyond these new capabilities, we benchmark against recently proposed synthesizability-constrained generative models
including Reaction GFlowNet (RGFN)71, SynFlowNet (SFN)72, RxnFlow75, and SynFormer69. These models directly
generate synthesizable molecules by combining building blocks and reaction templates. In Section 7, we show that
Saturn is the most sample-efficient model and notably outperforms the synthesizability-constrained models under
a 10,000 oracle budget, generating more property-optimized molecules. However, this comes with a trade-off in
diversity but as synthesis and experimental validation will continue to be the major bottleneck, generating excellent
candidate molecules under limited computational budgets is practically important. We highlight that the synthesizability-
constrained GFlowNet models (RGFN, SFN, and RxnFlow) generate diverse molecules when allowing a large number
of oracle calls. This makes the models performant when the oracle is computationally inexpensive, but limits application
to higher-fidelity oracle settings that confer enhanced predictive accuracy. Lastly, the GFlowNet models currently only
generate linear synthesis routes while we note that SynFormer and our framework can propose branched synthesis
routes.
43
arXiv Template
A PREPRINT
We conclude with general higher-level observations around our framework and future work. The main theme of this paper
is taking a generalist pre-trained model and incentivizing desired behaviours through reinforcement learning. However,
reinforcement learning can be data-demanding209, requiring a large number of interactions with the environment, which
in our problem setting means generating molecules and evaluating their property profiles. This epitomizes the sample
efficiency problem where we want to label as few molecules as possible, while finding property-optimized molecules in
an enormous state space. Our earlier work focused on improving sample efficiency and proposed Saturn141. In our
follow-up works around synthesizability49,125 (including this work), we show that a sample-efficient model can directly
tackle synthesizability out-of-the-box, without any explicit inductive biases in the generation process. However, there
are important challenges that we want to acknowledge:
(1) Reaction Feasibility. All synthesis routes proposed by the retrosynthesis model are subject to limitations in the
training data. Presently, these models sometimes output synthesis routes with selectivity issues and hallucinated
reactions due to the lack of consideration of incompatibilities210. Moreover, reaction conditions have not been provided
in any synthesis routes in this work. We have since integrated automatic annotation of predicted conditions using
Reacon which uses templates and clustering211. In a future version of this work, we will discuss and show explicit
examples of this functionality in prioritizing generated molecules.
(2) Reward Formulation. We use a binary reward to learn various reaction constraints but this can be a problem in
more complex reward landscapes where the inefficiency of initial exploration can be computational prohibitive. We
discussed the use of reaction-based enumeration to seed the initial learning (see Appendix H). While we only observed
benefits in some settings, we envision it will be strictly beneficial when the reward function imposes many troughs.
Specifically, if favourable chemical spaces are highly discontinuous, it would be challenging to rely on free exploration
to solve the optimization problem. In this scenario, a potential solution could be leveraging diversity-maximizing
reaction-based enumeration to "map out" potential chemical spaces of interest.
(3) Optimization. Real-world drug discovery necessitates multi-parameter objective functions that impose a much
harsher and challenging optimization problem. In these settings, it can be disadvantageous, given the current opti-
mization algorithm, to include a retrosynthesis model in the optimization loop. If the model struggles to navigate the
multi-parameter objective function, then generated molecules could possess sub-optimal property profiles. In this case,
additionally adding a retrosynthesis solvability objective could make the reward landscape prohibitively challenging.
One existing method that may help such settings is curriculum learning212,213 which decomposes a complex objective
function into sequential, simpler ones. However, it is not always obvious how a curriculum should be defined.
Overall, we have demonstrated a framework for steerable and granular synthesizability control in small molecule
generation. We envision that Saturn with these new capabilities will lower the barrier for experimental validation.
44
arXiv Template
A PREPRINT
Data Availability
For experiments using open-source data, all relevant files are deposited here: https://doi.org/10.6084/m9.
figshare.29040977.v1. For the Generative Virtual Screening section, we were provided access to Chemspace’s
Freedom space 4.0 building blocks and synthons. This information can be requested from cs_sales@chem-space.com.
The synthon-based search script to search for exact match in Freedom 4.0 is based on Cosgrove 189.
Code Availability
The code is available at: https://github.com/schwallergroup/saturn. There are provided files to reproduce
the experiments with an associated README with installation details.
Author Contributions
JG and VSG proposed the idea to impose reaction constraints. JG conceptualized the generative virtual screening
capability. JG developed the generative model code. VSG developed the reaction-based enumeration code. JG
developed the analysis code with feedback from VSG. JG performed the development and benchmarking experiments.
VSG performed the waste valorization experiment with docking validation. VSG and JG performed the generative
virtual screening experiment. ZJ and VSG oversaw the chemical plausibility of generated molecules and synthesis
routes. VSG and PS designed the figures with feedback from all authors. PS and JSL supervised the project. All authors
contributed to writing the manuscript.
Acknowledgements
We thank Anna Kapeliukha for discussions and assistance around searching Freedom Space 4.0. JG acknowledges
funding from NSERC. JG, VSG, JSL and PS acknowledge support from the NCCR Catalysis (grant number 225147), a
National Centre of Competence in Research funded by the Swiss National Science Foundation. VSG acknowledges
support from the European Union’s Horizon 2020 research and innovation program under the Marie Skłodowska-Curie
grant agreement N° 945363. ZJ acknowledges funding by the Swiss National Science Foundation (SNSF) [214915].
45
arXiv Template
A PREPRINT
Appendix
The Appendix contains additional details and discussion on:
• Saturn (Appendix A)
• PubChem pre-training details (Appendix B)
• Rxn-INSIGHT templates (Appendix C)
• Rxn-INSIGHT vs. NameRxn (Appendix D)
• Data pre-processing for the benchmarking experiments (Appendix E)
• Docking validation for the waste valorization case study (Appendix F)
• Additional example routes of generated molecules (Appendix G)
• Reaction-based Enumeration in Saturn (Appendix H)
• Further scaling the building block set (Appendix I)
A
Saturn: Architecture and Reinforcement Learning Algorithm
In this section, we add high-level information about Saturn and how the reinforcement learning (RL) algorithm guides
the model to generated property-optimized molecules. For more details about Saturn, we refer to our original work141.
Saturn. Saturn is a molecular generative model that can use various language-based backbones. The specific backbone
we use is Mamba143. In our problem setting, molecules are represented as SMILES145 and the task is to generate new
SMILES in an autoregressive manner. We define a SMILES sequence by x and adopt the notation from the original
Mamba143 and a technical blog214 to describe the key operations:
ht = ¯Aht−1 + ¯B(xt)xt
yt = ¯C(xt)ht + ¯Dxt
Mamba features four learnable matrices (A, B, C, D) and processes sequence information in an input-dependent
manner. This is important as it enables a selective mechanism to control how information is propagated, similar to the
self-attention mechanism in transformers215. In the equations above, h is the state and y is the output. As with any
language-modeling task, the output from the backbone (Mamba in this case) is subject to a linear projection to obtain a
probability distribution over SMILES tokens.
Reinforcement Learning. The general framework of Saturn is to take a pre-trained model on a corpus of molecules
(PubChem144) in this case and apply RL fine-tuning. For pre-training details, see Appendix B. The RL algorithm is
based on REINVENT40,147,148 with modifications (see next section). The pre-trained model is defined as the Prior which
has frozen weights. Every SMILES sequence, when passed through the Prior, returns a log-likelihood. Next, the Agent
is also initialized as the pre-trained model but in contrast to the Prior, its weights are updated during RL. Following
REINVENT, the Augmented Likelihood (augmented log-likelihood but we denote this as Augmented Likelihood to
match the original REINVENT work) is defined as follows:
log πAugmented(x) = log πPrior(x) + σR(x)
(1)
where R is an arbitrary reward function that takes as input a SMILES, x, and returns a scalar reward ∈[0, 1]. σ is a
scalar factor that can up-weight the contribution of the reward signal. Taken together, the Augmented Likelihood is
a linear combination of the log-likelihood of the SMILES under the Prior modulated by its reward. RL proceeds by
defining the following loss function:
L(θ) = (log πAugmented −log πθAgent)2
(2)
where the squared distance between the Augmented and Agent log-likelihoods is minimized. Since the Augmented
log-likelihood is a linear combination of the Prior which is frozen and the reward function, the objective is to maximize
the reward while regularizing the Agent to not deviate too far from the pre-trained distribution. θ denotes that the Agent
is parameterized by the Mamba network.
46
arXiv Template
A PREPRINT
Augmented Memory. The specific RL algorithm is Augmented Memory146 which we previously proposed and is a
modified version of REINVENT’s algorithm. During RL, a replay buffer stores the top-100 highest reward SMILES
generated so far. At each epoch, the Agent is updated not only based on the newly generated batch of SMILES but also
every SMILES in the replay buffer. This is done N times and is denoted an Augmentation Round. Specifically, every
SMILES in the replay buffer is augmented (randomized216) which generates an alternative sequence form of the same
molecule. Consequently, the Agent is updated with different sequence (SMILES) representations of the same molecules
and is a mechanism that enhances sample efficiency. Finally, following REINVENT, a Diversity Filter (DF)217 stores
the Bemis-Murcko165 scaffolds of all generated molecules. If a particular scaffold has been generated above a threshold
number of times (10 in this work), its reward is truncated to 0.0. This mechanism enables improved exploration by the
Agent.
B
Saturn PubChem Pre-training
All experiments in this work used the same pre-trained model from our previous TANGO work on constrained
synthesizability125. This section contains a copy of the information from our TANGO work for completeness.
The full data pre-processing and pre-training pipeline started from the raw PubChem which was downloaded from
https://ftp.ncbi.nlm.nih.gov/pubchem/Compound/Extras/. The exact file is "CID-SMILES.gz". Note that
there is now a new version of PubChem. We previously downloaded the version close to Aug. 7, 2024.
The exact pre-processing steps along with the SMILES remaining after each step are:
1. Raw PubChem - 118,563,810
2. De-duplication - 118,469,904
3. Standardization
(charge
and
isotope
handling)
based
on
https://github.com/MolecularAI/
ReinventCommunity/blob/master/notebooks/Data_Preparation.ipynb. All SMILES that could
not be parsed by RDKit were removed - 109,128,315
4. Tokenize all SMILES based on REINVENT’s tokenizer:
https://github.com/MolecularAI/
reinvent-models/blob/main/reinvent_models/reinvent_core/models/vocabulary.py
5. Keep SMILES ≤80 tokens, 150 ≤molecular weight ≤650, number of heavy atoms ≤40, number of rings ≤
8, Size of largest ring ≤8, longest aliphatic carbon chain ≤4 - 97,667,549
6. Removed SMILES containing the following tokens (due to undesired chemistry, low token frequency, and
redundancy): [Br+2], [Br+3], [Br+], [C+], [C-], [CH+], [CH-], [CH2+], [CH2-], [CH2], [CH], [C], [Cl+2],
[Cl+3], [Cl+], [ClH+2], [ClH2+2], [ClH3+3], [N-], [N@+], [N@@+], [NH+], [NH-], [NH2+], [NH3+], [NH],
[N], [O+], [OH+], [OH2+], [O], [S+], [S-], [S@+], [S@@+], [S@@], [S@], [SH+], [SH-], [SH2], [SH4],
[SH], [S], [c+], [c-], [cH+], [cH-], [c], [n+], [n-], [nH+], [nH], [o+], [s+], [sH+], [sH-], [sH2], [sH4], [sH], [s] -
88,618,780
The final vocabulary contained 35 tokens (2 extra tokens were added, indicating <START> and <END>) and carbon
stereochemistry tokens were kept. Saturn141 uses the Mamba143 architecture and we used the default hyperparameters
in the code-base. With the vocabulary size of 35, the model has 5,265,408 parameters. Saturn was pre-trained for 5
steps, with each step consisting of a full pass through the dataset. The model was pre-trained on a workstation with an
NVIDIA RTX 3090 GPU and AMD Ryzen 9 5900X 12-Core CPU. The pre-training parameters were:
1. Training steps = 5
2. Seed = 0
3. Batch size = 512
4. Learning rate = 0.0001
5. Randomize216 every batch of SMILES
Relevant metrics of the pre-trained model (final model checkpoint) are:
1. Average negative log-likelihood (NLL) = 30.914
2. Validity (10k) = 98.74%
3. Uniqueness (10k) = 98.73%
4. Wall time = 106 hours (takes a relatively long time, but pre-training only needs to be done once)
47
arXiv Template
A PREPRINT
C
Rxn-INSIGHT: Reaction Name Definitions
The reaction names that the synthesizability oracle considers depend on the reaction classification software in the
framework (in this case, Rxn-INSIGHT152). Here, specific SMIRKS are used to name different reactions, and this affects
the oracle output when the labelled reactions are evaluated in the synthesis routes. From a user perspective, one would
select a list of reaction name keywords that wants to enforce or avoid, and the oracle will consider them as matched if
the labelled reactions in the synthesis routes contain these keywords. This can lead to differences between the desired
transformation and the matched reaction if the keywords are not properly defined or the SMIRKS used for classification
are not named properly. For example, we show one of the matched templates for the experiments enforcing the presence
of a Wittig reaction (Figure C9). In this case, the matched template is technically a Horner-Wadsworth-Emmons (HWE)
reaction, which is a modification of the Wittig reaction where an alkene is formed from a phosphonate and a carbonyl
group218. This transformation can be considered a variant of the Wittig reaction, although it has a different mechanism.
The specific template name for this example in Rxn-INSIGHT is "Wittig with Phosphonium", and therefore when
enforcing the presence of a Wittig reaction in the experiments (enforced using the "Wittig" keyword), any HWE reaction
in the synthesis route matching this template will be considered as a Wittig reaction according to the selected keyword.
However, this may not be an issue from the synthesis point of view, as both transformations yield the same product (an
alkene from a carbonyl).
Figure C9: Horner-Wadsworth-Emmons (HWE) SMIRKS visualization. The template corresponds to a HWE reaction,
although it is labeled as "Wittig with Phosphonium" in Rxn-INSIGHT. The SMIRKS pattern is visualized using
SMARTSplus219
Another example that has been commented in the main text is the stereospecificity in the Mitsunobu transformation.
The associated template in Rxn-INSIGHT ("Mitsunobu aryl ether") does not consider the inversion of the stereocentre,
and therefore any reaction matching this non-chiral template would be considered as a Mitsunobu reaction. We note
that this problem can be solved by having a more granular naming of the reaction templates used for reaction name
labelling, or by expanding the collection of templates to cover more transformations.
D
Rxn-INSIGHT vs. NameRxn
In this section, we discuss nuance details about Rxn-INSIGHT152 compared to NameRxn157 and their implications
on the wall time of our framework. In this work, every generated molecule is passed to Syntheseus142 to generate
an explicit predicted synthesis route. Each reaction SMILES from Syntheseus is then labeled with both the reaction
48
arXiv Template
A PREPRINT
class and name. In Rxn-INSIGHT, obtaining the reaction class requires atom mapping of the reaction SMILES using
RXNMapper155. The mapped reaction SMILES is then subject to comparisons of bond-electron matrices to output
a 10-class classification. Obtaining the reaction name only requires comparing the reaction SMILES to a set of 527
SMIRKS. Therefore, most of the computational burden of Rxn-INSIGHT is from atom mapping. In this work, all
experiments we ran generally only enforced reaction names. As such, we did not necessarily need to perform atom
mapping using Rxn-INSIGHT to obtain the class but we do it anyways and use Rxn-INSIGHT out-of-the-box in
case the class, e.g., "Aromatic heterocycle formation", is of interest. By contrast, NameRxn does not require running
RXNMapper and thus, labeling the reaction class requires a negligible amount of time. The implications of this in
our framework is that all experiments using Rxn-INSIGHT require a notably longer wall time than NameRxn. To be
precise, we could have avoided the computational burden of reaction mapping since we generally only enforced named
reactions in this work. In the future, we will de-couple the class and name labeling in case one only cares about specific
reactions. Lastly, we highlight that reaction name labeling by SMIRKS matching like in the case of Rxn-INSIGHT
requires that there is a match at all to the SMIRKS set. In the event that there are no matches, the bond matrix workflow
with atom mapping could provide useful reaction class information, where the alternative is no label at all.
We next provide additional details on our choice of using MEGAN97 as the retrosynthesis model which is not template-
based. Since MEGAN is not template-based, the reaction name needs to be labeled. If a template-based retrosynthesis
model were used, the matched template could directly return the reaction name, avoiding any external calls to tools
like Rxn-INSIGHT or NameRxn. However, labeling the class, if wanting to leverage Rxn-INSIGHT’s bond-electron
matrix workflow, would still require atom mapping. As stated in the main text, we opted to use this approach of external
tool calling to make our framework compatible with any retrosynthesis model. In the future, we will streamline all
workflows and provide control over the need to label reaction classes and/or names.
Finally, see Table 14 for a side-by-side comparison of wall times using Rxn-INSIGHT and NameRxn.
E
Benchmarking Experiments Additional Details
In this section, we provide additional details related to our efforts in running RGFN71, SFN72, RxnFlow75, and
SynFormer69. Most details will be related to preparing the building block stocks according to each paper’s procedure.
Since we do not, in general, have access to the original building block stocks used in the respective papers, we download
the latest versions and follow the pre-processing pipeline described in each model’s GitHub. We do this so that our
framework can use the exact same building block stock. We first recap the GitHub versions we used:
• RGFN71: e21b5cb
• SynFlowNet72: 574f1e1
• RxnFlow75: 23017e3
• SynFormer69: bef02bc
RGFN. For RGFN71, we used the default 350 curated building blocks provided in the GitHub: https://github.com/
koziarskilab/RGFN/blob/main/data/chemistry.xlsx. In the paper, the authors scaled up to 64,000 building
blocks but this was not provided. Therefore, we downloaded Enamine Global (Feb. 2025) and randomly sampled
blocks to add to the default 350 to get 64,000 blocks. We note that in Appendix E of the RGFN work, the authors
describe their specific building block selection procedure which we did not follow in this work. With 64,000 blocks, we
experienced GPU out-of-memory on an NVIDIA H100 with 94 GB GPU. Therefore, we truncated the 64,000 blocks to
50,000 (arbitrarily removing the last 14,000). We used this block set as is in the main text experiments.
SFN. For SFN72, we downloaded the Enamine Global (Feb. 2025) stock and pre-processed it by removing invalid
molecules and SMILES with ".", leading to 240,254 blocks from 303,018. Next, we followed the instructions provided
in the GitHub README: https://github.com/mirunacrt/synflownet/tree/main/src/synflownet/data/
building_blocks to create the "10,000" blocks stock. Following all the processing steps as described in the README,
the final stocks used were:
• "10,000" stock: After processing, this had 9,984 blocks left
• The entire Enamine Global: After processing, this had 208,129 blocks left
We lastly note that SFN only keeps building blocks with less than total 20 atoms.
RxnFlow. For RxnFlow75, we downloaded Enamine Comprehensive Catalog (Feb. 2025) and pre-processed it by
removing invalid molecules and SMILES with ".". Additionally, following the RxnFlow paper, we only kept blocks
49
arXiv Template
A PREPRINT
Table 14: Wall times of main text experiments. The mean and standard deviation are reported across 5 seeds (0–4
inclusive). For all Rxn-INSIGHT experiments, eMolecules stock was used. For NameRxn experiments, we scaled up to
40 million building blocks. See Appendix I for more details.
Experiment
Wall Time
Rxn-INSIGHT - eMolecules Stock (23,077,162 Building Blocks)
Enforce Reaction Presence
Amide
46h 40m ± 3h 2m
Amide Blocks
49h 56m ± 2h 6m
Suzuki
59h 19m ± 2h 49m
Suzuki-Block
54h 17m ± 2h 1m
Mitsunobu
58h 14m ± 3h 29m
Mitsunobu-Blocks
58h 36m ± 5h 22m
Heck
59h 34m ± 4h 22m
Heck-Blocks
52h 28m ± 6h 15m
Wittig
60h 3m ± 4h 22m
Wittig-Blocks
62h 10m ± 1h 46m
Enforce Only Specific Reactions
Amide
36h 7m ± 1h 25m
Amide-Blocks
41h45m ± 3h11m
Amide-Suzuki
38h 5m ± 2h 41m
Amide-Suzuki-Blocks
43h 18m ± 1h 46m
NameRxn - "Aggregated Stock" (40,429,262 Building Blocks)
Enforce Only Specific Reactions
Amide
23h 28m ± 1h 36m
Amide-Blocks
26h 57m ± 2h 18m
with the following atom types: B, C, N, O, F, P, S, Cl, Br, I. There were 1,306,561 molecules remaining from 1,404,227
after this. Next, RxnFlow constructs the ‘Molecule Environment‘ before running the model and we do this following
the instructions in the GitHub: https://github.com/SeonghwanSeo/RxnFlow/blob/master/data/README.md.
After running the scripts following the instructions, 1,273,536 blocks remained.
SynFormer. SynFormer69 was pre-trained using enumerated synthesis routes from the authors’ previous ChemProjector
work196. The building block stock used was Enamine US (Oct. 2023). We obtain this previous stock version from
Enamine directly. In Oct. 2023, there were 5 versions of Enamine US and we take the earliest one which is the smallest
in size from Oct. 2, 2023. We remove any duplicates resulting in 225,824 molecules from 225,970. The pre-trained
SynFormer model was downloaded from: https://huggingface.co/whgao/synformer/tree/main. This is the
link provided in the authors’ code repository.
F
Waste Valorization Additional Details
In this section, we provide additional details related to the waste valorization experiments.
Waste Building Blocks. Waste building blocks and their geographical location were extracted from the Supplementary
Information S1 of Wołos et al. 177. In this Supplementary Information, lists of industrial waste molecules are classified
by the continent in which they are produced. Some molecules are produced in both continents. We extracted these waste
building blocks by geographical location. NCC(=O)O was removed from the US waste list and O=CO, Nc1ccccc1 and
50
arXiv Template
A PREPRINT
O=C(O)CCC(=O)O were removed from the EU list after preliminary runs to promote higher diversity on the enforced
waste blocks routes. The SMILES of the final waste blocks are provided below:
• US waste:
O=C1CCCCC1, CC(C)=O, O=C(O)Cc1ccc(O)cc1, OCC(O)CO, CC#N, CC(O)C(=O)O,
CCO, CO, C=O, O=C(O)CCC(=O)O, CCCCC(=O)O, CCCCCC(=O)O, CCCO, CCCCO, CC(=O)O,
O=C(O)/C=C/C=C/C(=O)O, C=Cc1ccccc1, O=C=O, O=C(O)CCCC(=O)O, Oc1ccccc1, CCCC(O)CO,
CC(C)O, C=CC(=O)O, O=C
• EU waste:
CC(C)=O, OCC(O)c1ccc(O)c(O)c1, OCC(O)CO, CC=O, CC#N, CC(O)C(=O)O, CCO,
CC(C)(C)C(=O)O, NCC(=O)O, C=O, Nc1ccccc1C(=O)O, Oc1cccc(O)c1, C=C, CCCCO, CC(=O)O,
O=C(O)/C=C/C=C/C(=O)O, O=C=O, Oc1ccccc1, CC(C)O, O=C(O)c1ccc(C(=O)O)cc1, CO
Docking Validation. Docking scores commonly do not correlate with actual binding affinity172. For the waste
valorization experiments, we make an effort to validate the docking protocol to mimic a real-world use case. Docking
was performed using Gnina179 against COX2 (PDB ID: 1CX2 target178), implicated in inflammation. Validation was
done in two steps:
• Ligand Re-docking: The 1CX2 protein structure was prepared for docking following the Dockstream172
standard pipeline which uses PDBFixer220. The co-crystallized ligand was re-docked using Gnina with
standard parameters (exhaustiveness=8, flexdist=0, random seed=0) to reproduce the original pose. The docked
pose possessed < 0.75 Å RMSD and the geometry can conceivably recover the co-crystallized ligand’s pocket
interactions (Figure F10).
• Decoys Set Binding: A set of decoys and active molecules for 1CX2 was extracted from DEKOIS 2.0180.
These molecules represent a challenging set with similar physico-chemical properties to assess the scoring
power of Gnina: how well does the docking score distinguish between active and decoys? We docked all
active and inactive molecules with the same parameters that were used to reproduce the binding pose. The
enrichment factor of the top 1% docked molecules was 28.4, showing that Gnina was able to separate active
molecules from decoys with some resolution. After inspecting the docking scores distribution of actives and
decoys (despite a large number of actives also possessing > 0 docking score), we use Gnina docking in Saturn
with a reverse sigmoid reward shaping function with min=-20, max=0 (see Figure F11).
These results verified that the Gnina could be used in a meaningful way to design potential inhibitors to COX2.
G
Additional Example Synthesis Routes
In this section, we show more example routes with property profiles annotated across the Development experiments
(Figure G12 and G13).
H
Reaction-based Enumeration to Seed Generative Experiments
In this section we report the results for the Development experiments where the initial Replay buffer is seeded with
reaction-based enumerated molecules. These enumerated molecules satisfy the imposed reaction constraints. The
hypothesis is that this may guide initial learning and mitigate early non-productivity of RL. In general, we did not
observe an improvement with respect to the baselines. However, it may be possible that for very constrained or
challenging optimization scenarios, an initial seeding maximizing the diversity of the enumerated molecules may be
beneficial for learning. We will investigate this in future work. The quantitative results for the reaction constraints
without and with also enforcing block constraints are shown in Tables 15 and 16, respectively.
I
Experiments with 40M Building Blocks
In this section, we move beyond eMolecules stock (23,077,162 Building Blocks) and aggregate it with Enamine
Comprehensive and ZINC Frag-Reac Subsets stock (about 17.7 million molecules) which we used in our previous
work49 and is used in the AiZynthFinder retrosynthesis model99,100. After de-duplication this "Aggregated stock"
contains 40,429,262 building blocks.
Using the Aggregated stock, we run the following experiments with arbitrarily chosen reaction constraints: all enforcing
only amide reactions:
1. Enforce only amide reactions
51
arXiv Template
A PREPRINT
Figure F10: Re-docked co-crystallized ligand (PDB ID: 1CX2) using Gnina (RMSD: 0.72 Å).
Figure F11: Gnina docking score distribution for the actives and decoys from the DEKOIS 2.0 1CX2 set. Gnina
provides some resolution to distinguish between actives and decoys based on the docking scores.
2. Enforce only amide reactions and blocks
The results are shown in Table 17. Overall, these experiments show that it is straightforward to use even larger building
block stocks, if desired.
J
Development Enforce Block Experiments
The Development experiments enforcing blocks were run with an earlier version of the code. We found a bug where
if the generated molecule is exactly one of the enforced blocks, the reward of the batch is set to 0 (due to a try and
52
arXiv Template
A PREPRINT
Figure G12: Additional synthetic routes to optimized molecules enforcing the presence of a given chemical reaction.
except code block). This happens a handful of times in the enforce block runs and therefore, does not affect the results
significantly. we highlight this for transparency and note that this has since been fixed.
53
arXiv Template
A PREPRINT
Figure G13: Additional synthetic routes to optimized molecules enforcing the presence of a given chemical reaction
and enforcing the presence of a building block from a set.
54
arXiv Template
A PREPRINT
Table 15: Enumeration experiments. The enforced reaction is present in ≥1 step(s) of the predicted route. The mean
and standard deviation across 5 seeds are reported. The total number of molecules in each docking score interval pooled
across all 5 seeds is denoted by M. Within each of these docking score intervals, the QED and number of hydrogen-bond
donors (HBD) are annotated, ligand efficiency (LE), number of Bemis-Murcko scaffolds (BMS), internal diversity
(IntDiv1), and number of circles (#Circles (0.75)) are annotated. The oracle budget was fixed at 15,000.
Enforced
Synthesizability
Rxn Steps
Docking Score Intervals
Non-synth
Synth
Synth (constraints)
DS < -10
-10 < DS < -9
-9 < DS < -8
-10.55 ± 0.42 (M=7428)
-9.52 ± 0.28 (M=16824)
-8.58 ± 0.29 (M=16187)
0.87 ± 0.07 (QED)
0.89 ± 0.07
0.88 ± 0.09
1.06 ± 0.24 (HBD)
1.07 ± 0.27
1.14 ± 0.38
Amide
2427 ± 382
12576 ± 383
10640 ± 534
2.19 ± 1.40
0.39 ± 0.03 (LE)
0.37 ± 0.03
0.35 ± 0.04
(N=5)
6319 (BMS)
12423
12815
0.737 (IntDiv1)
0.758
0.781
22 (#Circles)
38
78
-10.51 ± 0.38 (M=10858)
-9.55 ± 0.28 (M=17950)
-8.60 ± 0.28 (M=13212)
0.88 ± 0.06
0.90 ± 0.06
0.88 ± 0.07
1.04 ± 0.19
1.06 ± 0.24
1.15 ± 0.39
Amide-Enumerate
2163 ± 314
12852 ± 314
10855 ± 403
2.1 ± 1.21
0.39 ± 0.02
0.38 ± 0.03
0.36 ± 0.04
(N=5)
5907
10941
9484
0.710
0.746
0.787
9
31
89
-10.49 ± 0.36 (M=7788)
-9.52 ± 0.28 (M=18568)
-8.61 ± 0.28 (M=15037)
0.86 ± 0.08
0.87 ± 0.08
0.85 ± 0.11
1.00 ± 0.36
1.00 ± 0.43
0.94 ± 0.56
Suzuki
3369 ± 436
11637 ± 438
10078 ± 401
3.00 ± 1.32
0.40 ± 0.03
0.37 ± 0.03
0.35 ± 0.04
(N=5)
7258
17053
12389
0.758
0.766
0.788
17
52
105
-10.51 ± 0.38 (M=6825)
-9.52 ± 0.28 (M=16462)
-8.60 ± 0.28 (M=14022)
0.87 ± 0.07
0.88 ± 0.07
0.87 ± 0.09
0.95 ± 0.38
0.99 ± 0.45
0.99 ± 0.56
Suzuki-Enumerate
3971 ± 296
11035 ± 294
9931 ± 330
3.14 ± 1.28
0.40 ± 0.02
0.37 ± 0.03
0.35 ± 0.04
(N=5)
6512
15053
11585
0.712
0.750
0.787
17
44
106
-10.32 ± 0.24 (M=1516)
-9.41 ± 0.27 (M=3076)
-8.48 ± 0.27 (M=5882)
-10.38 ± 0.29 (M=2659)
-9.48 ± 0.27 (M=13152)
-8.57 ± 0.28 (M=16435)
0.84 ± 0.09
0.85 ± 0.11
0.82 ± 0.15
0.89 ± 0.42
0.88 ± 0.45
0.86 ± 0.51
Mitsunobu
3860 ± 1353
11148 ± 1352
8861 ± 1321
3.17 ± 1.48
0.38 ± 0.02
0.36 ± 0.03
0.33 ± 0.04
(N=5)
2486
10913
13332
0.720
0.742
0.771
11
28
49
-10.38 ± 0.30 (M=1027)
-9.42 ± 0.26 (M=7760)
-8.54 ± 0.28 (M=17501)
0.83 ± 0.08
0.85 ± 0.08
0.86 ± 0.09
0.85 ± 0.50
0.97 ± 0.44
0.98 ± 0.46
Mitsunobu-Enumerate
3397 ± 359
11613 ± 358
8566 ± 505
3.04 ± 1.27
0.36 ± 0.02
0.35 ± 0.03
0.34 ± 0.04
(N=5)
971
6152
12579
0.670
0.748
0.773
9
24
76
-10.47 ± 0.35 (M=5372)
-9.52 ± 0.28 (M=13284)
-8.57 ± 0.28 (M=13774)
0.86 ± 0.08
0.86 ± 0.08
0.85 ± 0.09
0.97 ± 0.48
1.04 ± 0.45
1.06 ± 0.53
Heck
3993 ± 675
11014 ± 674
8691 ± 970
3.29 ± 1.38
0.40 ± 0.03
0.37 ± 0.03
0.34 ± 0.04
(N=5)
5218
11833
11930
0.755
0.777
0.787
11
19
35
-10.33 ± 0.24 (M=1910)
-9.47 ± 0.27 (M=12409)
-8.57 ± 0.28 (M=16195)
0.88 ± 0.07
0.89 ± 0.07
0.89 ± 0.08
0.97 ± 0.34
0.99 ± 0.36
0.99 ± 0.45
Heck-Enumerate
3682 ± 619
11322 ± 618
9379 ± 491
3.09 ± 1.30
0.42 ± 0.02
0.39 ± 0.03
0.36 ± 0.04
(N=5)
1784
10152
12325
0.738
0.770
0.781
12
29
55
1.02 ± 0.25
1.04 ± 0.27
1.10 ± 0.29
Wittig
4478 ± 929
10528 ± 931
8491 ± 664
3.64 ± 1.46
0.40 ± 0.03
0.37 ± 0.03
0.34 ± 0.04
(N=5)
7303
17169
12478
0.757
0.764
0.786
12
31
59
-10.58 ± 0.42 (M=4554)
-9.50 ± 0.28 (M=10078)
-8.55 ± 0.29 (M=12702)
0.78 ± 0.08
0.82 ± 0.09
0.83 ± 0.10
0.84 ± 0.46
0.95 ± 0.40
0.94 ± 0.40
Wittig-Enumerate
4478 ± 929
10528 ± 931
8491 ± 664
3.64 ± 1.46
0.37 ± 0.02
0.36 ± 0.03
0.34 ± 0.04
(N=5)
3181
8339
10310
0.680
0.780
0.807
12
31
47
55
arXiv Template
A PREPRINT
Table 16: Enumeration experiments also enforcing blocks. The enforced reaction is present in ≥1 step(s) of the
predicted route. The mean and standard deviation across 5 seeds are reported. The total number of molecules in each
docking score interval pooled across all 5 seeds is denoted by M. Within each of these docking score intervals, the
QED and number of hydrogen-bond donors (HBD) are annotated, ligand efficiency (LE), number of Bemis-Murcko
scaffolds (BMS), internal diversity (IntDiv1), and number of circles (#Circles (0.75)) are annotated. The oracle budget
was fixed at 15,000.
Reaction
Synthesizability
Rxn Steps
Docking Score Intervals
Enforced Blocks
Non-synth
Synth
Synth (constraints)
DS < -10
-10 < DS < -9
-9 < DS < -8
in Top 5% Molecules
-10.47 ± 0.35 (M=828)
-9.44 ± 0.27 (M=3301)
-8.49 ± 0.28 (M=9698)
0.82 ± 0.07 (QED)
0.84 ± 0.07
0.85 ± 0.07
1.10 ± 0.30 (HBD)
1.12 ± 0.33
1.13 ± 0.35
Amide
3036 ± 171
11969 ± 173
6041 ± 722
2.33 ± 1.28
0.40 ± 0.03 (LE)
0.37 ± 0.03
0.33 ± 0.03
5/100
(N=5)
762 (BMS)
2969
7634
0.630 (IntDiv1)
0.732
0.710
4 (Circles)
6
7
-10.28 ± 0.21 (M=219)
-9.39 ± 0.25 (M=3240)
-8.52 ± 0.28 (M=10264)
0.84 ± 0.08
0.86 ± 0.07
0.86 ± 0.07
1.13 ± 0.36
1.30 ± 0.51
1.35 ± 0.53
Amide-Enumerate
2534 ± 233
12473 ± 232
5589 ± 392
2.40 ± 1.25
0.38 ± 0.03
0.36 ± 0.02
0.33 ± 0.03
4/100
(N=5)
199
2403
6974
0.713
0.737
0.739
4
5
8
-10.33 ± 0.24 (M=1278)
-9.52 ± 0.28 (M=5485)
-8.60 ± 0.28 (M=4638)
0.71 ± 0.09
0.74 ± 0.09
0.78 ± 0.10
0.85 ± 0.48
0.91 ± 0.47
0.94 ± 0.44
Suzuki
3354 ± 532
11654 ± 533
2841 ± 1698
2.71 ± 1.26
0.37 ± 0.03
0.35 ± 0.03
0.32 ± 0.04
4/100
(N=4)
1199
4839
4044
0.679
0.714
0.750
2
7
5
-10.39 ± 0.29 (M=1002)
-9.51 ± 0.27 (M=4356)
-8.59 ± 0.29 (M=3896)
0.81 ± 0.08
0.82 ± 0.07
0.83 ± 0.08
1.34 ± 0.49
1.22 ± 0.45
1.05 ± 0.42
Suzuki-Enumerate
3138 ± 710
11869 ± 708
2375 ± 2298
2.88 ± 1.21
0.40 ± 0.04
0.36 ± 0.04
0.32 ± 0.04
3/100
(N=5)
942
3886
3061
0.670
0.713
0.740
4
5
7
-10.37 ± 0.30 (M=79)
-9.34 ± 0.24 (M=1644)
-8.46 ± 0.27 (M=11593)
0.75 ± 0.12
0.81 ± 0.10
0.84 ± 0.10
0.85 ± 0.48
0.85 ± 0.46
0.87 ± 0.44
Mitsunobu
4762 ± 1292
10245 ± 1288
5648 ± 1800
3.17 ± 1.51
0.35 ± 0.02
0.34 ± 0.02
0.33 ± 0.03
4/100
(N=5)
75
1490
9705
0.530
0.683
0.735
3
4
4
-10.29 ± 0.21 (M=98)
-9.37 ± 0.25 (M=1647)
-8.46 ± 0.27 (M=10108)
0.80 ± 0.07
0.83 ± 0.08
0.86 ± 0.08
1.09 ± 0.50
1.07 ± 0.51
0.95 ± 0.51
Mitsunobu-Enumerate
3519 ± 164
11485 ± 164
6279 ± 301
3.08 ± 1.35
0.37 ± 0.02
0.35 ± 0.02
0.33 ± 0.03
4/100
(N=5)
96
1375
6897
0.601
0.631
0.641
2
4
8
-10.27 ± 0.16 (M=27)
-9.36 ± 0.25 (M=411)
-8.47 ± 0.27 (M=2188)
0.84 ± 0.08
0.83 ± 0.08
0.80 ± 0.07
1.00 ± 0.00
1.07 ± 0.25
1.11 ± 0.32
Heck
3963 ± 649
11044 ± 642
1295 ± 1598
2.78 ± 1.27
0.43 ± 0.02
0.39 ± 0.04
0.34 ± 0.04
4/100
(N=5)
23
299
1852
0.571
0.645
0.717
2
5
6
-10.19 ± 0.09 (M=11)
-9.36 ± 0.24 (M=221)
-8.46 ± 0.27 (M=1128)
0.85 ± 0.10
0.87 ± 0.08
0.91 ± 0.05
1.00 ± 0.00
1.16 ± 0.37
1.06 ± 0.24
Heck-Enumerate
3155 ± 434
11853 ± 434
599 ± 1196
2.82 ± 1.18
0.38 ± 0.03
0.35 ± 0.03
0.33 ± 0.02
1/100
(N=5)
9
147
624
0.445
0.562
0.585
1
1
2
-10.40 ± 0.28 (M=400)
-9.43 ± 0.27 (M=2585)
-8.55 ± 0.28 (M=5380)
0.72 ± 0.08
0.74 ± 0.08
0.77 ± 0.09
0.82 ± 0.60
0.92 ± 0.73
1.09 ± 0.81
Wittig
4504 ± 454
10501 ± 450
2320 ± 1757
3.63 ± 1.62
0.34 ± 0.02
0.33 ± 0.03
0.33 ± 0.04
5/100
(N=5)
399
2307
4280
0.551
0.696
0.756
3
7
7
-10.40 ± 0.29 (M=157)
-9.39 ± 0.26 (M=1715)
-8.50 ± 0.28 (M=6323)
0.74 ± 0.10
0.78 ± 0.09
0.80 ± 0.08
0.97 ± 0.37
0.98 ± 0.40
0.95 ± 0.39
Wittig-Enumerate
3816 ± 353
11192 ± 356
3250 ± 1228
3.62 ± 1.48
0.36 ± 0.04
0.34 ± 0.04
0.32 ± 0.03
9/100
(N=5)
150
1411
5147
0.727
0.780
0.786
7
10
11
56
arXiv Template
A PREPRINT
Table 17: Aggregated stock experiments. Only amide reactions are permitted. The mean and standard deviation
across 5 seeds are reported. N denotes the number of replicates (out of 5) that have at least one generated molecule
satisfying all reaction constraints. The total number of molecules in each docking score interval pooled across all 5
seeds is denoted by M (only molecules satisfying all reaction constraints are considered). Within each of these docking
score intervals, the QED, number of hydrogen-bond donors (HBD), ligand efficiency (LE), number of Bemis-Murcko
scaffolds (BMS), internal diversity (IntDiv1), and number of circles (#Circles (0.75)) are annotated. The oracle budget
was fixed at 15,000.
Experiment
Synthesizability
Rxn Steps
Docking Score Intervals for Synth (constraints)
Non-synth
Synth
Synth (constraints)
DS < -10
-10 < DS < -9
-9 < DS < -8
-10.37 ± 0.29 (M=1176)
-9.43 ± 0.26 (M=9406)
-8.57 ± 0.28 (M=16979)
0.87 ± 0.07 (QED)
0.90 ± 0.06
0.90 ± 0.06
1.04 ± 0.24 (HBD)
1.04 ± 0.27
1.04 ± 0.33
No Blocks (N=5)
2911 ± 409
12097 ± 411
8130 ± 232
1.45 ± 1.06
0.40 ± 0.03 (LE)
0.38 ± 0.03
0.36 ± 0.04
1006 (BMS)
7159
13127
0.746 (IntDiv1)
0.760
0.780
16 (#Circles)
29
55
-10.17 ± 0.09 (M=3)
-9.28 ± 0.18 (M=182)
-8.42 ± 0.26 (M=2061)
0.78 ± 0.06
0.84 ± 0.06
0.86 ± 0.06
0.67 ± 0.47
1.12 ± 0.41
1.14 ± 0.48
Blocks (N=5)
4574 ± 466
10429 ± 464
2577 ± 1077
1.72 ± 1.25
0.38 ± 0.01
0.36 ± 0.03
0.35 ± 0.03
Enforced Blocks in
3
163
1555
Top 5% Molecules = 2
0.449
0.636
0.644
1
2
3
57
arXiv Template
A PREPRINT
References
[1] Luca Monari. Molecule icon generator!
[2] Bruce D Roth. 1 the discovery and development of atorvastatin, a potent novel hypolipidemic agent. Progress in
medicinal chemistry, 40:1–22, 2002.
[3] Wei Wang, Zhuyifan Ye, Hanlu Gao, and Defang Ouyang. Computational pharmaceutics-a new paradigm of
drug delivery. Journal of Controlled Release, 338:119–136, 2021.
[4] Lingle Wang, Jennifer Chambers, and Robert Abel. Protein–ligand binding free energy calculations with fep+.
Biomolecular simulations: methods and protocols, pages 201–232, 2019.
[5] Yuriy Khalak, Gary Tresadern, David F Hahn, Bert L de Groot, and Vytautas Gapsys. Chemical space exploration
with active learning and alchemical free energies. Journal of Chemical Theory and Computation, 18(10):6259–
6270, 2022.
[6] Filipp Gusev, Evgeny Gutkin, Maria G Kurnikova, and Olexandr Isayev. Active learning guided drug design lead
optimization based on relative binding free energy modeling. Journal of Chemical Information and Modeling,
63(2):583–594, 2023.
[7] David C Blakemore, Luis Castro, Ian Churcher, David C Rees, Andrew W Thomas, David M Wilson, and
Anthony Wood. Organic synthesis provides opportunities to transform drug discovery. Nature chemistry, 10(4):
383–394, 2018.
[8] Wendy Warr. Report on an nih workshop on ultralarge chemistry databases. ChemRxiv, 2021.
[9] Oleksandr O Grygorenko, Dmytro S Radchenko, Igor Dziuba, Alexander Chuprina, Kateryna E Gubina, and
Yurii S Moroz. Generating multibillion chemical space of readily accessible screening compounds. Iscience, 23
(11), 2020.
[10] Atanu Acharya, Rupesh Agarwal, Matthew B Baker, Jerome Baudry, Debsindhu Bhowmik, Swen Boehm,
Kendall G Byler, SY Chen, Leighton Coates, Connor J Cooper, et al. Supercomputer-based ensemble docking
drug discovery pipeline with application to covid-19. Journal of chemical information and modeling, 60(12):
5832–5852, 2020.
[11] Jiankun Lyu, Sheng Wang, Trent E Balius, Isha Singh, Anat Levit, Yurii S Moroz, Matthew J O’Meara, Tao Che,
Enkhjargal Algaa, Kateryna Tolmachova, et al. Ultra-large library docking for discovering new chemotypes.
Nature, 566(7743):224–229, 2019.
[12] Stefan Gahbauer, Chelsea DeLeon, Joao M Braz, Veronica Craik, Hye Jin Kang, Xiaobo Wan, Xi-Ping Huang,
Christian B Billesbølle, Yongfeng Liu, Tao Che, et al. Docking for ep4r antagonists active against inflammatory
pain. Nature communications, 14(1):8067, 2023.
[13] Fangyu Liu, Cheng-Guo Wu, Chia-Ling Tu, Isabella Glenn, Justin Meyerowitz, Anat Levit Kaplan, Jiankun Lyu,
Zhiqiang Cheng, Olga O Tarkhanova, Yurii S Moroz, et al. Large library docking identifies positive allosteric
modulators of the calcium-sensing receptor. Science, 385(6715):eado1868, 2024.
[14] Tia A Tummino, Christos Iliopoulos-Tsoutsouvas, Joao M Braz, Evan S O’Brien, Reed M Stein, Veronica Craik,
Ngan K Tran, Suthakar Ganapathy, Fangyu Liu, Yuki Shiimura, et al. Large library docking for cannabinoid-1
receptor agonists with reduced side effects. bioRxiv, pages 2023–02, 2024.
[15] Shannon T Smith, Jackson B Cassada, Lukas Von Bredow, Kevin Erreger, Emma M Webb, Trevor A Trombley,
Jacob J Kalbfleisch, Brian J Bender, Irene Zagol-Ikapitte, Valerie M Kramlinger, et al. Discovery of protease-
activated receptor 4 (par4)-tethered ligand antagonists using ultralarge virtual screening. ACS Pharmacology &
Translational Science, 7(4):1086–1100, 2024.
[16] Jiankun Lyu, Nicholas Kapolka, Ryan Gumpper, Assaf Alon, Liang Wang, Manish K Jain, Ximena Barros-
Álvarez, Kensuke Sakamoto, Yoojoong Kim, Jeffrey DiBerto, et al. Alphafold2 structures guide prospective
ligand discovery. Science, page eadn6354, 2024.
[17] Fangyu Liu, Cheng-Guo Wu, Chia-Ling Tu, Isabella Glenn, Justin Meyerowitz, Anat Levit Kaplan, Jiankun Lyu,
Zhiqiang Cheng, Olga O Tarkhanova, Yurii S Moroz, et al. Large library docking identifies positive allosteric
modulators of the calcium-sensing receptor. Science, 385(6715):eado1868, 2024.
[18] Bryan Fraser, Nicholas Young, Brian Bender, Stefan Gahbauer, Olzhas Ilyassov, Ryan Wilson, Yanjun Li,
Almagul Seitova, André Luiz Lourenço, Dong-Hee Chung, et al. Large library docking and biophysical analysis
of small molecule tmprss2 inhibitors. ChemRxiv, 2024.
[19] Christoph Gorgulla, Andras Boeszoermenyi, Zi-Fu Wang, Patrick D Fischer, Paul W Coote, Krishna M Padman-
abha Das, Yehor S Malets, Dmytro S Radchenko, Yurii S Moroz, David A Scott, et al. An open-source drug
discovery platform enables ultra-large virtual screens. Nature, 580(7805):663–668, 2020.
58
arXiv Template
A PREPRINT
[20] Christoph Gorgulla, AkshatKumar Nigam, Matt Koop, Suleyman S Cinaroglu, Christopher Secker, Mohammad
Haddadnia, Abhishek Kumar, Yehor Malets, Alexander Hasson, Roni Levin-Konigsberg, et al. Virtualflow
2.0-the next generation drug discovery platform enabling adaptive screens of 69 billion molecules, 2023. Preprint
at https://doi.org/10.1101/2023.04.25.537981.
[21] Arman A Sadybekov, Anastasiia V Sadybekov, Yongfeng Liu, Christos Iliopoulos-Tsoutsouvas, Xi-Ping Huang,
Julie Pickett, Blake Houser, Nilkanth Patel, Ngan K Tran, Fei Tong, et al. Synthon-based ligand discovery in
virtual libraries of over 11 billion compounds. Nature, 601(7893):452–459, 2022.
[22] Fangyu Liu, Olivier Mailhot, Isabella S Glenn, Seth F Vigneron, Violla Bassim, Xinyu Xu, Karla Fonseca-
Valencia, Matthew S Smith, Dmytro S Radchenko, James S Fraser, et al. The impact of library size and scale of
testing on virtual screening. bioRxiv, pages 2024–07, 2024.
[23] François Sindt, Anthony Seyller, Merveille Eguida, and Didier Rognan.
Protein structure-based organic
chemistry-driven ligand design from ultralarge chemical spaces. ACS Central Science, 10(3):615–627, 2024.
[24] Álvaro Serrano-Morrás, Andrea Bertran-Mostazo, Marina Miñarro-Lleonar, Arnau Comajuncosa-Creus, Adrià
Cabello, Carme Labranya, Carmen Escudero, Tian Tian, Inna Khutorianska, Dmytro S Radchenko, et al. A novel
bottom-up approach to find lead-compounds in billion-sized libraries. ChemRxiv, 2025.
[25] Andreas Luttens, Israel Cabeza de Vaca, Leonard Sparring, José Brea, Antón Leandro Martínez, Nour Aldin
Kahlous, Dmytro S Radchenko, Yurii S Moroz, María Isabel Loza, Ulf Norinder, et al. Rapid traversal of vast
chemical space using machine learning-guided docking screens. Nature Computational Science, pages 1–12,
2025.
[26] Artem Cherkasov. The ’big bang’ of the chemical universe. Nat. Chem. Biol., 19(6):667–668, June 2023.
[27] H Maarten Vinkers, Marc R de Jonge, Frederik FD Daeyaert, Jan Heeres, Lucien MH Koymans, Joop H van
Lenthe, Paul J Lewi, Henk Timmerman, Koen Van Aken, and Paul AJ Janssen. Synopsis: synthesize and optimize
system in silico. Journal of medicinal chemistry, 46(13):2765–2773, 2003.
[28] Markus Hartenfeller, Heiko Zettl, Miriam Walter, Matthias Rupp, Felix Reisen, Ewgenij Proschak, Sascha
Weggen, Holger Stark, and Gisbert Schneider. Dogs: reaction-driven de novo design of bioactive compounds.
PLoS computational biology, 8(2):e1002380, 2012.
[29] Alexander Button, Daniel Merk, Jan A Hiss, and Gisbert Schneider. Automated de novo molecular design by
hybrid machine intelligence and rule-driven chemical synthesis. Nature machine intelligence, 1(7):307–315,
2019.
[30] Gian Marco Ghiandoni, Michael J Bodkin, Beining Chen, Dimitar Hristozov, James EA Wallace, James Webster,
and Valerie J Gillet. Renate: a pseudo-retrosynthetic tool for synthetically accessible de novo design. Molecular
Informatics, 41(4):2100207, 2022.
[31] Gian Marco Ghiandoni, Stuart R Flanagan, Michael J Bodkin, Maria Giulia Nizi, Albert Galera-Prat, Annalaura
Brai, Beining Chen, James EA Wallace, Dimitar Hristozov, James Webster, et al. Synthetically accessible de
novo design using reaction vectors: Application to parp1 inhibitors. Molecular Informatics, 43(4):e202300183,
2024.
[32] Laurent Batiste, Andrea Unzue, Aymeric Dolbois, Fabrice Hassler, Xuan Wang, Nicholas Deerain, Jian Zhu,
Dimitrios Spiliotopoulos, Cristina Nevado, and Amedeo Caflisch. Chemical space expansion of bromodomain
ligands guided by in silico virtual couplings (autocouple). ACS central science, 4(2):180–188, 2018.
[33] Florent Chevillard, Helena Rimmer, Cecilia Betti, Els Pardon, Steven Ballet, Niek van Hilten, Jan Steyaert,
Wibke E Diederich, and Peter Kolb. Binding-site compatible fragment growing applied to the design of
β2-adrenergic receptor ligands. Journal of Medicinal Chemistry, 61(3):1118–1129, 2018.
[34] Kai Sommer, Florian Flachsenberg, and Matthias Rarey. Naominext–synthetically feasible fragment growing in
a structure-based design context. European Journal of Medicinal Chemistry, 163:747–762, 2019.
[35] Jacob O Spiegel and Jacob D Durrant. Autogrow4: an open-source genetic algorithm for de novo drug design
and lead optimization. Journal of cheminformatics, 12:1–16, 2020.
[36] Tianfan Fu, Wenhao Gao, Connor Coley, and Jimeng Sun. Reinforced genetic algorithm for structure-based drug
design. Advances in Neural Information Processing Systems, 35:12325–12338, 2022.
[37] Pieter H Bos, Fabio Ranalli, Emelie Flood, Shawn Watts, Daigo Inoyama, Jennifer L Knight, Anthony J Clark,
Andrew Placzeck, Jiashi Wang, Aleksey I Gerasyuto, et al. Autodesigner-core design, a de novo design algorithm
for chemical scaffolds: Application to the design and synthesis of novel selective wee1 inhibitors. Journal of
Chemical Information and Modeling, 64(19):7513–7524, 2024.
59
arXiv Template
A PREPRINT
[38] Artur Kadurin, Alexander Aliper, Andrey Kazennov, Polina Mamoshina, Quentin Vanhaelen, Kuzma Khrabrov,
and Alex Zhavoronkov. The cornucopia of meaningful leads: Applying deep adversarial autoencoders for new
molecule development in oncology. Oncotarget, 8(7):10883, 2017.
[39] Esben Jannik Bjerrum and Richard Threlfall. Molecular generation with recurrent neural networks (rnns). arXiv
preprint arXiv:1705.04612, 2017.
[40] Marcus Olivecrona, Thomas Blaschke, Ola Engkvist, and Hongming Chen. Molecular de-novo design through
deep reinforcement learning. Journal of cheminformatics, 9:1–14, 2017.
[41] Mariya Popova, Olexandr Isayev, and Alexander Tropsha. Deep reinforcement learning for de novo drug design.
Science advances, 4(7):eaap7885, 2018.
[42] Marwin HS Segler, Thierry Kogej, Christian Tyrchan, and Mark P Waller. Generating focused molecule libraries
for drug discovery with recurrent neural networks. ACS central science, 4(1):120–131, 2018.
[43] Yuanqi Du, Arian R Jamasb, Jeff Guo, Tianfan Fu, Charles Harris, Yingheng Wang, Chenru Duan, Pietro Liò,
Philippe Schwaller, and Tom L Blundell. Machine learning-aided generative molecular design. Nature Machine
Intelligence, pages 1–16, 2024.
[44] Frank W Pun, Ivan V Ozerov, and Alex Zhavoronkov. Ai-powered therapeutic target discovery. Trends in
Pharmacological Sciences, 2023.
[45] https://github.com/guojeff/generative-drug-design-with-experimental-validation, 2025.
[46] Wenhao Gao and Connor W Coley. The synthesizability of molecules proposed by generative models. Journal
of chemical information and modeling, 60(12):5714–5723, 2020.
[47] Camille Bilodeau, Wengong Jin, Tommi Jaakkola, Regina Barzilay, and Klavs F Jensen. Generative models
for molecular discovery: Recent advances and challenges. Wiley Interdisciplinary Reviews: Computational
Molecular Science, 12(5):e1608, 2022.
[48] Megan Stanley and Marwin Segler. Fake it until you make it? generative de novo design and virtual screening of
synthesizable molecules. Current Opinion in Structural Biology, 82:102658, 2023.
[49] Jeff Guo and Philippe Schwaller. Directly optimizing for synthesizability in generative molecular design using
retrosynthesis models. Chemical Science, 2025.
[50] Peter Ertl and Ansgar Schuffenhauer. Estimation of synthetic accessibility score of drug-like molecules based on
molecular complexity and fragment contributions. Journal of cheminformatics, 1:1–11, 2009.
[51] Shuan Chen and Yousung Jung. Estimating the synthetic accessibility of molecules with building block and
reaction-aware sascore. Journal of Cheminformatics, 2024.
[52] Connor W Coley, Luke Rogers, William H Green, and Klavs F Jensen. Scscore: synthetic complexity learned
from a reaction corpus. Journal of chemical information and modeling, 58(2):252–261, 2018.
[53] Milan Voršilák, Michal Koláˇr, Ivan ˇCmelo, and Daniel Svozil. Syba: Bayesian estimation of synthetic accessibility
of organic compounds. Journal of cheminformatics, 12:1–13, 2020.
[54] Casper Steinmann and Jan H Jensen. Using a genetic algorithm to find molecules with good docking scores.
PeerJ Physical Chemistry, 3:e18, 2021.
[55] Zhe Xue, Chenwei Sun, Wenhao Zheng, Jiancheng Lv, and Xianggen Liu. Targetsa: adaptive simulated annealing
for target-specific drug design. Bioinformatics, 41(1):btae730, 2025.
[56] Seul Lee, Seanie Lee, and Sung Ju Hwang. Drug discovery with dynamic goal-aware fragments. arXiv preprint
arXiv:2310.00841, 2023.
[57] Oh-Hyeon Choung, Riccardo Vianello, Marwin Segler, Nikolaus Stiefl, and José Jiménez-Luna. Extracting
medicinal chemistry intuition via preference machine learning. Nature Communications, 14(1):6651, 2023.
[58] Rebecca M Neeser, Bruno Correia, and Philippe Schwaller. Fsscore: A personalized machine learning-based
synthetic feasibility score. Chemistry-Methods, page e202400024, 2024.
[59] Alan Kai Hassen, Martin Šícho, Yorick J van Aalst, Mirjam CW Huizenga, Darcy NR Reynolds, Sohvi
Luukkonen, Andrius Bernatavicius, Djork-Arné Clevert, Antonius Janssen, Gerard JP van Westen, et al. Generate
what you can make: achieving in-house synthesizability with readily available resources in de novo drug design.
Journal of Cheminformatics, 17(1):1–16, 2025.
[60] Matthew Medcalf, Varsha Jain, Stefani Gamboa, Brian Atwood, Maoussi Lhuillier-Akakpo, Victoire Cachoux,
and Quentin Perron. Overcoming dmta cycle challenges: A unified ai-driven system for efficient drug design.
ChemRxiv, 2024.
60
arXiv Template
A PREPRINT
[61] John Bradshaw, Brooks Paige, Matt J Kusner, Marwin Segler, and José Miguel Hernández-Lobato. A model to
search for synthesizable molecules. Advances in Neural Information Processing Systems, 32, 2019.
[62] John Bradshaw, Brooks Paige, Matt J Kusner, Marwin Segler, and José Miguel Hernández-Lobato. Barking up
the right tree: an approach to search over molecule synthesis dags. Advances in neural information processing
systems, 33:6852–6866, 2020.
[63] Ksenia Korovina, Sailun Xu, Kirthevasan Kandasamy, Willie Neiswanger, Barnabas Poczos, Jeff Schneider, and
Eric Xing. Chembo: Bayesian optimization of small organic molecules with synthesizable recommendations. In
International Conference on Artificial Intelligence and Statistics, pages 3393–3403. PMLR, 2020.
[64] Sai Krishna Gottipati, Boris Sattarov, Sufeng Niu, Yashaswi Pathak, Haoran Wei, Shengchao Liu, Simon
Blackburn, Karam Thomas, Connor Coley, Jian Tang, et al. Learning to navigate the synthetically accessible
chemical space using reinforcement learning. In International conference on machine learning, pages 3668–3679.
PMLR, 2020.
[65] Julien Horwood and Emmanuel Noutahi. Molecular design in synthetically accessible chemical space via deep
reinforcement learning. ACS omega, 5(51):32984–32994, 2020.
[66] Vendy Fialková, Jiaxi Zhao, Kostas Papadopoulos, Ola Engkvist, Esben Jannik Bjerrum, Thierry Kogej, and
Atanas Patronov. Libinvent: reaction-based generative scaffold decoration for in silico library design. Journal of
Chemical Information and Modeling, 62(9):2046–2063, 2021.
[67] Wenhao Gao, Rocío Mercado, and Connor W Coley. Amortized tree generation for bottom-up synthesis planning
and synthesizable molecular design. Proc. 10th International Conference on Learning Representations, 2022.
[68] Seonghwan Seo, Jaechang Lim, and Woo Youn Kim. Molecular generative model via retrosynthetically prepared
chemical building block assembly. Advanced Science, 10(8):2206674, 2023.
[69] Wenhao Gao, Shitong Luo, and Connor W Coley. Generative artificial intelligence for navigating synthesizable
chemical space. arXiv preprint arXiv:2410.03494, 2024.
[70] Kyle Swanson, Gary Liu, Denise B Catacutan, Autumn Arnold, James Zou, and Jonathan M Stokes. Generative ai
for designing and validating easily synthesizable and structurally novel antibiotics. Nature Machine Intelligence,
6(3):338–353, 2024.
[71] Michał Koziarski, Andrei Rekesh, Dmytro Shevchuk, Almer van der Sloot, Piotr Gai´nski, Yoshua Bengio,
Cheng-Hao Liu, Mike Tyers, and Robert A Batey. Rgfn: Synthesizable molecular generation using gflownets.
arXiv preprint arXiv:2406.08506, 2024.
[72] Miruna Cretu, Charles Harris, Julien Roy, Emmanuel Bengio, and Pietro Liò. Synflownet: Towards molecule
design with guaranteed synthesis pathways. arXiv preprint arXiv:2405.01155, 2024.
[73] Shitong Luo, Wenhao Gao, Zuofan Wu, Jian Peng, Connor W Coley, and Jianzhu Ma. Projecting molecules into
synthesizable chemical spaces. Proc. 41st International Conference on Machine Learning, 2024.
[74] Zygimantas Jocys, Henriette MG Willems, and Katayoun Farrahi. Synthformer: Equivariant pharmacophore-
based generation of molecules for ligand-based drug design. arXiv preprint arXiv:2410.02718, 2024.
[75] Seonghwan Seo, Minsu Kim, Tony Shen, Martin Ester, Jinkyoo Park, Sungsoo Ahn, and Woo Youn Kim.
Generative flows on synthetic pathway for drug design. arXiv preprint arXiv:2410.04542, 2024.
[76] Mingyang Wang, Shuai Li, Jike Wang, Odin Zhang, Hongyan Du, Dejun Jiang, Zhenxing Wu, Yafeng Deng,
Yu Kang, Peichen Pan, et al. Clickgen: Directed exploration of synthesizable chemical space via modular
reactions and reinforcement learning. Nature Communications, 15(1):10127, 2024.
[77] João Correia, Vítor Pereira, and Miguel Rocha. Combining evolutionary algorithms with reaction rules towards
focused molecular design. In Proceedings of the Genetic and Evolutionary Computation Conference, pages
900–909, 2023.
[78] Shogo Nakamura, Nobuaki Yasuo, and Masakazu Sekijima.
Molecular optimization using a conditional
transformer for reaction-aware compound exploration with reinforcement learning. Commun. Chem., 8(1), 2025.
[79] Xiaodan Yin, Xiaorui Wang, Zhenxing Wu, Qin Li, Yu Kang, Yafeng Deng, Pei Luo, Huanxiang Liu, Guqin Shi,
Zheng Wang, et al. Syn-molopt: a synthesis planning-driven molecular optimization method using data-derived
functional reaction templates. Journal of Cheminformatics, 17(1):1–14, 2025.
[80] Clarisse Descamps, Vincent Bouttier, Juan Sanz García, Quentin Perron, and Hamza Tajmouati. Growing and
linking optimizers: Synthesis-driven molecule design. ChemRxiv, 2025.
[81] Piotr Gai´nski, Oussama Boussif, Dmytro Shevchuk, Andrei Rekesh, Ali Parviz, Mike Tyers, Robert A Batey,
and Michał Koziarski. Scalable and cost-efficient de novo template-based molecular generation. In ICLR 2025
Workshop on Generative and Experimental Perspectives for Biomolecular Design, 2025.
61
arXiv Template
A PREPRINT
[82] Elias James Corey and W Todd Wipke. Computer-assisted design of complex organic syntheses: Pathways for
molecular synthesis can be devised with a computer and equipment for graphical communication. Science, 166
(3902):178–192, 1969.
[83] Elias James Corey, Alan K Long, and Stewart D Rubenstein. Computer-assisted analysis in organic synthesis.
Science, 228(4698):408–418, 1985.
[84] Marwin HS Segler, Mike Preuss, and Mark P Waller. Planning chemical syntheses with deep neural networks
and symbolic ai. Nature, 555(7698):604–610, 2018.
[85] Yemin Yu, Ying Wei, Kun Kuang, Zhengxing Huang, Huaxiu Yao, and Fei Wu. Grasp: Navigating retrosynthetic
planning with goal-driven policy. Advances in Neural Information Processing Systems, 35:10257–10268, 2022.
[86] Binghong Chen, Chengtao Li, Hanjun Dai, and Le Song. Retro*: learning retrosynthetic planning with neural
guided a* search. In International conference on machine learning, pages 1608–1616. PMLR, 2020.
[87] Daniel Armstrong, Zlatko Joncev, Jeff Guo, and Philippe Schwaller. Tango*: Constrained synthesis planning
using chemically informed value functions. arXiv preprint arXiv:2412.03424, 2024.
[88] Guoqing Liu, Di Xue, Shufang Xie, Yingce Xia, Austin Tripp, Krzysztof Maziarz, Marwin Segler, Tao Qin,
Zongzhang Zhang, and Tie-Yan Liu. Retrosynthetic planning with dual value networks. In International
Conference on Machine Learning, pages 22266–22276. PMLR, 2023.
[89] Kevin Yu, Jihye Roh, Ziang Li, Wenhao Gao, Runzhong Wang, and Connor W Coley. Double-ended synthesis
planning with goal-constrained bidirectional search. arXiv preprint arXiv:2407.06334, 2024.
[90] Sara Szymku´c, Ewa P Gajewska, Tomasz Klucznik, Karol Molga, Piotr Dittwald, Michał Startek, Michał Bajczyk,
and Bartosz A Grzybowski. Computer-assisted synthetic planning: the end of the beginning. Angewandte
Chemie International Edition, 55(20):5904–5937, 2016.
[91] Bartosz A Grzybowski, Sara Szymku´c, Ewa P Gajewska, Karol Molga, Piotr Dittwald, Agnieszka Wołos, and
Tomasz Klucznik. Chematica: a story of computer code that started to think like a chemist. Chem, 4(3):390–398,
2018.
[92] Shuan Chen and Yousung Jung. Deep retrosynthetic reaction prediction using local reactivity and global attention.
JACS Au, 1(10):1612–1620, 2021.
[93] Shufang Xie, Rui Yan, Junliang Guo, Yingce Xia, Lijun Wu, and Tao Qin. Retrosynthesis prediction with
local template retrieval. In Proceedings of the AAAI Conference on Artificial Intelligence, volume 37, pages
5330–5338, 2023.
[94] Bowen Liu, Bharath Ramsundar, Prasad Kawthekar, Jade Shi, Joseph Gomes, Quang Luu Nguyen, Stephen Ho,
Jack Sloane, Paul Wender, and Vijay Pande. Retrosynthetic reaction prediction using neural sequence-to-sequence
models. ACS central science, 3(10):1103–1113, 2017.
[95] Marwin HS Segler and Mark P Waller. Neural-symbolic machine learning for retrosynthesis and reaction
prediction. Chemistry–A European Journal, 23(25):5966–5971, 2017.
[96] Yuqiang Han, Xiaoyang Xu, Chang-Yu Hsieh, Keyan Ding, Hongxia Xu, Renjun Xu, Tingjun Hou, Qiang Zhang,
and Huajun Chen. Retrosynthesis prediction with an iterative string editing model. Nature Communications, 15
(1):6404, 2024.
[97] Mikołaj Sacha, Mikołaj Błaz, Piotr Byrski, Paweł Dabrowski-Tumanski, Mikołaj Chrominski, Rafał Loska, Paweł
Włodarczyk-Pruszynski, and Stanisław Jastrzebski. Molecule edit graph attention network: modeling chemical
reactions as sequences of graph edits. Journal of Chemical Information and Modeling, 61(7):3273–3284, 2021.
[98] Weihe Zhong, Ziduo Yang, and Calvin Yu-Chian Chen. Retrosynthesis prediction using an end-to-end graph
generative architecture for molecular graph editing. Nature Communications, 14(1):3009, 2023.
[99] Samuel Genheden, Amol Thakkar, Veronika Chadimová, Jean-Louis Reymond, Ola Engkvist, and Esben
Bjerrum. Aizynthfinder: a fast, robust and flexible open-source software for retrosynthetic planning. Journal of
cheminformatics, 12(1):70, 2020.
[100] Lakshidaa Saigiridharan, Alan Kai Hassen, Helen Lai, Paula Torren-Peraire, Ola Engkvist, and Samuel Gen-
heden. Aizynthfinder 4.0: developments based on learnings from 3 years of industrial application. Journal of
Cheminformatics, 16(1):57, 2024.
[101] Ross Irwin, Spyridon Dimitriadis, Jiazhen He, and Esben Jannik Bjerrum. Chemformer: a pre-trained transformer
for computational chemistry. Machine Learning: Science and Technology, 3(1):015022, 2022.
[102] Connor W Coley, Luke Rogers, William H Green, and Klavs F Jensen. Computer-assisted retrosynthesis based
on molecular similarity. ACS central science, 3(12):1237–1245, 2017.
62
arXiv Template
A PREPRINT
[103] Hanjun Dai, Chengtao Li, Connor Coley, Bo Dai, and Le Song. Retrosynthesis prediction with conditional graph
logic network. Advances in Neural Information Processing Systems, 32, 2019.
[104] Shoichi Ishida, Kei Terayama, Ryosuke Kojima, Kiyosei Takasu, and Yasushi Okuno. Prediction and interpretable
visualization of retrosynthetic reactions using graph convolutional networks. Journal of chemical information
and modeling, 59(12):5026–5033, 2019.
[105] Shuangjia Zheng, Jiahua Rao, Zhongyue Zhang, Jun Xu, and Yuedong Yang. Predicting retrosynthetic reactions
using self-corrected transformer neural networks. Journal of chemical information and modeling, 60(1):47–55,
2019.
[106] Michael E Fortunato, Connor W Coley, Brian C Barnes, and Klavs F Jensen. Data augmentation and pretrain-
ing for template-based retrosynthetic prediction in computer-aided synthesis planning. Journal of chemical
information and modeling, 60(7):3398–3407, 2020.
[107] Philipp Seidl, Philipp Renz, Natalia Dyubankova, Paulo Neves, Jonas Verhoeven, Jorg K Wegner, Marwin
Segler, Sepp Hochreiter, and Gunter Klambauer. Improving few-and zero-shot reaction template prediction using
modern hopfield networks. Journal of chemical information and modeling, 62(9):2111–2120, 2022.
[108] Connor W Coley, Dale A Thomas III, Justin AM Lummiss, Jonathan N Jaworski, Christopher P Breen, Victor
Schultz, Travis Hart, Joshua S Fishman, Luke Rogers, Hanyu Gao, et al. A robotic platform for flow synthesis of
organic compounds informed by ai planning. Science, 365(6453):eaax1566, 2019.
[109] Ian A Watson, Jibo Wang, and Christos A Nicolaou. A retrosynthetic analysis algorithm implementation. Journal
of cheminformatics, 11:1–12, 2019.
[110] Molecule.one. The m1 platform.
[111] IBM. Rxn for chemistry.
[112] Iktos. Spaya.
[113] PostEra. Manifold.
[114] CAS. Cas scifinder.
[115] Philippe Schwaller, Riccardo Petraglia, Valerio Zullo, Vishnu H Nair, Rico Andreas Haeuselmann, Riccardo
Pisoni, Costas Bekas, Anna Iuliano, and Teodoro Laino. Predicting retrosynthetic pathways using transformer-
based models and a hyper-graph exploration strategy. Chemical science, 11(12):3316–3325, 2020.
[116] Amol Thakkar, Alain C Vaucher, Andrea Byekwaso, Philippe Schwaller, Alessandra Toniato, and Teodoro Laino.
Unbiasing retrosynthesis language models with disconnection prompts. ACS Central Science, 9(7):1488–1498,
2023.
[117] Krzysztof Maziarz, Guoqing Liu, Hubert Misztela, Aleksei Kornev, Piotr Gai´nski, Holger Hoefling, Mike
Fortunato, Rishi Gupta, and Marwin Segler. Chimera: Accurate retrosynthesis prediction by ensembling models
with diverse inductive biases. arXiv preprint arXiv:2412.05269, 2024.
[118] Andres M Bran, Theo A Neukomm, Daniel P Armstrong, Zlatko Jonˇcev, and Philippe Schwaller. Chemical
reasoning in llms unlocks steerable synthesis planning and reaction mechanism elucidation. arXiv preprint
arXiv:2503.08537, 2025.
[119] Yaxia Yuan, Jianfeng Pei, and Luhua Lai. Ligbuilder 2: a practical de novo drug design approach. Journal of
chemical information and modeling, 51(5):1083–1091, 2011.
[120] Yaxia Yuan, Jianfeng Pei, and Luhua Lai. Ligbuilder v3: a multi-target de novo drug design approach. Frontiers
in chemistry, 8:142, 2020.
[121] Jason D Shields, Rachel Howells, Gillian Lamont, Yin Leilei, Andrew Madin, Christopher E Reimann, Hadi
Rezaei, Tristan Reuillon, Bryony Smith, Clare Thomson, et al. Aizynth impact on medicinal chemistry practice
at astrazeneca. RSC Medicinal Chemistry, 15(4):1085–1095, 2024.
[122] Cheng-Han Li and Daniel P Tabor. Generative organic electronic molecular design informed by quantum
chemistry. Chemical Science, 14(40):11045–11055, 2023.
[123] Albin Ekborg. De novo molecular generation of molecules with consistent synthetic strategy. Master’s thesis,
Chalmers University of Technology, 2024.
[124] Maud Parrot, Hamza Tajmouati, Vinicius Barros Ribeiro da Silva, Brian Ross Atwood, Robin Fourcade, Yann
Gaston-Mathé, Nicolas Do Huu, and Quentin Perron. Integrating synthetic accessibility with ai-based generative
drug design. Journal of Cheminformatics, 15(1):83, 2023.
[125] Jeff Guo and Philippe Schwaller. It takes two to tango: Directly optimizing for constrained synthesizability in
generative molecular design. arXiv preprint arXiv:2410.11527, 2024.
63
arXiv Template
A PREPRINT
[126] Ewa P Gajewska, Sara Szymku´c, Piotr Dittwald, Michał Startek, Oskar Popik, Jacek Mlynarski, and Bartosz A
Grzybowski. Algorithmic discovery of tactical combinations for advanced organic syntheses. Chem, 6(1):
280–293, 2020.
[127] Gary Tom, Stefan P Schmid, Sterling G Baird, Yang Cao, Kourosh Darvish, Han Hao, Stanley Lo, Sergio
Pablo-García, Ella M Rajaonson, Marta Skreta, et al. Self-driving laboratories for chemistry and materials
science. Chemical Reviews, 2024.
[128] Joshua W Sin, Siu Lun Chau, Ryan P Burwood, Kurt Püntener, Raphael Bigler, and Philippe Schwaller.
Highly parallel optimisation of nickel-catalysed suzuki reactions through automation and machine intelligence.
ChemRxiv, 2024.
[129] Anne-Catherine Bédard, Andrea Adamo, Kosi C Aroh, M Grace Russell, Aaron A Bedermann, Jeremy Torosian,
Brian Yue, Klavs F Jensen, and Timothy F Jamison. Reconfigurable system for automated optimization of
diverse chemical reactions. Science, 361(6408):1220–1225, 2018.
[130] Sebastian Steiner, Jakob Wolf, Stefan Glatzel, Anna Andreou, Jarosław M Granda, Graham Keenan, Trevor
Hinkley, Gerardo Aragon-Camarasa, Philip J Kitson, Davide Angelone, et al. Organic synthesis in a modular
robotic system driven by a chemical programming language. Science, 363(6423):eaav2211, 2019.
[131] Nicholas H Angello, Vandana Rathore, Wiktor Beker, Agnieszka Wołos, Edward R Jira, Rafał Roszak, Tony C
Wu, Charles M Schroeder, Alán Aspuru-Guzik, Bartosz A Grzybowski, et al. Closed-loop optimization of
general reaction conditions for heteroaryl suzuki-miyaura coupling. Science, 378(6618):399–405, 2022.
[132] Wesley Wang, Nicholas H Angello, Daniel J Blair, Theodore Tyrikos-Ergas, William H Krueger, Kameron NS
Medine, Antonio J LaPorte, Joshua M Berger, and Martin D Burke. Rapid automated iterative small-molecule
synthesis. Nature Synthesis, pages 1–8, 2024.
[133] Nicholas H Angello, David M Friday, Changhyun Hwang, Seungjoo Yi, Austin H Cheng, Tiara C Torres-Flores,
Edward R Jira, Wesley Wang, Alán Aspuru-Guzik, Martin D Burke, et al. Closed-loop transfer enables artificial
intelligence to yield chemical knowledge. Nature, 633(8029):351–358, 2024.
[134] Felix Strieth-Kalthoff, Han Hao, Vandana Rathore, Joshua Derasp, Théophile Gaudin, Nicholas H Angello,
Martin Seifrid, Ekaterina Trushina, Mason Guy, Junliang Liu, et al. Delocalized, asynchronous, closed-loop
discovery of organic laser emitters. Science, 384(6697):eadk9227, 2024.
[135] Connor W Coley, Natalie S Eyke, and Klavs F Jensen. Autonomous discovery in the chemical sciences part i:
Progress. Angewandte Chemie International Edition, 59(51):22858–22893, 2020.
[136] Connor W Coley, Natalie S Eyke, and Klavs F Jensen. Autonomous discovery in the chemical sciences part ii:
outlook. Angewandte Chemie International Edition, 59(52):23414–23436, 2020.
[137] Jenna C Fromer and Connor W Coley. An algorithmic framework for synthetic cost-aware decision making in
molecular design. Nature Computational Science, 4(6):440–450, 2024.
[138] Jenna C Fromer, Alexandra D Volkova, and Connor W Coley. Optimal compound downselection to promote
diversity and parallel chemistry. arXiv preprint arXiv:2503.13627, 2025.
[139] Sepp Hochreiter and Jürgen Schmidhuber. Long short-term memory. Neural computation, 9(8):1735–1780,
1997.
[140] Daniel Neil, Marwin Segler, Laura Guasch, Mohamed Ahmed, Dean Plumbley, Matthew Sellwood, and Nathan
Brown. Exploring deep recurrent models with reinforcement learning for molecule design. In Proc. 6th
International Conference on Learning Representations, 2018.
[141] Jeff Guo and Philippe Schwaller. Saturn: Sample-efficient generative molecular design using memory manipula-
tion. arXiv preprint arXiv:2405.17066, 2024.
[142] Krzysztof Maziarz, Austin Tripp, Guoqing Liu, Megan Stanley, Shufang Xie, Piotr Gai´nski, Philipp Seidl, and
Marwin HS Segler. Re-evaluating retrosynthesis algorithms with syntheseus. Faraday Discussions, 256:568–586,
2025.
[143] Albert Gu and Tri Dao. Mamba: Linear-time sequence modeling with selective state spaces. arXiv preprint
arXiv:2312.00752, 2023.
[144] Sunghwan Kim, Jie Chen, Tiejun Cheng, Asta Gindulyte, Jia He, Siqian He, Qingliang Li, Benjamin A
Shoemaker, Paul A Thiessen, Bo Yu, et al. Pubchem 2023 update. Nucleic acids research, 51(D1):D1373–
D1380, 2023.
[145] David Weininger. Smiles, a chemical language and information system. 1. introduction to methodology and
encoding rules. Journal of chemical information and computer sciences, 28(1):31–36, 1988.
64
arXiv Template
A PREPRINT
[146] Jeff Guo and Philippe Schwaller. Augmented memory: Sample-efficient generative molecular design with
reinforcement learning. JACS Au, 2024.
[147] Thomas Blaschke, Josep Arús-Pous, Hongming Chen, Christian Margreitter, Christian Tyrchan, Ola Engkvist,
Kostas Papadopoulos, and Atanas Patronov. Reinvent 2.0: an ai tool for de novo drug design. Journal of chemical
information and modeling, 60(12):5918–5922, 2020.
[148] Hannes H Loeffler, Jiazhen He, Alessandro Tibo, Jon Paul Janet, Alexey Voronov, Lewis H Mervin, and Ola
Engkvist. Reinvent 4: Modern ai–driven generative molecule design. Journal of Cheminformatics, 16(1):20,
2024.
[149] Ronald J Williams. Simple statistical gradient-following algorithms for connectionist reinforcement learning.
Machine learning, 8:229–256, 1992.
[150] Nadine Schneider, Nikolaus Stiefl, and Gregory A Landrum. What’s what: The (nearly) definitive guide to
reaction role assignment. Journal of chemical information and modeling, 56(12):2336–2346, 2016.
[151] Hanjun Dai, Chengtao Li, Connor Coley, Bo Dai, and Le Song. Retrosynthesis prediction with conditional graph
logic network. Advances in Neural Information Processing Systems, 32, 2019.
[152] Maarten R Dobbelaere, István Lengyel, Christian V Stevens, and Kevin M Van Geem. Rxn-insight: fast chemical
reaction analysis using bond-electron matrices. Journal of Cheminformatics, 16(1):37, 2024.
[153] John S Carey, David Laffan, Colin Thomson, and Mike T Williams. Analysis of the reactions used for the
preparation of drug candidate molecules. Organic & biomolecular chemistry, 4(12):2337–2347, 2006.
[154] Inc. Daylight Chemical Information Systems. Smirks - a reaction transform language.
[155] Philippe Schwaller, Benjamin Hoover, Jean-Louis Reymond, Hendrik Strobelt, and Teodoro Laino. Extraction
of organic chemistry grammar from unsupervised learning of chemical reactions. Science Advances, 7(15):
eabe4166, 2021.
[156] Steven M Kearnes, Michael R Maser, Michael Wleklinski, Anton Kast, Abigail G Doyle, Spencer D Dreher,
Joel M Hawkins, Klavs F Jensen, and Connor W Coley. The open reaction database. Journal of the American
Chemical Society, 143(45):18820–18826, 2021.
[157] NextMove Software. Namrxn.
[158] Oleg Trott and Arthur J Olson. Autodock vina: improving the speed and accuracy of docking with a new scoring
function, efficient optimization, and multithreading. Journal of computational chemistry, 31(2):455–461, 2010.
[159] Amr Alhossary, Stephanus Daniel Handoko, Yuguang Mu, and Chee-Keong Kwoh. Fast, accurate, and reliable
molecular docking with quickvina 2. Bioinformatics, 31(13):2214–2216, 2015.
[160] Shidi Tang, Ji Ding, Xiangyu Zhu, Zheng Wang, Haitao Zhao, and Jiansheng Wu. Vina-gpu 2.1: towards further
optimizing docking speed and precision of autodock vina and its derivatives. bioRxiv, pages 2023–11, 2023.
[161] Mark F Mabanglo, Keith S Wong, Marim M Barghash, Elisa Leung, Stephanie HW Chuang, Afshan Ardalan,
Emily M Majaesic, Cassandra J Wong, Shen Zhang, Henk Lang, et al. Potent clpp agonists with anticancer
properties bind with improved structural complementarity and alter the mitochondrial n-terminome. Structure,
31(2):185–200, 2023.
[162] G Richard Bickerton, Gaia V Paolini, Jérémy Besnard, Sorel Muresan, and Andrew L Hopkins. Quantifying the
chemical beauty of drugs. Nature chemistry, 4(2):90–98, 2012.
[163] Scott E Lazerwith, Gina Bahador, Eda Canales, Guofeng Cheng, Lee Chong, Michael O Clarke, Edward Doerffler,
Eugene J Eisenberg, Jaclyn Hayes, Bing Lu, et al. Optimization of pharmacokinetics through manipulation of
physicochemical properties in a series of hcv inhibitors. ACS Medicinal Chemistry Letters, 2(10):715–719, 2011.
[164] Peter W Kenny. Hydrogen-bond donors in drug design. Journal of medicinal chemistry, 65(21):14261–14275,
2022.
[165] Guy W Bemis and Mark A Murcko. The properties of known drugs. 1. molecular frameworks. Journal of
medicinal chemistry, 39(15):2887–2893, 1996.
[166] Daniil Polykovskiy, Alexander Zhebrak, Benjamin Sanchez-Lengeling, Sergey Golovanov, Oktai Tatanov,
Stanislav Belyaev, Rauf Kurbanov, Aleksey Artamonov, Vladimir Aladinskiy, Mark Veselov, et al. Molecular
sets (moses): a benchmarking platform for molecular generation models. Frontiers in pharmacology, 11:565644,
2020.
[167] Yutong Xie, Ziqiao Xu, Jiaqi Ma, and Qiaozhu Mei. How much space has been explored? measuring the
chemical space covered by databases and machine-generated molecules. In Proc. 11th International Conference
on Learning Representations, 2023.
65
arXiv Template
A PREPRINT
[168] Richard A Friesner, Jay L Banks, Robert B Murphy, Thomas A Halgren, Jasna J Klicic, Daniel T Mainz,
Matthew P Repasky, Eric H Knoll, Mee Shelley, Jason K Perry, et al. Glide: a new approach for rapid, accurate
docking and scoring. 1. method and assessment of docking accuracy. Journal of medicinal chemistry, 47(7):
1739–1749, 2004.
[169] Dean G Brown and Jonas Bostrom. Analysis of past and present synthetic methodologies on medicinal chemistry:
where have all the new reactions gone? miniperspective. Journal of medicinal chemistry, 59(10):4443–4458,
2016.
[170] Christopher A Lipinski, Franco Lombardo, Beryl W Dominy, and Paul J Feeney. Experimental and computational
approaches to estimate solubility and permeability in drug discovery and development settings. Advanced drug
delivery reviews, 64:4–17, 2012.
[171] Sriram Mahesh, Kuei-Chien Tang, and Monika Raj. Amide bond activation of biological molecules. Molecules,
23(10):2615, 2018.
[172] Jeff Guo, Jon Paul Janet, Matthias R Bauer, Eva Nittinger, Kathryn A Giblin, Kostas Papadopoulos, Alexey
Voronov, Atanas Patronov, Ola Engkvist, and Christian Margreitter. Dockstream: a docking wrapper to enhance
de novo molecular design. Journal of cheminformatics, 13:1–21, 2021.
[173] Bowen Gao, Haichuan Tan, Yanwen Huang, Minsi Ren, Xiao Huang, Wei-Ying Ma, Ya-Qin Zhang, and Yanyan
Lan. From theory to therapy: Reframing sbdd model evaluation via practical metrics. In Proc. 13th International
Conference on Learning Representations, 2025.
[174] Anita Ivankovi´c, Ana Dronji´c, Anita Martinovi´c Bevanda, and Stanislava Tali´c. Review of 12 principles of green
chemistry in practice. International Journal of Sustainable and Green Energy, 6(3):39–48, 2017.
[175] Ian S Young and Phil S Baran. Protecting-group-free synthesis as an opportunity for invention. Nature chemistry,
1(3):193–205, 2009.
[176] Stéphane Caron. Practical synthetic organic chemistry: reactions, principles, and techniques. John Wiley &
Sons, 2020.
[177] Agnieszka Wołos, Dominik Koszelewski, Rafał Roszak, Sara Szymku´c, Martyna Moskal, Ryszard Ostaszewski,
Brenden T Herrera, Josef M Maier, Gordon Brezicki, Jonathon Samuel, et al. Computer-designed repurposing of
chemical wastes into drugs. Nature, 604(7907):668–676, 2022.
[178] R G Kurumbail, A M Stevens, J K Gierse, J J McDonald, R A Stegeman, J Y Pak, D Gildehaus, J M
Miyashiro, T D Penning, K Seibert, P C Isakson, and W C Stallings. Structural basis for selective inhibi-
tion of cyclooxygenase-2 by anti-inflammatory agents. Nature, 384(6610):644–648, 1996.
[179] Andrew T McNutt, Paul Francoeur, Rishal Aggarwal, Tomohide Masuda, Rocco Meli, Matthew Ragoza, Jocelyn
Sunseri, and David Ryan Koes. GNINA 1.0: molecular docking with deep learning. J. Cheminform., 13(1):43,
June 2021.
[180] Matthias R Bauer, Tamer M Ibrahim, Simon M Vogel, and Frank M Boeckler. Evaluation and optimization of
virtual screening workflows with DEKOIS 2.0–a public library of challenging docking benchmark sets. J. Chem.
Inf. Model., 53(6):1447–1462, June 2013.
[181] T V Tony Phan, Cyril Gallardo, and Jean Mane. GREEN MOTION: a new and easy to use green chemistry
metric from laboratories to industry. Green Chem., 17(5):2846–2852, 2015.
[182] Rodolfo I Teixeira, Michael Andresini, Renzo Luisi, and Brahim Benyahia. Computer-aided retrosynthesis for
greener and optimal total synthesis of a helicase-primase inhibitor active pharmaceutical ingredient. JACS Au, 4
(11):4263–4272, November 2024.
[183] Filippo Brienza, David Cannella, Diego Montesdeoca, Iwona Cybulska, and Damien P Debecker. A guide to
lignin valorization in biorefineries: traditional, recent, and forthcoming approaches to convert raw lignocellulose
into valuable materials and chemicals. RSC Sustain., 2023.
[184] Alexander Neumann, Lester Marrison, and Raphael Klein. Relevance of the trillion-sized chemical space
“explore” as a source for drug discovery. ACS Medicinal Chemistry Letters, 14(4):466–472, 2023.
[185] Kathryn Klarich, Brian Goldman, Trevor Kramer, Patrick Riley, and W Patrick Walters. Thompson sampling -
an efficient method for searching ultralarge synthesis on demand databases. Journal of Chemical Information
and Modeling, 64(4):1158–1171, 2024.
[186] Tom George Grigg, Mason Burlage, Oliver Brook Scott, Dominique Sydow, and Liam Wilbraham. Active
learning on synthons for molecular design. In ICLR 2025 Workshop on Generative and Experimental Perspectives
for Biomolecular Design, 2025.
66
arXiv Template
A PREPRINT
[187] David E Graff, Eugene I Shakhnovich, and Connor W Coley. Accelerating high-throughput virtual screening
through molecular pool-based active learning. Chemical science, 12(22):7866–7881, 2021.
[188] Saulo H P de Oliveira, Aryan Pedawi, Victor Kenyon, and Henry van den Bedem. Ngt: Generative ai with
synthesizability guarantees discovers mc2r inhibitors from a tera-scale virtual screen. Journal of Medicinal
Chemistry, 67(21):19417–19427, 2024.
[189] Dave Cosgrove. Introducing synthon searching, 2024.
[190] Qi Yuan, Alejandro Santana-Bonilla, Martijn A Zwijnenburg, and Kim E Jelfs. Molecular generation targeting
desired electronic properties via deep generative models. Nanoscale, 12(12):6744–6758, 2020.
[191] John A Arnott and Sonia Lobo Planey. The influence of lipophilicity in drug discovery and design. Expert
opinion on drug discovery, 7(10):863–875, 2012.
[192] Yoshua Bengio, Salem Lahlou, Tristan Deleu, Edward J Hu, Mo Tiwari, and Emmanuel Bengio. Gflownet
foundations. Journal of Machine Learning Research, 24(210):1–55, 2023.
[193] Emmanuel Bengio, Moksh Jain, Maksym Korablyov, Doina Precup, and Yoshua Bengio. Flow network based
generative models for non-iterative diverse candidate generation. Advances in Neural Information Processing
Systems, 34:27381–27394, 2021.
[194] Wenhao Gao, Tianfan Fu, Jimeng Sun, and Connor Coley. Sample efficiency matters: a benchmark for practical
molecular optimization. Advances in neural information processing systems, 35:21342–21357, 2022.
[195] Teague Sterling and John J Irwin. Zinc 15–ligand discovery for everyone. Journal of chemical information and
modeling, 55(11):2324–2337, 2015.
[196] Shitong Luo, Wenhao Gao, Zuofan Wu, Jian Peng, Connor W Coley, and Jianzhu Ma. Projecting molecules into
synthesizable chemical spaces. In International Conference on Machine Learning, pages 33289–33304. PMLR,
2024.
[197] eMolecules. Chemical building blocks.
[198] Xin-Min Zhang, Qing Chang, Lin Zeng, Judy Gu, Stuart Brown, and Ross S Basch. Tblr1 regulates the expression
of nuclear hormone receptor co-repressors. BMC cell biology, 7:1–17, 2006.
[199] Bowen Gao, Haichuan Tan, Yanwen Huang, Minsi Ren, Xiao Huang, Wei-Ying Ma, Ya-Qin Zhang, and
Yanyan Lan. From theory to therapy: Reframing sbdd model evaluation via practical metrics. arXiv preprint
arXiv:2406.08980, 2024.
[200] Dongsung Kim, Lorenz Herdeis, Dorothea Rudolph, Yulei Zhao, Jark Böttcher, Alberto Vides, Carlos I Ayala-
Santos, Yasin Pourfarjam, Antonio Cuevas-Navarro, Jenny Y Xue, et al. Pan-kras inhibitor disables oncogenic
signalling and tumour growth. Nature, 619(7968):160–166, 2023.
[201] Mohit Pandey, Gopeshh Subbaraj, Artem Cherkasov, and Emmanuel Bengio. Pretraining generative flow
networks with inexpensive rewards for molecular graph generation. arXiv preprint arXiv:2503.06337, 2025.
[202] Viet-Khoa Tran-Nguyen, Célien Jacquemard, and Didier Rognan. Lit-pcba: an unbiased data set for machine
learning and virtual screening. Journal of chemical information and modeling, 60(9):4263–4273, 2020.
[203] Jan H Jensen. A graph-based genetic algorithm and generative model/monte carlo tree search for the exploration
of chemical space. Chemical science, 10(12):3567–3572, 2019.
[204] Jordan E Crivelli-Decker, Zane Beckwith, Gary Tom, Ly Le, Sheenam Khuttan, Romelia Salomon-Ferrer,
Jackson Beall, Rafael Gómez-Bombarelli, and Andrea Bortolato. Machine learning guided aqfep: A fast and
efficient absolute free energy perturbation solution for virtual screening. Journal of Chemical Theory and
Computation, 20(16):7188–7198, 2024.
[205] J Harry Moore, Matthias R Bauer, Jeff Guo, Atanas Patronov, Ola Engkvist, and Christian Margreitter. Icolos: a
workflow manager for structure-based post-processing of de novo generated small molecules. Bioinformatics, 38
(21):4951–4952, 2022.
[206] Hannes H Loeffler, Shunzhou Wan, Marco Kl"ahn, Agastya P Bhati, and Peter V Coveney. Optimal molecular
design: Generative active learning combining reinvent with precise binding free energy ranking simulations.
Journal of Chemical Theory and Computation, 20(18):8308–8328, 2024.
[207] Shopnil Akash, Farjana Islam Aovi, Md AK Azad, Ajoy Kumer, Unesco Chakma, Md Rezaul Islam, Nobendu
Mukerjee, Md Mominur Rahman, Imren Bayıl, Summya Rashid, et al. A drug design strategy based on molecular
docking and molecular dynamics simulations applied to development of inhibitor against triple-negative breast
cancer by scutellarein derivatives. PLoS One, 18(10):e0283271, 2023.
67
arXiv Template
A PREPRINT
[208] Julius Seumer and Jan H Jensen. Beyond predefined ligand libraries: A genetic algorithm approach for de novo
discovery of catalysts for the suzuki coupling reactions. PeerJ Physical Chemistry, 7:e34, 2025.
[209] Yang Yu. Towards sample efficient reinforcement learning. In IJCAI, pages 5739–5743, 2018.
[210] Karol Molga, Ewa P Gajewska, Sara Szymku´c, and Bartosz A Grzybowski. The logic of translating chemical
knowledge into machine-processable forms: a modern playground for physical-organic chemistry. Reaction
Chemistry & Engineering, 4(9):1506–1521, 2019.
[211] Zihan Wang, Kangjie Lin, Jianfeng Pei, and Luhua Lai. Reacon: a template-and cluster-based framework for
reaction condition prediction. Chemical Science, 16(2):854–866, 2025.
[212] Jeff Guo, Vendy Fialková, Juan Diego Arango, Christian Margreitter, Jon Paul Janet, Kostas Papadopoulos, Ola
Engkvist, and Atanas Patronov. Improving de novo molecular design with curriculum learning. Nature Machine
Intelligence, 4(6):555–563, 2022.
[213] Maranga Mokaya, Fergus Imrie, Willem P van Hoorn, Aleksandra Kalisz, Anthony R Bradley, and Charlotte M
Deane. Testing the limits of smiles-based de novo molecular generation with curriculum and deep reinforcement
learning. Nature Machine Intelligence, 5(4):386–394, 2023.
[214] James Chen. Mamba no. 5 (a little bit of...). 2024.
[215] Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, Łukasz Kaiser,
and Illia Polosukhin. Attention is all you need. Advances in neural information processing systems, 30, 2017.
[216] Esben Jannik Bjerrum. Smiles enumeration as data augmentation for neural network modeling of molecules.
arXiv preprint arXiv:1703.07076, 2017.
[217] Thomas Blaschke, Ola Engkvist, Jürgen Bajorath, and Hongming Chen. Memory-assisted reinforcement learning
for diverse molecular de novo design. Journal of cheminformatics, 12(1):68, 2020.
[218] Kaori Ando. A mechanistic study of the horner−wadsworth−emmons reaction: Computational inveschstigation on
the reaction pass and the stereochemistry in the reaction of lithium enolate derived from trimethyl phosphonoac-
etate with acetaldehyde. The Journal of Organic Chemistry, 64(18):6815–6821, 1999. doi:10.1021/jo9909150.
[219] Christiane Ehrt, Bennet Krause, Robert Schmidt, Emanuel S. R. Ehmki, and Matthias Rarey. Smarts.plus
– a toolbox for chemical pattern design. Molecular Informatics, 39(12), October 2020. ISSN 1868-1751.
doi:10.1002/minf.202000216.
[220] Peter Eastman, Mark S Friedrichs, John D Chodera, Randall J Radmer, Christopher M Bruns, Joy P Ku, Kyle A
Beauchamp, Thomas J Lane, Lee-Ping Wang, Diwakar Shukla, et al. Openmm 4: a reusable, extensible, hardware
independent library for high performance molecular simulation. Journal of chemical theory and computation, 9
(1):461–469, 2013.
68
